{"id": "2510.18893", "categories": ["cs.DC", "cs.AI", "cs.SE", "I.2.11; D.2.11"], "pdf": "https://arxiv.org/pdf/2510.18893", "abs": "https://arxiv.org/abs/2510.18893", "authors": ["Sergey Pugachev"], "title": "CodeCRDT: Observation-Driven Coordination for Multi-Agent LLM Code Generation", "comment": "11 pages, 3 figures", "summary": "Multi-agent LLM systems fail to realize parallel speedups due to costly\ncoordination. We present CodeCRDT, an observation-driven coordination pattern\nwhere agents coordinate by monitoring a shared state with observable updates\nand deterministic convergence, rather than explicit message passing. Using\nConflict-Free Replicated Data Types (CRDTs), CodeCRDT enables lock-free,\nconflict-free concurrent code generation with strong eventual consistency.\nEvaluation across 600 trials (6 tasks, 50 runs per mode) shows both benefits\nand trade-offs: up to 21.1% speedup on some tasks, up to 39.4% slowdown on\nothers, and 100% convergence with zero merge failures. The study formalizes\nobservation-driven coordination for stochastic LLM agents, revealing semantic\nconflict rates (5-10%) and quality-performance tradeoffs, and provides\nempirical characterization of when parallel coordination succeeds versus fails\nbased on task structure.", "AI": {"tldr": "CodeCRDT\u662f\u4e00\u79cd\u57fa\u4e8e\u89c2\u5bdf\u9a71\u52a8\u7684\u534f\u8c03\u6a21\u5f0f\uff0c\u4f7f\u7528CRDT\u6280\u672f\u5b9e\u73b0\u65e0\u9501\u3001\u65e0\u51b2\u7a81\u7684\u5e76\u884c\u4ee3\u7801\u751f\u6210\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u591a\u667a\u80fd\u4f53LLM\u7cfb\u7edf\u4e2d\u6602\u8d35\u7684\u663e\u5f0f\u6d88\u606f\u4f20\u9012\u534f\u8c03\u6210\u672c\u3002", "motivation": "\u4f20\u7edf\u591a\u667a\u80fd\u4f53LLM\u7cfb\u7edf\u7531\u4e8e\u6602\u8d35\u7684\u534f\u8c03\u6210\u672c\u65e0\u6cd5\u5b9e\u73b0\u5e76\u884c\u52a0\u901f\uff0c\u9700\u8981\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u534f\u8c03\u673a\u5236\u6765\u63d0\u5347\u6027\u80fd\u3002", "method": "\u91c7\u7528\u89c2\u5bdf\u9a71\u52a8\u534f\u8c03\u6a21\u5f0f\uff0c\u901a\u8fc7\u76d1\u63a7\u5177\u6709\u53ef\u89c2\u5bdf\u66f4\u65b0\u548c\u786e\u5b9a\u6027\u6536\u655b\u7684\u5171\u4eab\u72b6\u6001\u6765\u5b9e\u73b0\u534f\u8c03\uff0c\u4f7f\u7528\u51b2\u7a81\u65e0\u5173\u590d\u5236\u6570\u636e\u7c7b\u578b\uff08CRDTs\uff09\u786e\u4fdd\u5f3a\u6700\u7ec8\u4e00\u81f4\u6027\u3002", "result": "\u5728600\u6b21\u8bd5\u9a8c\u4e2d\uff0c\u67d0\u4e9b\u4efb\u52a1\u5b9e\u73b021.1%\u52a0\u901f\uff0c\u5176\u4ed6\u4efb\u52a1\u51fa\u73b039.4%\u51cf\u901f\uff0c\u4f46100%\u6536\u655b\u4e14\u65e0\u5408\u5e76\u5931\u8d25\uff0c\u8bed\u4e49\u51b2\u7a81\u73875-10%\u3002", "conclusion": "\u7814\u7a76\u5f62\u5f0f\u5316\u4e86\u968f\u673aLLM\u667a\u80fd\u4f53\u7684\u89c2\u5bdf\u9a71\u52a8\u534f\u8c03\uff0c\u63ed\u793a\u4e86\u8bed\u4e49\u51b2\u7a81\u7387\u548c\u8d28\u91cf-\u6027\u80fd\u6743\u8861\uff0c\u5e76\u57fa\u4e8e\u4efb\u52a1\u7ed3\u6784\u63d0\u4f9b\u4e86\u5e76\u884c\u534f\u8c03\u6210\u529f\u4e0e\u5931\u8d25\u7684\u5b9e\u8bc1\u7279\u5f81\u3002"}}
{"id": "2510.18897", "categories": ["cs.DC", "cs.AI", "cs.DB", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18897", "abs": "https://arxiv.org/abs/2510.18897", "authors": ["Jacopo Tagliabue"], "title": "AI for Distributed Systems Design: Scalable Cloud Optimization Through Repeated LLMs Sampling And Simulators", "comment": "Pre-print IAAA workshop submission", "summary": "We explore AI-driven distributed-systems policy design by combining\nstochastic code generation from large language models (LLMs) with deterministic\nverification in a domain-specific simulator. Using a Function-as-a-Service\nruntime (Bauplan) and its open-source simulator (Eudoxia) as a case study, we\nframe scheduler design as an iterative generate-and-verify loop: an LLM\nproposes a Python policy, the simulator evaluates it on standardized traces,\nand structured feedback steers subsequent generations. This setup preserves\ninterpretability while enabling targeted search over a large design space. We\ndetail the system architecture and report preliminary results on throughput\nimprovements across multiple models. Beyond early gains, we discuss the limits\nof the current setup and outline next steps; in particular, we conjecture that\nAI will be crucial for scaling this methodology by helping to bootstrap new\nsimulators.", "AI": {"tldr": "\u4f7f\u7528LLM\u751f\u6210\u968f\u673a\u4ee3\u7801\u4e0e\u786e\u5b9a\u6027\u9a8c\u8bc1\u76f8\u7ed3\u5408\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u751f\u6210-\u9a8c\u8bc1\u5faa\u73af\u81ea\u52a8\u8bbe\u8ba1\u5206\u5e03\u5f0f\u7cfb\u7edf\u8c03\u5ea6\u7b56\u7565\uff0c\u5728\u4fdd\u6301\u53ef\u89e3\u91ca\u6027\u7684\u540c\u65f6\u63a2\u7d22\u5927\u89c4\u6a21\u8bbe\u8ba1\u7a7a\u95f4\u3002", "motivation": "\u63a2\u7d22AI\u9a71\u52a8\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7b56\u7565\u8bbe\u8ba1\uff0c\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\u7684\u968f\u673a\u4ee3\u7801\u751f\u6210\u80fd\u529b\u548c\u9886\u57df\u7279\u5b9a\u6a21\u62df\u5668\u7684\u786e\u5b9a\u6027\u9a8c\u8bc1\uff0c\u5b9e\u73b0\u81ea\u52a8\u5316\u7b56\u7565\u4f18\u5316\u3002", "method": "\u91c7\u7528\u8fed\u4ee3\u7684\u751f\u6210-\u9a8c\u8bc1\u5faa\u73af\uff1aLLM\u751f\u6210Python\u7b56\u7565\u4ee3\u7801\uff0c\u6a21\u62df\u5668\u5728\u6807\u51c6\u5316\u8ddf\u8e2a\u4e0a\u8fdb\u884c\u8bc4\u4f30\uff0c\u7ed3\u6784\u5316\u53cd\u9988\u6307\u5bfc\u540e\u7eed\u751f\u6210\uff0c\u4f7f\u7528Bauplan FaaS\u8fd0\u884c\u65f6\u548cEudoxia\u6a21\u62df\u5668\u4f5c\u4e3a\u6848\u4f8b\u7814\u7a76\u3002", "result": "\u5728\u591a\u6a21\u578b\u4e0a\u5b9e\u73b0\u4e86\u541e\u5410\u91cf\u6539\u8fdb\u7684\u521d\u6b65\u7ed3\u679c\uff0c\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u5728\u4fdd\u6301\u53ef\u89e3\u91ca\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u4e86\u5927\u89c4\u6a21\u8bbe\u8ba1\u7a7a\u95f4\u7684\u5b9a\u5411\u641c\u7d22\uff0c\u5e76\u6307\u51faAI\u5728\u6269\u5c55\u8be5\u65b9\u6cd5\u8bba\u65b9\u9762\u5c06\u53d1\u6325\u5173\u952e\u4f5c\u7528\uff0c\u7279\u522b\u662f\u5e2e\u52a9\u5f15\u5bfc\u65b0\u6a21\u62df\u5668\u7684\u5f00\u53d1\u3002"}}
{"id": "2510.19012", "categories": ["cs.DC", "cs.DB", "cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19012", "abs": "https://arxiv.org/abs/2510.19012", "authors": ["Ivan Borodii", "Illia Fedorovych", "Halyna Osukhivska", "Diana Velychko", "Roman Butsii"], "title": "Comparative analysis of large data processing in Apache Spark using Java, Python and Scala", "comment": "CITI 2025, 3rd International Workshop on Computer Information\n  Technologies in Industry 4.0, June 11-12, 2025, Ternopil, Ukraine. The\n  article includes 10 pages, 5 figures, 9 tables", "summary": "During the study, the results of a comparative analysis of the process of\nhandling large datasets using the Apache Spark platform in Java, Python, and\nScala programming languages were obtained. Although prior works have focused on\nindividual stages, comprehensive comparisons of full ETL workflows across\nprogramming languages using Apache Iceberg remain limited. The analysis was\nperformed by executing several operations, including downloading data from CSV\nfiles, transforming and loading it into an Apache Iceberg analytical table. It\nwas found that the performance of the Spark algorithm varies significantly\ndepending on the amount of data and the programming language used. When\nprocessing a 5-megabyte CSV file, the best result was achieved in Python: 6.71\nseconds, which is superior to Scala's score of 9.13 seconds and Java's time of\n9.62 seconds. For processing a large CSV file of 1.6 gigabytes, all programming\nlanguages demonstrated similar results: the fastest performance was showed in\nPython: 46.34 seconds, while Scala and Java showed results of 47.72 and 50.56\nseconds, respectively. When performing a more complex operation that involved\ncombining two CSV files into a single dataset for further loading into an\nApache Iceberg table, Scala demonstrated the highest performance, at 374.42\nseconds. Java processing was completed in 379.8 seconds, while Python was the\nleast efficient, with a runtime of 398.32 seconds. It follows that the\nprogramming language significantly affects the efficiency of data processing by\nthe Apache Spark algorithm, with Scala and Java being more productive for\nprocessing large amounts of data and complex operations, while Python\ndemonstrates an advantage in working with small amounts of data. The results\nobtained can be useful for optimizing data handling processes depending on\nspecific performance requirements and the amount of information being\nprocessed.", "AI": {"tldr": "\u8be5\u7814\u7a76\u6bd4\u8f83\u4e86\u5728Apache Spark\u5e73\u53f0\u4e0a\u4f7f\u7528Java\u3001Python\u548cScala\u5904\u7406\u5927\u6570\u636e\u96c6\u7684\u6027\u80fd\u5dee\u5f02\u3002\u7ed3\u679c\u663e\u793a\uff0c\u5bf9\u4e8e\u5c0f\u6570\u636e\u96c6Python\u8868\u73b0\u6700\u4f73\uff0c\u800c\u5bf9\u4e8e\u590d\u6742\u64cd\u4f5c\u548c\u5927\u6570\u636e\u96c6\uff0cScala\u548cJava\u66f4\u9ad8\u6548\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u5355\u4e2a\u5904\u7406\u9636\u6bb5\uff0c\u7f3a\u4e4f\u5bf9\u5b8c\u6574ETL\u5de5\u4f5c\u6d41\u7a0b\u5728\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u4e0b\u7684\u5168\u9762\u6bd4\u8f83\uff0c\u7279\u522b\u662f\u5728\u4f7f\u7528Apache Iceberg\u7684\u60c5\u51b5\u4e0b\u3002", "method": "\u901a\u8fc7\u6267\u884c\u4eceCSV\u6587\u4ef6\u4e0b\u8f7d\u6570\u636e\u3001\u8f6c\u6362\u5e76\u52a0\u8f7d\u5230Apache Iceberg\u5206\u6790\u8868\u7b49\u64cd\u4f5c\uff0c\u6bd4\u8f83\u4e09\u79cd\u7f16\u7a0b\u8bed\u8a00\u5728Spark\u5e73\u53f0\u4e0a\u7684\u6027\u80fd\u8868\u73b0\u3002", "result": "\u5904\u74065MB CSV\u6587\u4ef6\u65f6Python\u6700\u5feb(6.71\u79d2)\uff0c\u5904\u74061.6GB\u6587\u4ef6\u65f6\u4e09\u79cd\u8bed\u8a00\u6027\u80fd\u76f8\u8fd1(Python 46.34\u79d2\u6700\u5feb)\uff0c\u590d\u6742\u64cd\u4f5c\u65f6Scala\u6700\u4f18(374.42\u79d2)\u3002", "conclusion": "\u7f16\u7a0b\u8bed\u8a00\u663e\u8457\u5f71\u54cdSpark\u6570\u636e\u5904\u7406\u6548\u7387\uff1aPython\u5728\u5c0f\u6570\u636e\u5904\u7406\u4e0a\u6709\u4f18\u52bf\uff0cScala\u548cJava\u5728\u590d\u6742\u64cd\u4f5c\u548c\u5927\u6570\u636e\u5904\u7406\u4e0a\u66f4\u9ad8\u6548\u3002"}}
{"id": "2510.19151", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.19151", "abs": "https://arxiv.org/abs/2510.19151", "authors": ["Seri Khoury", "Manish Purohit", "Aaron Schild", "Joshua Wang"], "title": "On the Randomized Locality of Matching Problems in Regular Graphs", "comment": "DISC 2025. Abstract modified for arXiv", "summary": "The main goal in distributed symmetry-breaking is to understand the locality\nof problems; i.e., the radius of the neighborhood that a node needs to explore\nin order to arrive at its part of a global solution. In this work, we study the\nlocality of matching problems in the family of regular graphs, which is one of\nthe main benchmarks for establishing lower bounds on the locality of\nsymmetry-breaking problems, as well as for obtaining classification results.\nFor approximate matching, we develop randomized algorithms to show that $(1 +\n\\epsilon)$-approximate matching in regular graphs is truly local; i.e., the\nlocality depends only on $\\epsilon$ and is independent of all other graph\nparameters. Furthermore, as long as the degree $\\Delta$ is not very small\n(namely, as long as $\\Delta \\geq \\text{poly}(1/\\epsilon)$), this dependence is\nonly logarithmic in $1/\\epsilon$. This stands in sharp contrast to maximal\nmatching in regular graphs which requires some dependence on the number of\nnodes $n$ or the degree $\\Delta$. We show matching lower bounds for both\nresults. For maximal matching, our techniques further allow us to establish a\nstrong separation between the node-averaged complexity and worst-case\ncomplexity of maximal matching in regular graphs, by showing that the former is\nonly $O(1)$. Central to our main technical contribution is a novel\nmartingale-based analysis for the $\\approx 40$-year-old algorithm by Luby. In\nparticular, our analysis shows that applying one round of Luby's algorithm on\nthe line graph of a $\\Delta$-regular graph results in an almost\n$\\Delta/2$-regular graph.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u4e86\u6b63\u5219\u56fe\u4e2d\u5339\u914d\u95ee\u9898\u7684\u5c40\u90e8\u6027\uff0c\u5c55\u793a\u4e86(1+\u03b5)-\u8fd1\u4f3c\u5339\u914d\u662f\u771f\u6b63\u5c40\u90e8\u7684\u95ee\u9898\uff0c\u800c\u6700\u5927\u5339\u914d\u5219\u9700\u8981\u4f9d\u8d56\u8282\u70b9\u6570\u6216\u5ea6\u6570\u3002\u540c\u65f6\u63ed\u793a\u4e86\u6700\u5927\u5339\u914d\u7684\u8282\u70b9\u5e73\u5747\u590d\u6742\u5ea6\u548c\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e4b\u95f4\u7684\u5f3a\u5206\u79bb\u3002", "motivation": "\u7814\u7a76\u5206\u5e03\u5f0f\u5bf9\u79f0\u6027\u7834\u574f\u95ee\u9898\u4e2d\u7684\u5c40\u90e8\u6027\uff0c\u7279\u522b\u662f\u5728\u6b63\u5219\u56fe\u8fd9\u4e00\u91cd\u8981\u57fa\u51c6\u65cf\u4e2d\uff0c\u7406\u89e3\u8282\u70b9\u9700\u8981\u63a2\u7d22\u7684\u90bb\u57df\u534a\u5f84\u6765\u83b7\u5f97\u5168\u5c40\u89e3\u51b3\u65b9\u6848\u7684\u90e8\u5206\u3002", "method": "\u5f00\u53d1\u968f\u673a\u5316\u7b97\u6cd5\uff0c\u4f7f\u7528\u57fa\u4e8e\u9785\u7684\u65b0\u9896\u5206\u6790\u65b9\u6cd5\u6765\u5206\u6790Luby\u768440\u5e74\u5386\u53f2\u7b97\u6cd5\uff0c\u8bc1\u660e\u5728\u0394-\u6b63\u5219\u56fe\u7684\u7ebf\u56fe\u4e0a\u5e94\u7528\u4e00\u8f6eLuby\u7b97\u6cd5\u4f1a\u4ea7\u751f\u51e0\u4e4e\u0394/2-\u6b63\u5219\u7684\u56fe\u3002", "result": "(1+\u03b5)-\u8fd1\u4f3c\u5339\u914d\u5728\u6b63\u5219\u56fe\u4e2d\u662f\u771f\u6b63\u5c40\u90e8\u7684\uff0c\u4ec5\u4f9d\u8d56\u4e8e\u03b5\uff1b\u5f53\u0394\u2265poly(1/\u03b5)\u65f6\uff0c\u8fd9\u79cd\u4f9d\u8d56\u662f\u5bf9\u6570\u7ea7\u7684\u3002\u6700\u5927\u5339\u914d\u7684\u8282\u70b9\u5e73\u5747\u590d\u6742\u5ea6\u4ec5\u4e3aO(1)\uff0c\u4e0e\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u5f62\u6210\u5f3a\u5206\u79bb\u3002", "conclusion": "\u5728\u6b63\u5219\u56fe\u4e2d\uff0c\u8fd1\u4f3c\u5339\u914d\u5177\u6709\u771f\u6b63\u5c40\u90e8\u6027\uff0c\u800c\u6700\u5927\u5339\u914d\u7684\u5c40\u90e8\u6027\u9700\u8981\u4f9d\u8d56\u56fe\u53c2\u6570\u3002\u8282\u70b9\u5e73\u5747\u590d\u6742\u5ea6\u548c\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e4b\u95f4\u5b58\u5728\u663e\u8457\u5dee\u5f02\uff0c\u8fd9\u4e3a\u5206\u5e03\u5f0f\u5bf9\u79f0\u6027\u7834\u574f\u95ee\u9898\u7684\u5206\u7c7b\u63d0\u4f9b\u4e86\u91cd\u8981\u89c1\u89e3\u3002"}}
{"id": "2510.19225", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.19225", "abs": "https://arxiv.org/abs/2510.19225", "authors": ["Yongji Wu", "Xueshen Liu", "Haizhong Zheng", "Juncheng Gu", "Beidi Chen", "Z. Morley Mao", "Arvind Krishnamurthy", "Ion Stoica"], "title": "RLBoost: Harvesting Preemptible Resources for Cost-Efficient Reinforcement Learning on LLMs", "comment": null, "summary": "Reinforcement learning (RL) has become essential for unlocking advanced\nreasoning capabilities in large language models (LLMs). RL workflows involve\ninterleaving rollout and training stages with fundamentally different resource\nrequirements. Rollout typically dominates overall execution time, yet scales\nefficiently through multiple independent instances. In contrast, training\nrequires tightly-coupled GPUs with full-mesh communication. Existing RL\nframeworks fall into two categories: co-located and disaggregated\narchitectures. Co-located ones fail to address this resource tension by forcing\nboth stages to share the same GPUs. Disaggregated architectures, without\nmodifications of well-established RL algorithms, suffer from resource\nunder-utilization. Meanwhile, preemptible GPU resources, i.e., spot instances\non public clouds and spare capacity in production clusters, present significant\ncost-saving opportunities for accelerating RL workflows, if efficiently\nharvested for rollout.\n  In this paper, we present RLBoost, a systematic solution for cost-efficient\nRL training that harvests preemptible GPU resources. Our key insight is that\nrollout's stateless and embarrassingly parallel nature aligns perfectly with\npreemptible and often fragmented resources. To efficiently utilize these\nresources despite frequent and unpredictable availability changes, RLBoost\nadopts a hybrid architecture with three key techniques: (1) adaptive rollout\noffload to dynamically adjust workloads on the reserved (on-demand) cluster,\n(2) pull-based weight transfer that quickly provisions newly available\ninstances, and (3) token-level response collection and migration for efficient\npreemption handling and continuous load balancing. Extensive experiments show\nRLBoost increases training throughput by 1.51x-1.97x while improving cost\nefficiency by 28%-49% compared to using only on-demand GPU resources.", "AI": {"tldr": "RLBoost\u662f\u4e00\u4e2a\u5229\u7528\u62a2\u5360\u5f0fGPU\u8d44\u6e90\u8fdb\u884c\u6210\u672c\u9ad8\u6548\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u7684\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\uff0c\u901a\u8fc7\u6df7\u5408\u67b6\u6784\u548c\u4e09\u9879\u5173\u952e\u6280\u672f\uff0c\u663e\u8457\u63d0\u5347\u8bad\u7ec3\u541e\u5410\u91cf\u548c\u6210\u672c\u6548\u7387\u3002", "motivation": "\u73b0\u6709RL\u6846\u67b6\u65e0\u6cd5\u6709\u6548\u89e3\u51b3\u5f3a\u5316\u5b66\u4e60\u4e2drollout\u548c\u8bad\u7ec3\u9636\u6bb5\u8d44\u6e90\u9700\u6c42\u5dee\u5f02\u7684\u77db\u76fe\uff0c\u540c\u65f6\u62a2\u5360\u5f0fGPU\u8d44\u6e90\u63d0\u4f9b\u4e86\u663e\u8457\u7684\u6210\u672c\u8282\u7ea6\u673a\u4f1a\u4f46\u672a\u88ab\u5145\u5206\u5229\u7528\u3002", "method": "\u91c7\u7528\u6df7\u5408\u67b6\u6784\uff0c\u5305\u542b\u4e09\u9879\u5173\u952e\u6280\u672f\uff1a\u81ea\u9002\u5e94rollout\u5378\u8f7d\u3001\u57fa\u4e8e\u62c9\u53d6\u7684\u6743\u91cd\u4f20\u8f93\u3001\u4ee4\u724c\u7ea7\u54cd\u5e94\u6536\u96c6\u548c\u8fc1\u79fb\u3002", "result": "\u5b9e\u9a8c\u663e\u793aRLBoost\u5c06\u8bad\u7ec3\u541e\u5410\u91cf\u63d0\u53471.51x-1.97x\uff0c\u6210\u672c\u6548\u7387\u63d0\u9ad828%-49%\u3002", "conclusion": "RLBoost\u901a\u8fc7\u6709\u6548\u5229\u7528\u62a2\u5360\u5f0fGPU\u8d44\u6e90\uff0c\u6210\u529f\u89e3\u51b3\u4e86RL\u8bad\u7ec3\u4e2d\u7684\u8d44\u6e90\u5229\u7528\u6548\u7387\u95ee\u9898\uff0c\u5b9e\u73b0\u4e86\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\u548c\u6210\u672c\u8282\u7ea6\u3002"}}
{"id": "2510.18895", "categories": ["cs.SE", "cs.AI", "cs.HC"], "pdf": "https://arxiv.org/pdf/2510.18895", "abs": "https://arxiv.org/abs/2510.18895", "authors": ["Santhosh Kumar Ravindran"], "title": "CosmoCore Affective Dream-Replay Reinforcement Learning for Code Generation", "comment": "12 pages", "summary": "We introduce CosmoCore, a neuroscience-inspired reinforcement learning (RL)\narchitecture that integrates affective signals to enhance code generation in\nlarge language models (LLMs). Motivated by human and animal learning where\nembarrassment from mistakes drives rapid correction, as observed in training a\npuppy to avoid repeating errors after a single scolding CosmoCore tags code\ngeneration trajectories with valence and surprise using a lightweight\nmulti-layer perceptron (MLP). High-negative valence (cringe) episodes, such as\nbuggy code outputs, are prioritized in a Dream Queue for five-fold replay\nduring off-policy updates, while low-surprise successes are pruned to prevent\noverconfidence and buffer bloat. Evaluated on code generation benchmarks like\nHumanEval and BigCodeBench, alongside simulations with a custom data pipeline\nenvironment, CosmoCore reduces hallucinated code (e.g., syntax errors or\nlogical bugs) by 48\\% and accelerates self-correction by 45\\%. Local\nexperiments using Hugging Face models in a PySpark environment validate these\ngains, with code snippets provided for replication. Ablations confirm valence\ntagging boosts curiosity in exploration, and pruning mitigates inefficiency.\nThis framework extends RL from human feedback (RLHF) for more emotionally aware\ncode assistants, with applications in IDEs and data pipelines. Code and the\ncustom mini-world simulation are released.", "AI": {"tldr": "CosmoCore\u662f\u4e00\u79cd\u53d7\u795e\u7ecf\u79d1\u5b66\u542f\u53d1\u7684\u5f3a\u5316\u5b66\u4e60\u67b6\u6784\uff0c\u901a\u8fc7\u6574\u5408\u60c5\u611f\u4fe1\u53f7\u6765\u589e\u5f3a\u5927\u8bed\u8a00\u6a21\u578b\u7684\u4ee3\u7801\u751f\u6210\u80fd\u529b\uff0c\u663e\u8457\u51cf\u5c11\u5e7b\u89c9\u4ee3\u7801\u5e76\u52a0\u901f\u81ea\u6211\u4fee\u6b63\u3002", "motivation": "\u53d7\u4eba\u7c7b\u548c\u52a8\u7269\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u56e0\u9519\u8bef\u611f\u5230\u5c34\u5c2c\u800c\u5feb\u901f\u7ea0\u6b63\u7684\u542f\u53d1\uff0c\u7c7b\u4f3c\u4e8e\u8bad\u7ec3\u5c0f\u72d7\u5728\u53d7\u5230\u4e00\u6b21\u8d23\u5907\u540e\u907f\u514d\u91cd\u590d\u9519\u8bef\uff0c\u65e8\u5728\u901a\u8fc7\u60c5\u611f\u4fe1\u53f7\u63d0\u5347\u4ee3\u7801\u751f\u6210\u8d28\u91cf\u3002", "method": "\u4f7f\u7528\u8f7b\u91cf\u7ea7\u591a\u5c42\u611f\u77e5\u673a\u4e3a\u4ee3\u7801\u751f\u6210\u8f68\u8ff9\u6807\u8bb0\u60c5\u611f\u4ef7\u503c\u548c\u60ca\u559c\u5ea6\uff0c\u5c06\u9ad8\u8d1f\u4ef7\u503c\uff08\u5c34\u5c2c\uff09\u7684\u4ee3\u7801\u7247\u6bb5\u4f18\u5148\u5728Dream Queue\u4e2d\u8fdb\u884c\u4e94\u500d\u91cd\u653e\uff0c\u540c\u65f6\u4fee\u526a\u4f4e\u60ca\u559c\u5ea6\u7684\u6210\u529f\u6848\u4f8b\u4ee5\u9632\u6b62\u8fc7\u5ea6\u81ea\u4fe1\u548c\u7f13\u51b2\u533a\u81a8\u80c0\u3002", "result": "\u5728HumanEval\u548cBigCodeBench\u7b49\u4ee3\u7801\u751f\u6210\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cCosmoCore\u5c06\u5e7b\u89c9\u4ee3\u7801\uff08\u5982\u8bed\u6cd5\u9519\u8bef\u6216\u903b\u8f91\u9519\u8bef\uff09\u51cf\u5c11\u4e8648%\uff0c\u5e76\u5c06\u81ea\u6211\u4fee\u6b63\u901f\u5ea6\u63d0\u9ad8\u4e8645%\u3002", "conclusion": "\u8be5\u6846\u67b6\u6269\u5c55\u4e86\u57fa\u4e8e\u4eba\u7c7b\u53cd\u9988\u7684\u5f3a\u5316\u5b66\u4e60\uff0c\u4e3a\u4ee3\u7801\u52a9\u624b\u63d0\u4f9b\u4e86\u66f4\u60c5\u611f\u611f\u77e5\u7684\u80fd\u529b\uff0c\u9002\u7528\u4e8eIDE\u548c\u6570\u636e\u7ba1\u9053\u7b49\u573a\u666f\u3002"}}
{"id": "2510.19025", "categories": ["cs.DB", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.19025", "abs": "https://arxiv.org/abs/2510.19025", "authors": ["Hamed Jelodar", "Samita Bai", "Roozbeh Razavi-Far", "Ali A. Ghorbani"], "title": "FlexiDataGen: An Adaptive LLM Framework for Dynamic Semantic Dataset Generation in Sensitive Domains", "comment": null, "summary": "Dataset availability and quality remain critical challenges in machine\nlearning, especially in domains where data are scarce, expensive to acquire, or\nconstrained by privacy regulations. Fields such as healthcare, biomedical\nresearch, and cybersecurity frequently encounter high data acquisition costs,\nlimited access to annotated data, and the rarity or sensitivity of key events.\nThese issues-collectively referred to as the dataset challenge-hinder the\ndevelopment of accurate and generalizable machine learning models in such\nhigh-stakes domains. To address this, we introduce FlexiDataGen, an adaptive\nlarge language model (LLM) framework designed for dynamic semantic dataset\ngeneration in sensitive domains. FlexiDataGen autonomously synthesizes rich,\nsemantically coherent, and linguistically diverse datasets tailored to\nspecialized fields. The framework integrates four core components: (1)\nsyntactic-semantic analysis, (2) retrieval-augmented generation, (3) dynamic\nelement injection, and (4) iterative paraphrasing with semantic validation.\nTogether, these components ensure the generation of high-quality,\ndomain-relevant data. Experimental results show that FlexiDataGen effectively\nalleviates data shortages and annotation bottlenecks, enabling scalable and\naccurate machine learning model development.", "AI": {"tldr": "FlexiDataGen\u662f\u4e00\u4e2a\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u52a8\u6001\u8bed\u4e49\u6570\u636e\u96c6\u751f\u6210\u6846\u67b6\uff0c\u7528\u4e8e\u89e3\u51b3\u654f\u611f\u9886\u57df\u4e2d\u6570\u636e\u7a00\u7f3a\u3001\u83b7\u53d6\u6210\u672c\u9ad8\u548c\u9690\u79c1\u9650\u5236\u7b49\u6311\u6218\u3002", "motivation": "\u5728\u533b\u7597\u3001\u751f\u7269\u533b\u5b66\u7814\u7a76\u548c\u7f51\u7edc\u5b89\u5168\u7b49\u9886\u57df\uff0c\u6570\u636e\u83b7\u53d6\u6210\u672c\u9ad8\u3001\u6807\u6ce8\u6570\u636e\u6709\u9650\u3001\u5173\u952e\u4e8b\u4ef6\u7f55\u89c1\u6216\u654f\u611f\uff0c\u8fd9\u4e9b\u95ee\u9898\u963b\u788d\u4e86\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u5f00\u53d1\u548c\u6cdb\u5316\u80fd\u529b\u3002", "method": "\u6846\u67b6\u5305\u542b\u56db\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a\u53e5\u6cd5\u8bed\u4e49\u5206\u6790\u3001\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u3001\u52a8\u6001\u5143\u7d20\u6ce8\u5165\u3001\u4ee5\u53ca\u5e26\u8bed\u4e49\u9a8c\u8bc1\u7684\u8fed\u4ee3\u6539\u5199\uff0c\u786e\u4fdd\u751f\u6210\u9ad8\u8d28\u91cf\u3001\u9886\u57df\u76f8\u5173\u7684\u6570\u636e\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cFlexiDataGen\u6709\u6548\u7f13\u89e3\u4e86\u6570\u636e\u77ed\u7f3a\u548c\u6807\u6ce8\u74f6\u9888\uff0c\u652f\u6301\u53ef\u6269\u5c55\u4e14\u51c6\u786e\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5f00\u53d1\u3002", "conclusion": "FlexiDataGen\u4e3a\u654f\u611f\u9886\u57df\u63d0\u4f9b\u4e86\u4e00\u79cd\u81ea\u9002\u5e94\u3001\u52a8\u6001\u751f\u6210\u8bed\u4e49\u8fde\u8d2f\u4e14\u8bed\u8a00\u591a\u6837\u6570\u636e\u96c6\u7684\u6709\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.19262", "categories": ["cs.DC", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.19262", "abs": "https://arxiv.org/abs/2510.19262", "authors": ["Heng Xu", "Zhiwei Yu", "Chengze Du", "Ying Zhou", "Letian Li", "Haojie Wang", "Weiqiang Cheng", "Jialong Li"], "title": "RailS: Load Balancing for All-to-All Communication in Distributed Mixture-of-Experts Training", "comment": null, "summary": "Training Mixture-of-Experts (MoE) models introduces sparse and highly\nimbalanced all-to-all communication that dominates iteration time. Conventional\nload-balancing methods fail to exploit the deterministic topology of Rail\narchitectures, leaving multi-NIC bandwidth underutilized. We present RailS, a\ndistributed load-balancing framework that minimizes all-to-all completion time\nin MoE training. RailS leverages the Rail topology's symmetry to prove that\nuniform sending ensures uniform receiving, transforming global coordination\ninto local scheduling. Each node independently executes a Longest Processing\nTime First (LPT) spraying scheduler to proactively balance traffic using local\ninformation. RailS activates N parallel rails for fine-grained, topology-aware\nmultipath transmission. Across synthetic and real-world MoE workloads, RailS\nimproves bus bandwidth by 20%--78% and reduces completion time by 17%--78%. For\nMixtral workloads, it shortens iteration time by 18%--40% and achieves\nnear-optimal load balance, fully exploiting architectural parallelism in\ndistributed training.", "AI": {"tldr": "RailS\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8d1f\u8f7d\u5747\u8861\u6846\u67b6\uff0c\u901a\u8fc7\u5229\u7528Rail\u62d3\u6251\u7684\u5bf9\u79f0\u6027\uff0c\u5c06\u5168\u5c40\u534f\u8c03\u8f6c\u5316\u4e3a\u672c\u5730\u8c03\u5ea6\uff0c\u4f7f\u7528LPT\u55b7\u6d12\u8c03\u5ea6\u5668\u4e3b\u52a8\u5e73\u8861\u6d41\u91cf\uff0c\u663e\u8457\u63d0\u5347MoE\u8bad\u7ec3\u4e2d\u7684all-to-all\u901a\u4fe1\u6027\u80fd\u3002", "motivation": "MoE\u6a21\u578b\u8bad\u7ec3\u4e2d\u7684\u7a00\u758f\u4e14\u9ad8\u5ea6\u4e0d\u5e73\u8861\u7684all-to-all\u901a\u4fe1\u4e3b\u5bfc\u4e86\u8fed\u4ee3\u65f6\u95f4\uff0c\u4f20\u7edf\u8d1f\u8f7d\u5747\u8861\u65b9\u6cd5\u65e0\u6cd5\u5145\u5206\u5229\u7528Rail\u67b6\u6784\u7684\u786e\u5b9a\u6027\u62d3\u6251\uff0c\u5bfc\u81f4\u591aNIC\u5e26\u5bbd\u5229\u7528\u4e0d\u8db3\u3002", "method": "\u5229\u7528Rail\u62d3\u6251\u7684\u5bf9\u79f0\u6027\u8bc1\u660e\u5747\u5300\u53d1\u9001\u786e\u4fdd\u5747\u5300\u63a5\u6536\uff0c\u6bcf\u4e2a\u8282\u70b9\u72ec\u7acb\u6267\u884cLPT\u55b7\u6d12\u8c03\u5ea6\u5668\u4f7f\u7528\u672c\u5730\u4fe1\u606f\u4e3b\u52a8\u5e73\u8861\u6d41\u91cf\uff0c\u6fc0\u6d3bN\u4e2a\u5e76\u884crail\u8fdb\u884c\u7ec6\u7c92\u5ea6\u3001\u62d3\u6251\u611f\u77e5\u7684\u591a\u8def\u5f84\u4f20\u8f93\u3002", "result": "\u5728\u5408\u6210\u548c\u771f\u5b9eMoE\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\uff0cRailS\u5c06\u603b\u7ebf\u5e26\u5bbd\u63d0\u534720%-78%\uff0c\u5b8c\u6210\u65f6\u95f4\u51cf\u5c1117%-78%\u3002\u5bf9\u4e8eMixtral\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fed\u4ee3\u65f6\u95f4\u7f29\u77ed18%-40%\uff0c\u5b9e\u73b0\u63a5\u8fd1\u6700\u4f18\u7684\u8d1f\u8f7d\u5747\u8861\u3002", "conclusion": "RailS\u80fd\u591f\u5145\u5206\u5229\u7528\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\u7684\u67b6\u6784\u5e76\u884c\u6027\uff0c\u663e\u8457\u6539\u5584MoE\u8bad\u7ec3\u4e2d\u7684\u901a\u4fe1\u6027\u80fd\u3002"}}
{"id": "2510.18923", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18923", "abs": "https://arxiv.org/abs/2510.18923", "authors": ["Eduard Frankford", "Tobias Antensteiner", "Michael Vierhauser", "Clemens Sauerwein", "Vivien Wallner", "Iris Groher", "Reinhold Pl\u00f6sch", "Ruth Breu"], "title": "A Survey on Feedback Types in Automated Programming Assessment Systems", "comment": null, "summary": "With the recent rapid increase in digitization across all major industries,\nacquiring programming skills has increased the demand for introductory\nprogramming courses. This has further resulted in universities integrating\nprogramming courses into a wide range of curricula, including not only\ntechnical studies but also business and management fields of study.\n  Consequently, additional resources are needed for teaching, grading, and\ntutoring students with diverse educational backgrounds and skills. As part of\nthis, Automated Programming Assessment Systems (APASs) have emerged, providing\nscalable and high-quality assessment systems with efficient evaluation and\ninstant feedback. Commonly, APASs heavily rely on predefined unit tests for\ngenerating feedback, often limiting the scope and level of detail of feedback\nthat can be provided to students. With the rise of Large Language Models (LLMs)\nin recent years, new opportunities have emerged as these technologies can\nenhance feedback quality and personalization.\n  To investigate how different feedback mechanisms in APASs are perceived by\nstudents, and how effective they are in supporting problem-solving, we have\nconducted a large-scale study with over 200 students from two different\nuniversities. Specifically, we compare baseline Compiler Feedback, standard\nUnit Test Feedback, and advanced LLM-based Feedback regarding perceived quality\nand impact on student performance.\n  Results indicate that while students rate unit test feedback as the most\nhelpful, AI-generated feedback leads to significantly better performances.\nThese findings suggest combining unit tests and AI-driven guidance to optimize\nautomated feedback mechanisms and improve learning outcomes in programming\neducation.", "AI": {"tldr": "\u8be5\u7814\u7a76\u6bd4\u8f83\u4e86\u4e09\u79cd\u7f16\u7a0b\u81ea\u52a8\u8bc4\u4f30\u7cfb\u7edf\u7684\u53cd\u9988\u673a\u5236\uff1a\u7f16\u8bd1\u5668\u53cd\u9988\u3001\u5355\u5143\u6d4b\u8bd5\u53cd\u9988\u548c\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684AI\u53cd\u9988\u3002\u7814\u7a76\u53d1\u73b0\u867d\u7136\u5b66\u751f\u8ba4\u4e3a\u5355\u5143\u6d4b\u8bd5\u53cd\u9988\u6700\u6709\u5e2e\u52a9\uff0c\u4f46AI\u53cd\u9988\u80fd\u5e26\u6765\u66f4\u597d\u7684\u5b66\u4e60\u8868\u73b0\u3002", "motivation": "\u968f\u7740\u7f16\u7a0b\u8bfe\u7a0b\u9700\u6c42\u7684\u589e\u52a0\uff0c\u9700\u8981\u66f4\u6709\u6548\u7684\u81ea\u52a8\u8bc4\u4f30\u7cfb\u7edf\u3002\u4f20\u7edfAPAS\u4e3b\u8981\u4f9d\u8d56\u9884\u5b9a\u4e49\u5355\u5143\u6d4b\u8bd5\uff0c\u53cd\u9988\u8303\u56f4\u6709\u9650\u3002\u5927\u8bed\u8a00\u6a21\u578b\u7684\u51fa\u73b0\u4e3a\u63d0\u5347\u53cd\u9988\u8d28\u91cf\u548c\u4e2a\u6027\u5316\u63d0\u4f9b\u4e86\u65b0\u673a\u4f1a\u3002", "method": "\u5728\u4e24\u6240\u5927\u5b66\u5bf9200\u591a\u540d\u5b66\u751f\u8fdb\u884c\u5927\u89c4\u6a21\u7814\u7a76\uff0c\u6bd4\u8f83\u7f16\u8bd1\u5668\u53cd\u9988\u3001\u6807\u51c6\u5355\u5143\u6d4b\u8bd5\u53cd\u9988\u548c\u5148\u8fdb\u7684\u57fa\u4e8eLLM\u7684\u53cd\u9988\u5728\u611f\u77e5\u8d28\u91cf\u548c\u5b66\u751f\u8868\u73b0\u65b9\u9762\u7684\u5f71\u54cd\u3002", "result": "\u5b66\u751f\u8bc4\u4ef7\u5355\u5143\u6d4b\u8bd5\u53cd\u9988\u6700\u6709\u5e2e\u52a9\uff0c\u4f46AI\u751f\u6210\u7684\u53cd\u9988\u80fd\u663e\u8457\u63d0\u9ad8\u5b66\u751f\u8868\u73b0\u3002", "conclusion": "\u5efa\u8bae\u7ed3\u5408\u5355\u5143\u6d4b\u8bd5\u548cAI\u9a71\u52a8\u7684\u6307\u5bfc\u6765\u4f18\u5316\u81ea\u52a8\u53cd\u9988\u673a\u5236\uff0c\u6539\u5584\u7f16\u7a0b\u6559\u80b2\u7684\u5b66\u4e60\u6210\u679c\u3002"}}
{"id": "2510.19197", "categories": ["cs.DB", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.19197", "abs": "https://arxiv.org/abs/2510.19197", "authors": ["Nofar Carmeli", "Nikolaos Tziavelis"], "title": "Fine-Grained Dichotomies for Conjunctive Queries with Minimum or Maximum", "comment": null, "summary": "We investigate the fine-grained complexity of direct access to Conjunctive\nQuery (CQ) answers according to their position, ordered by the minimum (or\nmaximum) value between attributes. We further use the tools we develop to\nexplore a wealth of related tasks. We consider the task of ranked enumeration\nunder min/max orders, as well as tasks concerning CQs with predicates of the\nform x <= min X , where X is a set of variables and x is a single variable:\ncounting, enumeration, direct access, and predicate elimination (i.e.,\ntransforming the pair of query and database to an equivalent pair without\nmin-predicates). For each task, we establish a complete dichotomy for\nself-join-free CQs, precisely identifying the cases that are solvable in\nnear-ideal time, i.e., (quasi)linear preprocessing time followed by constant or\nlogarithmic time per output.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u5728\u6700\u5c0f/\u6700\u5927\u503c\u6392\u5e8f\u4e0b\u76f4\u63a5\u8bbf\u95ee\u5408\u53d6\u67e5\u8be2(CQ)\u7b54\u6848\u7684\u7ec6\u7c92\u5ea6\u590d\u6742\u6027\uff0c\u5e76\u63a2\u7d22\u4e86\u76f8\u5173\u4efb\u52a1\uff0c\u5305\u62ec\u6392\u5e8f\u679a\u4e3e\u3001\u8ba1\u6570\u3001\u679a\u4e3e\u3001\u76f4\u63a5\u8bbf\u95ee\u548c\u8c13\u8bcd\u6d88\u9664\u3002", "motivation": "\u7814\u7a76\u5408\u53d6\u67e5\u8be2\u5728\u6700\u5c0f/\u6700\u5927\u503c\u6392\u5e8f\u4e0b\u7684\u76f4\u63a5\u8bbf\u95ee\u590d\u6742\u6027\uff0c\u4ee5\u53ca\u76f8\u5173\u4efb\u52a1\u7684\u6548\u7387\u8fb9\u754c\uff0c\u4e3a\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316\u63d0\u4f9b\u7406\u8bba\u57fa\u7840\u3002", "method": "\u4f7f\u7528\u7ec6\u7c92\u5ea6\u590d\u6742\u6027\u5206\u6790\u5de5\u5177\uff0c\u5bf9\u81ea\u8fde\u63a5\u65e0\u5173\u7684\u5408\u53d6\u67e5\u8be2\u5efa\u7acb\u5b8c\u6574\u7684\u4e8c\u5206\u6cd5\u5206\u7c7b\uff0c\u8bc6\u522b\u53ef\u5728\u51c6\u7ebf\u6027\u9884\u5904\u7406\u65f6\u95f4\u540e\u5b9e\u73b0\u5e38\u6570\u6216\u5bf9\u6570\u65f6\u95f4\u8f93\u51fa\u7684\u60c5\u51b5\u3002", "result": "\u4e3a\u6bcf\u4e2a\u4efb\u52a1\u5efa\u7acb\u4e86\u5b8c\u6574\u7684\u4e8c\u5206\u6cd5\uff0c\u7cbe\u786e\u8bc6\u522b\u4e86\u80fd\u591f\u5728\u63a5\u8fd1\u7406\u60f3\u65f6\u95f4\uff08\u51c6\u7ebf\u6027\u9884\u5904\u7406\u65f6\u95f4\u540e\u5e38\u6570\u6216\u5bf9\u6570\u65f6\u95f4\u8f93\u51fa\uff09\u5185\u89e3\u51b3\u7684\u95ee\u9898\u60c5\u51b5\u3002", "conclusion": "\u7814\u7a76\u4e3a\u5408\u53d6\u67e5\u8be2\u5728\u6700\u5c0f/\u6700\u5927\u503c\u6392\u5e8f\u4e0b\u7684\u5404\u79cd\u4efb\u52a1\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u590d\u6742\u6027\u5206\u7c7b\uff0c\u4e3a\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316\u5b9e\u8df5\u63d0\u4f9b\u4e86\u7406\u8bba\u6307\u5bfc\u3002"}}
{"id": "2510.19301", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.19301", "abs": "https://arxiv.org/abs/2510.19301", "authors": ["Ziheng Deng", "Xue Liu", "Jiantong Jiang", "Yankai Li", "Qingxu Deng", "Xiaochun Yang"], "title": "FLASH Viterbi: Fast and Adaptive Viterbi Decoding for Modern Data Systems", "comment": "Accepted for ICDE 2026", "summary": "The Viterbi algorithm is a key operator for structured sequence inference in\nmodern data systems, with applications in trajectory analysis, online\nrecommendation, and speech recognition. As these workloads increasingly migrate\nto resource-constrained edge platforms, standard Viterbi decoding remains\nmemory-intensive and computationally inflexible. Existing methods typically\ntrade decoding time for space efficiency, but often incur significant runtime\noverhead and lack adaptability to various system constraints. This paper\npresents FLASH Viterbi, a Fast, Lightweight, Adaptive, and Hardware-Friendly\nViterbi decoding operator that enhances adaptability and resource efficiency.\nFLASH Viterbi combines a non-recursive divide-and-conquer strategy with pruning\nand parallelization techniques to enhance both time and memory efficiency,\nmaking it well-suited for resource-constrained data systems.To further decouple\nspace complexity from the hidden state space size, we present FLASH-BS Viterbi,\na dynamic beam search variant built on a memory-efficient data structure. Both\nproposed algorithms exhibit strong adaptivity to diverse deployment scenarios\nby dynamically tuning internal parameters.To ensure practical deployment on\nedge devices, we also develop FPGA-based hardware accelerators for both\nalgorithms, demonstrating high throughput and low resource usage. Extensive\nexperiments show that our algorithms consistently outperform existing baselines\nin both decoding time and memory efficiency, while preserving adaptability and\nhardware-friendly characteristics essential for modern data systems. All codes\nare publicly available at https://github.com/Dzh-16/FLASH-Viterbi.", "AI": {"tldr": "FLASH Viterbi\u662f\u4e00\u79cd\u5feb\u901f\u3001\u8f7b\u91cf\u7ea7\u3001\u81ea\u9002\u5e94\u4e14\u786c\u4ef6\u53cb\u597d\u7684Viterbi\u89e3\u7801\u7b97\u5b50\uff0c\u901a\u8fc7\u975e\u9012\u5f52\u5206\u6cbb\u7b56\u7565\u3001\u526a\u679d\u548c\u5e76\u884c\u5316\u6280\u672f\u63d0\u9ad8\u65f6\u95f4\u548c\u5185\u5b58\u6548\u7387\uff0c\u9002\u7528\u4e8e\u8d44\u6e90\u53d7\u9650\u7684\u6570\u636e\u7cfb\u7edf\u3002", "motivation": "\u968f\u7740\u7ed3\u6784\u5316\u5e8f\u5217\u63a8\u7406\u5de5\u4f5c\u8d1f\u8f7d\u8fc1\u79fb\u5230\u8d44\u6e90\u53d7\u9650\u7684\u8fb9\u7f18\u5e73\u53f0\uff0c\u6807\u51c6Viterbi\u89e3\u7801\u5b58\u5728\u5185\u5b58\u5bc6\u96c6\u548c\u8ba1\u7b97\u4e0d\u7075\u6d3b\u7684\u95ee\u9898\uff0c\u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u5728\u89e3\u7801\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\uff0c\u4f46\u5f80\u5f80\u5e26\u6765\u663e\u8457\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u4e14\u7f3a\u4e4f\u9002\u5e94\u6027\u3002", "method": "\u63d0\u51faFLASH Viterbi\u7b97\u6cd5\uff0c\u7ed3\u5408\u975e\u9012\u5f52\u5206\u6cbb\u7b56\u7565\u4e0e\u526a\u679d\u548c\u5e76\u884c\u5316\u6280\u672f\uff1b\u8fdb\u4e00\u6b65\u63d0\u51faFLASH-BS Viterbi\uff0c\u57fa\u4e8e\u5185\u5b58\u9ad8\u6548\u6570\u636e\u7ed3\u6784\u7684\u52a8\u6001\u6ce2\u675f\u641c\u7d22\u53d8\u4f53\uff1b\u4e3a\u4e24\u79cd\u7b97\u6cd5\u5f00\u53d1\u57fa\u4e8eFPGA\u7684\u786c\u4ef6\u52a0\u901f\u5668\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u6240\u63d0\u7b97\u6cd5\u5728\u89e3\u7801\u65f6\u95f4\u548c\u5185\u5b58\u6548\u7387\u65b9\u9762\u59cb\u7ec8\u4f18\u4e8e\u73b0\u6709\u57fa\u7ebf\u65b9\u6cd5\uff0c\u540c\u65f6\u4fdd\u6301\u9002\u5e94\u6027\u548c\u786c\u4ef6\u53cb\u597d\u7279\u6027\uff0c\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u5b9e\u73b0\u9ad8\u541e\u5410\u91cf\u548c\u4f4e\u8d44\u6e90\u4f7f\u7528\u3002", "conclusion": "FLASH Viterbi\u7b97\u6cd5\u901a\u8fc7\u521b\u65b0\u7684\u5206\u6cbb\u7b56\u7565\u548c\u786c\u4ef6\u4f18\u5316\uff0c\u6210\u529f\u89e3\u51b3\u4e86\u6807\u51c6Viterbi\u89e3\u7801\u5728\u8fb9\u7f18\u8ba1\u7b97\u73af\u5883\u4e2d\u7684\u8d44\u6e90\u6548\u7387\u95ee\u9898\uff0c\u4e3a\u73b0\u4ee3\u6570\u636e\u7cfb\u7edf\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u81ea\u9002\u5e94\u89e3\u7801\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.19035", "categories": ["cs.SE", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.19035", "abs": "https://arxiv.org/abs/2510.19035", "authors": ["Amirreza Hosseini", "Amro M. Farid"], "title": "Extending Resource Constrained Project Scheduling to Mega-Projects with Model-Based Systems Engineering & Hetero-functional Graph Theory", "comment": null, "summary": "Within the project management context, project scheduling serves as an\nindispensable component, functioning as a fundamental tool for planning,\nmonitoring, controlling, and managing projects more broadly. Although the\nresource-constrained project scheduling problem (RCPSP) lies at the core of\nproject management activities, it remains largely disconnected from the broader\nliterature on model-based systems engineering (MBSE), thereby limiting its\nintegration into the design and management of complex systems. The original\ncontribution of this paper is twofold. First, the paper seeks to reconcile the\nRCPSP with the broader literature and vocabulary of model-based systems\nengineering and hetero-functional graph theory (HFGT). A concrete translation\npipeline from an activity-on-node network to a SysML activity diagram, and then\nto an operand net is constructed. Using this representation, it specializes the\nhetero-functional network minimum-cost flow (HFNMCF) formulation to the RCPSP\ncontext as a systematic means of HFGT for quantitative analysis and proves that\nthe RCPSP is recoverable as a special case of a broader model. Secondly, on an\nillustrative instance with renewable and non-renewable operands, the\nspecialized HFNMCF, while producing similar schedules, yields explicit\nexplanations of the project states that enable richer monitoring and control.\nOverall, the framework preserves the strengths of the classical RCPSP while\naccommodating real-world constraints and enterprise-level decision processes\nencountered in large, complex megaprojects.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5c06\u8d44\u6e90\u53d7\u9650\u9879\u76ee\u8c03\u5ea6\u95ee\u9898\uff08RCPSP\uff09\u4e0e\u57fa\u4e8e\u6a21\u578b\u7684\u7cfb\u7edf\u5de5\u7a0b\uff08MBSE\uff09\u548c\u5f02\u6784\u529f\u80fd\u56fe\u8bba\uff08HFGT\uff09\u76f8\u7ed3\u5408\uff0c\u6784\u5efa\u4e86\u4ece\u6d3b\u52a8\u8282\u70b9\u7f51\u7edc\u5230SysML\u6d3b\u52a8\u56fe\u518d\u5230\u64cd\u4f5c\u6570\u7f51\u7edc\u7684\u8f6c\u6362\u6d41\u7a0b\uff0c\u5e76\u4e13\u95e8\u5316\u4e86\u5f02\u6784\u529f\u80fd\u7f51\u7edc\u6700\u5c0f\u6210\u672c\u6d41\uff08HFNMCF\uff09\u516c\u5f0f\uff0c\u8bc1\u660eRCPSP\u53ef\u4f5c\u4e3a\u66f4\u5e7f\u6cdb\u6a21\u578b\u7684\u7279\u6b8a\u60c5\u51b5\u3002", "motivation": "\u867d\u7136RCPSP\u662f\u9879\u76ee\u7ba1\u7406\u7684\u6838\u5fc3\u95ee\u9898\uff0c\u4f46\u5b83\u4e0e\u57fa\u4e8e\u6a21\u578b\u7684\u7cfb\u7edf\u5de5\u7a0b\u6587\u732e\u8131\u8282\uff0c\u9650\u5236\u4e86\u5176\u5728\u590d\u6742\u7cfb\u7edf\u8bbe\u8ba1\u548c\u7ba1\u7406\u4e2d\u7684\u96c6\u6210\u3002", "method": "\u6784\u5efa\u4ece\u6d3b\u52a8\u8282\u70b9\u7f51\u7edc\u5230SysML\u6d3b\u52a8\u56fe\u518d\u5230\u64cd\u4f5c\u6570\u7f51\u7edc\u7684\u8f6c\u6362\u6d41\u7a0b\uff0c\u4e13\u95e8\u5316\u5f02\u6784\u529f\u80fd\u7f51\u7edc\u6700\u5c0f\u6210\u672c\u6d41\uff08HFNMCF\uff09\u516c\u5f0f\u5e94\u7528\u4e8eRCPSP\u80cc\u666f\u3002", "result": "\u5728\u5305\u542b\u53ef\u518d\u751f\u548c\u4e0d\u53ef\u518d\u751f\u64cd\u4f5c\u6570\u7684\u793a\u4f8b\u5b9e\u4f8b\u4e2d\uff0c\u4e13\u95e8\u7684HFNMCF\u4ea7\u751f\u7c7b\u4f3c\u8c03\u5ea6\uff0c\u540c\u65f6\u63d0\u4f9b\u9879\u76ee\u72b6\u6001\u7684\u660e\u786e\u89e3\u91ca\uff0c\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u76d1\u63a7\u548c\u63a7\u5236\u3002", "conclusion": "\u8be5\u6846\u67b6\u4fdd\u7559\u4e86\u7ecf\u5178RCPSP\u7684\u4f18\u52bf\uff0c\u540c\u65f6\u9002\u5e94\u4e86\u5927\u578b\u590d\u6742\u5de8\u578b\u9879\u76ee\u4e2d\u9047\u5230\u7684\u5b9e\u9645\u7ea6\u675f\u548c\u4f01\u4e1a\u7ea7\u51b3\u7b56\u8fc7\u7a0b\u3002"}}
{"id": "2510.19470", "categories": ["cs.DC", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.19470", "abs": "https://arxiv.org/abs/2510.19470", "authors": ["Weihao Yang", "Hao Huang", "Donglei Wu", "Ningke Li", "Yanqi Pan", "Qiyang Zheng", "Wen Xia", "Shiyi Li", "Qiang Wang"], "title": "HybridEP: Scaling Expert Parallelism to Cross-Datacenter Scenario via Hybrid Expert/Data Transmission", "comment": null, "summary": "Mixture-of-Experts (MoE) has become a popular architecture for scaling large\nmodels. However, the rapidly growing scale outpaces model training on a single\nDC, driving a shift toward a more flexible, cross-DC training paradigm. Under\nthis, Expert Parallelism (EP) of MoE faces significant scalability issues due\nto the limited cross-DC bandwidth. Specifically, existing EP optimizations\nattempt to overlap data communication and computation, which has little benefit\nin low-bandwidth scenarios due to a much longer data communication time.\nTherefore, the trends of cross-DC EP scaling is fast becoming a critical\nroadblock to the continued growth of MoE models.\n  To address this, we propose HybridEP, a modeling-guided framework to optimize\nEP under constrained bandwidth. Our key idea is to dynamically transform the\nspatial placement of experts to reduce data communication traffic and\nfrequency, thereby minimizing EP's communication overheads. However, it is\nnon-trivial to find the optimal solution because it complicates the original\ncommunication pattern by mixing data and expert communication. We therefore\nbuild a stream-based model to determine the optimal transmission ratio. Guided\nby this, we incorporate two techniques: (1) domain-based partition to construct\nthe mapping between hybrid patterns and specific communication topology at GPU\nlevel, and (2) parameter-efficient migration to further refine this topology by\nreducing expert transmission overhead and enlarging the domain size. Combining\nall these designs, HybridEP can be considered as a more general EP with better\nscalability. Experimental results show that HybridEP outperforms existing\nstate-of-the-art MoE training systems by up to 5.6x under constrained\nbandwidth. We further compare HybridEP and EP on large-scale simulations.\nHybridEP achieves up to 1.45x speedup with 1k DCs under different bandwidths.", "AI": {"tldr": "HybridEP\u662f\u4e00\u4e2a\u9488\u5bf9\u6df7\u5408\u4e13\u5bb6\u6a21\u578b\u5728\u53d7\u9650\u5e26\u5bbd\u4e0b\u4f18\u5316\u7684\u4e13\u5bb6\u5e76\u884c\u6846\u67b6\uff0c\u901a\u8fc7\u52a8\u6001\u8c03\u6574\u4e13\u5bb6\u7a7a\u95f4\u5e03\u5c40\u6765\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\uff0c\u5728\u53d7\u9650\u5e26\u5bbd\u4e0b\u6bd4\u73b0\u6709\u7cfb\u7edf\u5feb5.6\u500d\u3002", "motivation": "\u968f\u7740\u6df7\u5408\u4e13\u5bb6\u6a21\u578b\u89c4\u6a21\u5feb\u901f\u589e\u957f\uff0c\u5355\u6570\u636e\u4e2d\u5fc3\u8bad\u7ec3\u5df2\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u8f6c\u5411\u8de8\u6570\u636e\u4e2d\u5fc3\u8bad\u7ec3\u3002\u4f46\u5728\u4f4e\u5e26\u5bbd\u73af\u5883\u4e0b\uff0c\u4e13\u5bb6\u5e76\u884c\u9762\u4e34\u4e25\u91cd\u7684\u53ef\u6269\u5c55\u6027\u95ee\u9898\uff0c\u73b0\u6709\u91cd\u53e0\u901a\u4fe1\u548c\u8ba1\u7b97\u7684\u4f18\u5316\u65b9\u6cd5\u6548\u679c\u6709\u9650\u3002", "method": "\u63d0\u51faHybridEP\u6846\u67b6\uff0c\u901a\u8fc7\u6d41\u5f0f\u6a21\u578b\u786e\u5b9a\u6700\u4f18\u4f20\u8f93\u6bd4\u4f8b\uff0c\u7ed3\u5408\u57fa\u4e8e\u57df\u7684\u5206\u533a\u6784\u5efa\u6df7\u5408\u6a21\u5f0f\u4e0eGPU\u7ea7\u901a\u4fe1\u62d3\u6251\u7684\u6620\u5c04\uff0c\u4ee5\u53ca\u53c2\u6570\u9ad8\u6548\u8fc1\u79fb\u6765\u51cf\u5c11\u4e13\u5bb6\u4f20\u8f93\u5f00\u9500\u5e76\u6269\u5927\u57df\u89c4\u6a21\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793aHybridEP\u5728\u53d7\u9650\u5e26\u5bbd\u4e0b\u6bd4\u73b0\u6709\u6700\u5148\u8fdb\u7684MoE\u8bad\u7ec3\u7cfb\u7edf\u5feb5.6\u500d\uff0c\u5728\u5927\u89c4\u6a21\u6a21\u62df\u4e2d\uff0c\u57281000\u4e2a\u6570\u636e\u4e2d\u5fc3\u4e0b\u4e0d\u540c\u5e26\u5bbd\u4e0b\u5b9e\u73b01.45\u500d\u52a0\u901f\u3002", "conclusion": "HybridEP\u662f\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u4e13\u5bb6\u5e76\u884c\u6846\u67b6\uff0c\u5177\u6709\u66f4\u597d\u7684\u53ef\u6269\u5c55\u6027\uff0c\u80fd\u591f\u6709\u6548\u89e3\u51b3\u8de8\u6570\u636e\u4e2d\u5fc3\u4e13\u5bb6\u5e76\u884c\u5728\u4f4e\u5e26\u5bbd\u73af\u5883\u4e0b\u7684\u53ef\u6269\u5c55\u6027\u74f6\u9888\u3002"}}
{"id": "2510.19089", "categories": ["cs.SE", "D.2.4; K.6.3"], "pdf": "https://arxiv.org/pdf/2510.19089", "abs": "https://arxiv.org/abs/2510.19089", "authors": ["\u00c9rik Martin-Dorel"], "title": "Docker-based CI/CD for Rocq/OCaml projects", "comment": "26 pages, 17 figures, 3 tables, 16 references", "summary": "This paper presents three closely-related software projects, namely:\ndocker-coq, docker-coq-action, and docker-keeper. It aims at two objectives:\nprovide a high-level description of the available features -- to foster the use\nof a Docker-based CI/CD for Rocq (formerly known as Coq) or OCaml projects --\nand document the underlying requirements and the main design choices of these\nthree DevOps tools -- to help their future maintainers.", "AI": {"tldr": "\u672c\u6587\u4ecb\u7ecd\u4e86\u4e09\u4e2a\u7d27\u5bc6\u76f8\u5173\u7684\u8f6f\u4ef6\u9879\u76ee\uff1adocker-coq\u3001docker-coq-action\u548cdocker-keeper\uff0c\u65e8\u5728\u901a\u8fc7Docker-based CI/CD\u4fc3\u8fdbCoq/OCaml\u9879\u76ee\u7684\u5f00\u53d1\uff0c\u5e76\u4e3a\u672a\u6765\u7ef4\u62a4\u8005\u63d0\u4f9b\u8bbe\u8ba1\u6587\u6863\u3002", "motivation": "\u4e3aCoq\uff08\u73b0\u79f0Rocq\uff09\u548cOCaml\u9879\u76ee\u63d0\u4f9b\u57fa\u4e8eDocker\u7684CI/CD\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u4e3a\u8fd9\u4e9bDevOps\u5de5\u5177\u7684\u672a\u6765\u7ef4\u62a4\u8005\u8bb0\u5f55\u9700\u6c42\u548c\u8bbe\u8ba1\u9009\u62e9\u3002", "method": "\u5f00\u53d1\u4e86\u4e09\u4e2a\u76f8\u4e92\u5173\u8054\u7684DevOps\u5de5\u5177\uff1adocker-coq\uff08Docker\u955c\u50cf\uff09\u3001docker-coq-action\uff08GitHub Action\uff09\u548cdocker-keeper\uff08\u81ea\u52a8\u5316\u5de5\u5177\uff09\uff0c\u91c7\u7528Docker\u5bb9\u5668\u5316\u6280\u672f\u5b9e\u73b0\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\u3002", "result": "\u6210\u529f\u521b\u5efa\u4e86\u4e00\u5957\u5b8c\u6574\u7684Docker-based CI/CD\u5de5\u5177\u94fe\uff0c\u4e3aCoq/OCaml\u9879\u76ee\u63d0\u4f9b\u4e86\u6807\u51c6\u5316\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u3002", "conclusion": "\u8fd9\u4e09\u4e2a\u9879\u76ee\u4e3aCoq/OCaml\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684DevOps\u57fa\u7840\u8bbe\u65bd\uff0c\u65e2\u6ee1\u8db3\u4e86\u5f53\u524d\u7528\u6237\u9700\u6c42\uff0c\u4e5f\u4e3a\u672a\u6765\u7684\u7ef4\u62a4\u548c\u6269\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002"}}
{"id": "2510.19617", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.19617", "abs": "https://arxiv.org/abs/2510.19617", "authors": ["Eric Ding"], "title": "Propius: A Platform for Collaborative Machine Learning across the Edge and the Cloud", "comment": null, "summary": "Collaborative Machine Learning is a paradigm in the field of distributed\nmachine learning, designed to address the challenges of data privacy,\ncommunication overhead, and model heterogeneity. There have been significant\nadvancements in optimization and communication algorithm design and ML hardware\nthat enables fair, efficient and secure collaborative ML training. However,\nless emphasis is put on collaborative ML infrastructure development. Developers\nand researchers often build server-client systems for a specific collaborative\nML use case, which is not scalable and reusable. As the scale of collaborative\nML grows, the need for a scalable, efficient, and ideally multi-tenant resource\nmanagement system becomes more pressing. We propose a novel system, Propius,\nthat can adapt to the heterogeneity of client machines, and efficiently manage\nand control the computation flow between ML jobs and edge resources in a\nscalable fashion. Propius is comprised of a control plane and a data plane. The\ncontrol plane enables efficient resource sharing among multiple collaborative\nML jobs and supports various resource sharing policies, while the data plane\nimproves the scalability of collaborative ML model sharing and result\ncollection. Evaluations show that Propius outperforms existing resource\nmanagement techniques and frameworks in terms of resource utilization (up to\n$1.88\\times$), throughput (up to $2.76$), and job completion time (up to\n$1.26\\times$).", "AI": {"tldr": "Propius\u662f\u4e00\u4e2a\u7528\u4e8e\u534f\u4f5c\u673a\u5668\u5b66\u4e60\u7684\u53ef\u6269\u5c55\u8d44\u6e90\u7ba1\u7406\u7cfb\u7edf\uff0c\u901a\u8fc7\u63a7\u5236\u5e73\u9762\u548c\u6570\u636e\u5e73\u9762\u89e3\u51b3\u591a\u79df\u6237\u8d44\u6e90\u7ba1\u7406\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u8d44\u6e90\u5229\u7528\u7387\u3001\u541e\u5410\u91cf\u548c\u4f5c\u4e1a\u5b8c\u6210\u65f6\u95f4\u3002", "motivation": "\u534f\u4f5c\u673a\u5668\u5b66\u4e60\u9762\u4e34\u6570\u636e\u9690\u79c1\u3001\u901a\u4fe1\u5f00\u9500\u548c\u6a21\u578b\u5f02\u6784\u6027\u6311\u6218\uff0c\u73b0\u6709\u7cfb\u7edf\u591a\u4e3a\u7279\u5b9a\u7528\u4f8b\u6784\u5efa\uff0c\u7f3a\u4e4f\u53ef\u6269\u5c55\u548c\u53ef\u91cd\u7528\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u968f\u7740\u534f\u4f5cML\u89c4\u6a21\u6269\u5927\uff0c\u9700\u8981\u9ad8\u6548\u7684\u591a\u79df\u6237\u8d44\u6e90\u7ba1\u7406\u7cfb\u7edf\u3002", "method": "\u63d0\u51faPropius\u7cfb\u7edf\uff0c\u5305\u542b\u63a7\u5236\u5e73\u9762\u548c\u6570\u636e\u5e73\u9762\u3002\u63a7\u5236\u5e73\u9762\u652f\u6301\u591a\u534f\u4f5cML\u4f5c\u4e1a\u95f4\u7684\u8d44\u6e90\u5171\u4eab\u548c\u591a\u79cd\u8d44\u6e90\u5206\u914d\u7b56\u7565\uff0c\u6570\u636e\u5e73\u9762\u63d0\u5347\u6a21\u578b\u5171\u4eab\u548c\u7ed3\u679c\u6536\u96c6\u7684\u53ef\u6269\u5c55\u6027\u3002", "result": "\u8bc4\u4f30\u663e\u793aPropius\u5728\u8d44\u6e90\u5229\u7528\u7387\uff08\u6700\u9ad81.88\u500d\uff09\u3001\u541e\u5410\u91cf\uff08\u6700\u9ad82.76\u500d\uff09\u548c\u4f5c\u4e1a\u5b8c\u6210\u65f6\u95f4\uff08\u6700\u9ad81.26\u500d\uff09\u65b9\u9762\u4f18\u4e8e\u73b0\u6709\u8d44\u6e90\u7ba1\u7406\u6280\u672f\u3002", "conclusion": "Propius\u901a\u8fc7\u521b\u65b0\u7684\u7cfb\u7edf\u67b6\u6784\u6709\u6548\u89e3\u51b3\u4e86\u534f\u4f5c\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u8d44\u6e90\u7ba1\u7406\u6311\u6218\uff0c\u4e3a\u5927\u89c4\u6a21\u534f\u4f5cML\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u57fa\u7840\u8bbe\u65bd\u652f\u6301\u3002"}}
{"id": "2510.19237", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19237", "abs": "https://arxiv.org/abs/2510.19237", "authors": ["Dongming Jin", "Zhi Jin", "Xiaohong Chen", "Zheng Fang", "Linyu Li", "Shengxin Zhao", "Chuihui Wang", "Hongbin Xiao"], "title": "Automated Concern Extraction from Textual Requirements of Cyber-Physical Systems: A Multi-solution Study", "comment": "27 pages, 3 figures", "summary": "Cyber-physical systems (CPSs) are characterized by a deep integration of the\ninformation space and the physical world, which makes the extraction of\nrequirements concerns more challenging. Some automated solutions for\nrequirements concern extraction have been proposed to alleviate the burden on\nrequirements engineers. However, evaluating the effectiveness of these\nsolutions, which relies on fair and comprehensive benchmarks, remains an open\nquestion. To address this gap, we propose ReqEBench, a new CPSs requirements\nconcern extraction benchmark, which contains 2,721 requirements from 12\nreal-world CPSs. ReqEBench offers four advantages. It aligns with real-world\nCPSs requirements in multiple dimensions, e.g., scale and complexity. It covers\ncomprehensive concerns related to CPSs requirements. It undergoes a rigorous\nannotation process. It covers multiple application domains of CPSs, e.g.,\naerospace and healthcare. We conducted a comparative study on three types of\nautomated requirements concern extraction solutions and revealed their\nperformance in real-world CPSs using our ReqEBench. We found that the highest\nF1 score of GPT-4 is only 0.24 in entity concern extraction. We further analyze\nfailure cases of popular LLM-based solutions, summarize their shortcomings, and\nprovide ideas for improving their capabilities. We believe ReqEBench will\nfacilitate the evaluation and development of automated requirements concern\nextraction.", "AI": {"tldr": "\u63d0\u51fa\u4e86ReqEBench\uff0c\u4e00\u4e2a\u5305\u542b2,721\u4e2a\u771f\u5b9eCPS\u9700\u6c42\u7684\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u7528\u4e8e\u8bc4\u4f30\u81ea\u52a8\u5316\u9700\u6c42\u5173\u6ce8\u70b9\u63d0\u53d6\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "motivation": "\u73b0\u6709\u81ea\u52a8\u5316\u9700\u6c42\u5173\u6ce8\u70b9\u63d0\u53d6\u89e3\u51b3\u65b9\u6848\u7f3a\u4e4f\u516c\u5e73\u548c\u5168\u9762\u7684\u57fa\u51c6\u6765\u8bc4\u4f30\u5176\u6709\u6548\u6027\uff0c\u7279\u522b\u662f\u5728CPS\u9886\u57df\u3002", "method": "\u6784\u5efa\u5305\u542b12\u4e2a\u771f\u5b9e\u4e16\u754cCPS\u7cfb\u7edf\u76842,721\u4e2a\u9700\u6c42\u7684\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u6db5\u76d6\u591a\u4e2a\u5e94\u7528\u9886\u57df\uff0c\u5e76\u7ecf\u8fc7\u4e25\u683c\u7684\u6807\u6ce8\u8fc7\u7a0b\u3002", "result": "\u4f7f\u7528ReqEBench\u8bc4\u4f30\u4e09\u79cd\u81ea\u52a8\u5316\u9700\u6c42\u5173\u6ce8\u70b9\u63d0\u53d6\u65b9\u6848\uff0c\u53d1\u73b0GPT-4\u5728\u5b9e\u4f53\u5173\u6ce8\u70b9\u63d0\u53d6\u4e2d\u7684\u6700\u9ad8F1\u5206\u6570\u4ec5\u4e3a0.24\u3002", "conclusion": "ReqEBench\u5c06\u4fc3\u8fdb\u81ea\u52a8\u5316\u9700\u6c42\u5173\u6ce8\u70b9\u63d0\u53d6\u7684\u8bc4\u4f30\u548c\u53d1\u5c55\uff0c\u901a\u8fc7\u5206\u6790\u5931\u8d25\u6848\u4f8b\u4e3a\u6539\u8fdbLLM\u80fd\u529b\u63d0\u4f9b\u4e86\u601d\u8def\u3002"}}
{"id": "2510.19805", "categories": ["cs.DC", "cs.DB"], "pdf": "https://arxiv.org/pdf/2510.19805", "abs": "https://arxiv.org/abs/2510.19805", "authors": ["Carl-Johan Fauvelle Munck af Rosensch\"old", "Feras M. Awaysheh", "Ahmad Awad"], "title": "Next Generation Cloud-native In-Memory Stores: From Redis to Valkey and Beyond", "comment": "10 pages, 5 figures, 2 algorithms, 4 tables", "summary": "In-memory key-value datastores have become indispensable building blocks of\nmodern cloud-native infrastructures, yet their evolution faces scalability,\ncompatibility, and sustainability constraints. The current literature lacks an\nexperimental evaluation of state-of-the-art tools in the domain. This study\naddressed this timely gap by benchmarking Redis alternatives and systematically\nevaluating Valkey, KeyDB, and Garnet under realistic workloads within\nKubernetes deployments. The results demonstrate clear trade-offs among the\nbenchmarked data systems. Our study presents a comprehensive performance and\nviability assessment of the emerging in-memory key-value stores. Metrics\ninclude throughput, tail latency, CPU and memory efficiency, and migration\ncomplexity. We highlight trade-offs between performance, compatibility, and\nlong-term viability, including project maturity, community support, and\nsustained development.", "AI": {"tldr": "\u5bf9Redis\u66ff\u4ee3\u54c1Valkey\u3001KeyDB\u548cGarnet\u5728Kubernetes\u73af\u5883\u4e0b\u7684\u6027\u80fd\u8bc4\u4f30\uff0c\u5c55\u793a\u4e86\u541e\u5410\u91cf\u3001\u5ef6\u8fdf\u3001\u8d44\u6e90\u6548\u7387\u548c\u8fc1\u79fb\u590d\u6742\u5ea6\u7b49\u65b9\u9762\u7684\u6743\u8861\u3002", "motivation": "\u5f53\u524d\u7f3a\u4e4f\u5bf9\u73b0\u4ee3\u5185\u5b58\u952e\u503c\u6570\u636e\u5e93\u7684\u5b9e\u9a8c\u8bc4\u4f30\uff0c\u9700\u8981\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\uff0c\u8bc4\u4f30\u65b0\u5174\u5de5\u5177\u5728\u53ef\u6269\u5c55\u6027\u3001\u517c\u5bb9\u6027\u548c\u53ef\u6301\u7eed\u6027\u65b9\u9762\u7684\u8868\u73b0\u3002", "method": "\u5728Kubernetes\u90e8\u7f72\u4e2d\u4f7f\u7528\u771f\u5b9e\u5de5\u4f5c\u8d1f\u8f7d\u5bf9Valkey\u3001KeyDB\u548cGarnet\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u7cfb\u7edf\u8bc4\u4f30\u6027\u80fd\u6307\u6807\u3002", "result": "\u7ed3\u679c\u663e\u793a\u88ab\u6d4b\u8bd5\u7684\u6570\u636e\u7cfb\u7edf\u4e4b\u95f4\u5b58\u5728\u660e\u786e\u7684\u6743\u8861\u5173\u7cfb\uff0c\u4e0d\u540c\u7cfb\u7edf\u5728\u6027\u80fd\u3001\u517c\u5bb9\u6027\u548c\u957f\u671f\u53ef\u884c\u6027\u65b9\u9762\u5404\u6709\u4f18\u52a3\u3002", "conclusion": "\u7814\u7a76\u63d0\u4f9b\u4e86\u65b0\u5174\u5185\u5b58\u952e\u503c\u5b58\u50a8\u7684\u5168\u9762\u6027\u80fd\u548c\u53ef\u884c\u6027\u8bc4\u4f30\uff0c\u5f3a\u8c03\u4e86\u6027\u80fd\u3001\u517c\u5bb9\u6027\u548c\u9879\u76ee\u6210\u719f\u5ea6\u4e4b\u95f4\u7684\u6743\u8861\u5173\u7cfb\u3002"}}
{"id": "2510.19689", "categories": ["cs.DC", "cs.AI", "cs.LG", "C.2.4; H.3.4; I.2.6"], "pdf": "https://arxiv.org/pdf/2510.19689", "abs": "https://arxiv.org/abs/2510.19689", "authors": ["Guilin Zhang", "Wulan Guo", "Ziqi Tan", "Srinivas Vippagunta", "Suchitra Raman", "Shreeshankar Chatterjee", "Ju Lin", "Shang Liu", "Mary Schladenhauffen", "Jeffrey Luo", "Hailong Jiang"], "title": "Serverless GPU Architecture for Enterprise HR Analytics: A Production-Scale BDaaS Implementation", "comment": "10 pages, 7 figures, 4 tables. Accepted to IEEE BigData 2025", "summary": "Industrial and government organizations increasingly depend on data-driven\nanalytics for workforce, finance, and regulated decision processes, where\ntimeliness, cost efficiency, and compliance are critical. Distributed\nframeworks such as Spark and Flink remain effective for massive-scale batch or\nstreaming analytics but introduce coordination complexity and auditing\noverheads that misalign with moderate-scale, latency-sensitive inference.\nMeanwhile, cloud providers now offer serverless GPUs, and models such as TabNet\nenable interpretable tabular ML, motivating new deployment blueprints for\nregulated environments. In this paper, we present a production-oriented Big\nData as a Service (BDaaS) blueprint that integrates a single-node serverless\nGPU runtime with TabNet. The design leverages GPU acceleration for throughput,\nserverless elasticity for cost reduction, and feature-mask interpretability for\nIL4/FIPS compliance. We conduct benchmarks on the HR, Adult, and BLS datasets,\ncomparing our approach against Spark and CPU baselines. Our results show that\nGPU pipelines achieve up to 4.5x higher throughput, 98x lower latency, and 90%\nlower cost per 1K inferences compared to Spark baselines, while compliance\nmechanisms add only ~5.7 ms latency with p99 < 22 ms. Interpretability remains\nstable under peak load, ensuring reliable auditability. Taken together, these\nfindings provide a compliance-aware benchmark, a reproducible Helm-packaged\nblueprint, and a decision framework that demonstrate the practicality of\nsecure, interpretable, and cost-efficient serverless GPU analytics for\nregulated enterprise and government settings.", "AI": {"tldr": "\u63d0\u51fa\u9762\u5411\u751f\u4ea7\u73af\u5883\u7684BDaaS\u84dd\u56fe\uff0c\u96c6\u6210\u5355\u8282\u70b9\u65e0\u670d\u52a1\u5668GPU\u8fd0\u884c\u65f6\u4e0eTabNet\uff0c\u5728\u53d7\u76d1\u7ba1\u73af\u5883\u4e2d\u5b9e\u73b0\u9ad8\u541e\u5410\u3001\u4f4e\u5ef6\u8fdf\u3001\u4f4e\u6210\u672c\u4e14\u53ef\u89e3\u91ca\u7684\u8868\u683c\u6570\u636e\u5206\u6790\u3002", "motivation": "\u4f20\u7edf\u5206\u5e03\u5f0f\u6846\u67b6\u5982Spark\u548cFlink\u5728\u5927\u89c4\u6a21\u6279\u5904\u7406\u6216\u6d41\u5206\u6790\u4e2d\u6709\u6548\uff0c\u4f46\u5b58\u5728\u534f\u8c03\u590d\u6742\u6027\u548c\u5ba1\u8ba1\u5f00\u9500\uff0c\u4e0d\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u3001\u5ef6\u8fdf\u654f\u611f\u7684\u63a8\u7406\u573a\u666f\u3002\u4e91\u63d0\u4f9b\u5546\u63d0\u4f9b\u65e0\u670d\u52a1\u5668GPU\u548cTabNet\u7b49\u53ef\u89e3\u91ca\u6a21\u578b\uff0c\u4e3a\u53d7\u76d1\u7ba1\u73af\u5883\u90e8\u7f72\u63d0\u4f9b\u4e86\u65b0\u673a\u9047\u3002", "method": "\u8bbe\u8ba1\u751f\u4ea7\u5bfc\u5411\u7684BDaaS\u84dd\u56fe\uff0c\u96c6\u6210\u5355\u8282\u70b9\u65e0\u670d\u52a1\u5668GPU\u8fd0\u884c\u65f6\u4e0eTabNet\u6a21\u578b\uff0c\u5229\u7528GPU\u52a0\u901f\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u65e0\u670d\u52a1\u5668\u5f39\u6027\u964d\u4f4e\u6210\u672c\uff0c\u7279\u5f81\u63a9\u7801\u53ef\u89e3\u91ca\u6027\u6ee1\u8db3IL4/FIPS\u5408\u89c4\u8981\u6c42\u3002", "result": "\u5728HR\u3001Adult\u548cBLS\u6570\u636e\u96c6\u4e0a\u7684\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\uff0cGPU\u6d41\u6c34\u7ebf\u76f8\u6bd4Spark\u57fa\u7ebf\u5b9e\u73b0\u9ad8\u8fbe4.5\u500d\u541e\u5410\u91cf\u63d0\u5347\u300198\u500d\u5ef6\u8fdf\u964d\u4f4e\u548c90%\u6bcf\u5343\u6b21\u63a8\u7406\u6210\u672c\u964d\u4f4e\uff0c\u5408\u89c4\u673a\u5236\u4ec5\u589e\u52a0\u7ea65.7\u6beb\u79d2\u5ef6\u8fdf\u3002", "conclusion": "\u8be5\u7814\u7a76\u63d0\u4f9b\u4e86\u5408\u89c4\u611f\u77e5\u57fa\u51c6\u3001\u53ef\u590d\u73b0\u7684Helm\u6253\u5305\u84dd\u56fe\u548c\u51b3\u7b56\u6846\u67b6\uff0c\u8bc1\u660e\u4e86\u5728\u53d7\u76d1\u7ba1\u4f01\u4e1a\u548c\u653f\u5e9c\u73af\u5883\u4e2d\u5b9e\u73b0\u5b89\u5168\u3001\u53ef\u89e3\u91ca\u4e14\u7ecf\u6d4e\u9ad8\u6548\u7684\u65e0\u670d\u52a1\u5668GPU\u5206\u6790\u7684\u5b9e\u7528\u6027\u3002"}}
{"id": "2510.19240", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19240", "abs": "https://arxiv.org/abs/2510.19240", "authors": ["Behnam Agahi", "Hamed Farbeh"], "title": "A General Solution for the Implementation of CI/CD in Embedded Linux Development", "comment": null, "summary": "With the growing use of embedded systems in various industries, the need for\nautomated platforms for the development and deployment of customized\nLinux-based operating systems has become more important. This research was\nconducted with the aim of designing and implementing an integrated and\nreproducible infrastructure for the development, building, and testing of a\nLinux-based operating system using the Yocto Project. The proposed structure\nwas implemented based on a three-layer architecture consisting of the main\nYocto repositories, a custom layer (meta-custom), and a coordinating manifest\nlayer to ensure version synchronization, scalability, and reproducibility.\nThree sample projects, including libhelloworld, helloworld, and the kernel\nmodule hello mod, were developed and integrated into the build process.\nContinuous Integration and Continuous Deployment pipelines were implemented\nwith GitLab CI and combined with an isolated Docker environment to automate and\nstreamline the build and testing workflows. Using a local cache server\ncontaining hashserv, downloads and sstate cache significantly reduced the build\ntime. The functionality and stability of the system were verified through six\nboot test scenarios in the QEMU simulator. The results show that the proposed\ndesign not only ensures reproducibility but also can be extended to advanced\napplications such as continuous deployment of real-time Linux versions. Future\nrecommendations include expanding automated tests, implementing system\nmonitoring with Prometheus and Grafana, using distributed builds, optimizing\nwith Docker multi-stage builds, and enabling continuous deployment of real-time\nLinux changes to provide a stable and scalable model for industrial and\nresearch projects in embedded systems with a rapid and reliable development\ncycle.", "AI": {"tldr": "\u672c\u7814\u7a76\u57fa\u4e8eYocto\u9879\u76ee\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7528\u4e8eLinux\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u3001\u6784\u5efa\u548c\u6d4b\u8bd5\u7684\u96c6\u6210\u5316\u3001\u53ef\u590d\u73b0\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u91c7\u7528\u4e09\u5c42\u67b6\u6784\u786e\u4fdd\u7248\u672c\u540c\u6b65\u3001\u53ef\u6269\u5c55\u6027\u548c\u53ef\u590d\u73b0\u6027\uff0c\u5e76\u901a\u8fc7CI/CD\u6d41\u6c34\u7ebf\u3001\u7f13\u5b58\u4f18\u5316\u548c\u6a21\u62df\u5668\u6d4b\u8bd5\u9a8c\u8bc1\u4e86\u7cfb\u7edf\u7684\u529f\u80fd\u6027\u548c\u7a33\u5b9a\u6027\u3002", "motivation": "\u968f\u7740\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5728\u5404\u884c\u4e1a\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u5bf9\u81ea\u52a8\u5316\u5e73\u53f0\u7684\u9700\u6c42\u65e5\u76ca\u589e\u957f\uff0c\u9700\u8981\u80fd\u591f\u5feb\u901f\u5f00\u53d1\u548c\u90e8\u7f72\u5b9a\u5236\u5316Linux\u64cd\u4f5c\u7cfb\u7edf\u7684\u96c6\u6210\u5316\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u91c7\u7528Yocto\u9879\u76ee\u7684\u4e09\u5c42\u67b6\u6784\uff08\u4e3b\u4ed3\u5e93\u3001\u81ea\u5b9a\u4e49\u5c42\u548c\u534f\u8c03\u6e05\u5355\u5c42\uff09\uff0c\u5f00\u53d1\u4e86\u4e09\u4e2a\u793a\u4f8b\u9879\u76ee\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8eGitLab CI\u548cDocker\u7684CI/CD\u6d41\u6c34\u7ebf\uff0c\u4f7f\u7528\u672c\u5730\u7f13\u5b58\u670d\u52a1\u5668\u4f18\u5316\u6784\u5efa\u65f6\u95f4\uff0c\u5e76\u901a\u8fc7QEMU\u6a21\u62df\u5668\u8fdb\u884c\u516d\u79cd\u542f\u52a8\u6d4b\u8bd5\u573a\u666f\u9a8c\u8bc1\u3002", "result": "\u63d0\u51fa\u7684\u8bbe\u8ba1\u4e0d\u4ec5\u786e\u4fdd\u4e86\u53ef\u590d\u73b0\u6027\uff0c\u8fd8\u663e\u8457\u51cf\u5c11\u4e86\u6784\u5efa\u65f6\u95f4\uff0c\u7cfb\u7edf\u529f\u80fd\u6027\u548c\u7a33\u5b9a\u6027\u5f97\u5230\u9a8c\u8bc1\uff0c\u80fd\u591f\u6269\u5c55\u5230\u5b9e\u65f6Linux\u7248\u672c\u7b49\u9ad8\u7ea7\u5e94\u7528\u7684\u6301\u7eed\u90e8\u7f72\u3002", "conclusion": "\u8be5\u57fa\u7840\u8bbe\u65bd\u4e3a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5de5\u4e1a\u548c\u79d1\u7814\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a33\u5b9a\u3001\u53ef\u6269\u5c55\u7684\u6a21\u578b\uff0c\u5b9e\u73b0\u4e86\u5feb\u901f\u53ef\u9760\u7684\u5f00\u53d1\u5468\u671f\uff0c\u672a\u6765\u53ef\u6269\u5c55\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u7cfb\u7edf\u76d1\u63a7\u3001\u5206\u5e03\u5f0f\u6784\u5efa\u7b49\u4f18\u5316\u3002"}}
{"id": "2510.19725", "categories": ["cs.DC", "cs.NI", "C.2.m; G.2.m"], "pdf": "https://arxiv.org/pdf/2510.19725", "abs": "https://arxiv.org/abs/2510.19725", "authors": ["Jingfan Meng", "Tianji Yang", "Jun Xu"], "title": "CommonSense: Efficient Set Intersection (SetX) Protocol Based on Compressed Sensing", "comment": null, "summary": "In the set reconciliation (\\textsf{SetR}) problem, two parties Alice and Bob,\nholding sets $\\mathsf{A}$ and $\\mathsf{B}$, communicate to learn the symmetric\ndifference $\\mathsf{A} \\Delta \\mathsf{B}$. In this work, we study a related but\nunder-explored problem: set intersection (\\textsf{SetX})~\\cite{Ozisik2019},\nwhere both parties learn $\\mathsf{A} \\cap \\mathsf{B}$ instead. However,\nexisting solutions typically reuse \\textsf{SetR} protocols due to the absence\nof dedicated \\textsf{SetX} protocols and the misconception that \\textsf{SetR}\nand \\textsf{SetX} have comparable costs. Observing that \\textsf{SetX} is\nfundamentally cheaper than \\textsf{SetR}, we developed a multi-round\n\\textsf{SetX} protocol that outperforms the information-theoretic lower bound\nof \\textsf{SetR} problem. In our \\textsf{SetX} protocol, Alice sends Bob a\ncompressed sensing (CS) sketch of $\\mathsf{A}$ to help Bob identify his unique\nelements (those in $\\mathsf{B \\setminus A}$). This solves the \\textsf{SetX}\nproblem, if $\\mathsf{A} \\subseteq \\mathsf{B}$. Otherwise, Bob sends a CS sketch\nof the residue (a set of elements he cannot decode) back to Alice for her to\ndecode her unique elements (those in $\\mathsf{A \\setminus B}$). As such, Alice\nand Bob communicate back and forth %with a set membership filter (SMF) of\nestimated $\\mathsf{B \\setminus A}$. Alice updates $\\mathsf{A}$ and\ncommunication repeats until both parties agrees on $\\mathsf{A} \\cap\n\\mathsf{B}$. On real world datasets, experiments show that our $\\mathsf{SetX}$\nprotocol reduces the communication cost by 8 to 10 times compared to the\nIBLT-based $\\mathsf{SetR}$ protocol.", "AI": {"tldr": "\u672c\u6587\u5f00\u53d1\u4e86\u4e00\u79cd\u65b0\u7684\u96c6\u5408\u4ea4\u96c6\u534f\u8baeSetX\uff0c\u901a\u8fc7\u538b\u7f29\u611f\u77e5\u6280\u672f\u548c\u591a\u8f6e\u901a\u4fe1\uff0c\u663e\u8457\u964d\u4f4e\u4e86\u901a\u4fe1\u6210\u672c\uff0c\u6bd4\u4f20\u7edf\u7684\u96c6\u5408\u534f\u8c03\u534f\u8baeSetR\u6548\u7387\u9ad88-10\u500d\u3002", "motivation": "\u73b0\u6709\u7684\u96c6\u5408\u4ea4\u96c6\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u590d\u7528\u96c6\u5408\u534f\u8c03\u534f\u8bae\uff0c\u4f46\u5b58\u5728\u8bef\u89e3\u8ba4\u4e3a\u4e24\u8005\u6210\u672c\u76f8\u5f53\u3002\u5b9e\u9645\u4e0a\u96c6\u5408\u4ea4\u96c6\u672c\u8d28\u4e0a\u6bd4\u96c6\u5408\u534f\u8c03\u66f4\u4fbf\u5b9c\uff0c\u9700\u8981\u4e13\u95e8\u7684\u534f\u8bae\u6765\u4f18\u5316\u6027\u80fd\u3002", "method": "\u4f7f\u7528\u591a\u8f6e\u901a\u4fe1\u534f\u8bae\uff1aAlice\u53d1\u9001A\u7684\u538b\u7f29\u611f\u77e5\u8349\u56fe\u7ed9Bob\uff0cBob\u8bc6\u522b\u5176\u552f\u4e00\u5143\u7d20\u3002\u5982\u679cA\u4e0d\u662fB\u7684\u5b50\u96c6\uff0cBob\u5c06\u65e0\u6cd5\u89e3\u7801\u7684\u6b8b\u5dee\u53d1\u56de\u7ed9Alice\u89e3\u7801\u5979\u7684\u552f\u4e00\u5143\u7d20\u3002\u53cc\u65b9\u901a\u8fc7\u96c6\u5408\u6210\u5458\u8fc7\u6ee4\u5668\u53cd\u590d\u66f4\u65b0\u76f4\u5230\u8fbe\u6210\u4ea4\u96c6\u5171\u8bc6\u3002", "result": "\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u8be5SetX\u534f\u8bae\u76f8\u6bd4\u57fa\u4e8eIBLT\u7684SetR\u534f\u8bae\uff0c\u901a\u4fe1\u6210\u672c\u964d\u4f4e\u4e868\u523010\u500d\u3002", "conclusion": "\u96c6\u5408\u4ea4\u96c6\u95ee\u9898SetX\u5728\u901a\u4fe1\u6210\u672c\u4e0a\u6bd4\u96c6\u5408\u534f\u8c03\u95ee\u9898SetR\u6709\u672c\u8d28\u4f18\u52bf\uff0c\u672c\u6587\u63d0\u51fa\u7684\u591a\u8f6e\u534f\u8bae\u7a81\u7834\u4e86SetR\u7684\u4fe1\u606f\u8bba\u4e0b\u754c\uff0c\u5b9e\u73b0\u4e86\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\u3002"}}
{"id": "2510.19254", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19254", "abs": "https://arxiv.org/abs/2510.19254", "authors": ["Chong Chen", "Jiachi Chen", "Lingfeng Bao", "David Lo", "Yanlin Wang", "Zhenyu Shan", "Ting Chen", "Guangqiang Yin", "Jianxing Yu", "Zibin Zheng"], "title": "Trace: Securing Smart Contract Repository Against Access Control Vulnerability", "comment": null, "summary": "Smart contract vulnerabilities, particularly improper Access Control that\nallows unauthorized execution of restricted functions, have caused billions of\ndollars in losses. GitHub hosts numerous smart contract repositories containing\nsource code, documentation, and configuration files-these serve as intermediate\ndevelopment artifacts that must be compiled and packaged before deployment.\nThird-party developers often reference, reuse, or fork code from these\nrepositories during custom development. However, if the referenced code\ncontains vulnerabilities, it can introduce significant security risks. Existing\ntools for detecting smart contract vulnerabilities are limited in their ability\nto handle complex repositories, as they typically require the target contract\nto be compilable to generate an abstract representation for further analysis.\nThis paper presents TRACE, a tool designed to secure non-compilable smart\ncontract repositories against access control vulnerabilities. TRACE employs\nLLMs to locate sensitive functions involving critical operations (e.g.,\ntransfer) within the contract and subsequently completes function snippets into\na fully compilable contract. TRACE constructs a function call graph from the\nabstract syntax tree (AST) of the completed contract. It uses the control flow\ngraph (CFG) of each function as node information. The nodes of the sensitive\nfunctions are then analyzed to detect Access Control vulnerabilities.\nExperimental results demonstrate that TRACE outperforms state-of-the-art tools\non an open-sourced CVE dataset, detecting 14 out of 15 CVEs. In addition, it\nachieves 89.2% precision on 5,000 recent on-chain contracts, far exceeding the\nbest existing tool at 76.9%. On 83 real-world repositories, TRACE achieves\n87.0% precision, significantly surpassing DeepSeek-R1's 14.3%.", "AI": {"tldr": "TRACE\u662f\u4e00\u4e2a\u4f7f\u7528LLM\u68c0\u6d4b\u4e0d\u53ef\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u4ed3\u5e93\u4e2d\u8bbf\u95ee\u63a7\u5236\u6f0f\u6d1e\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u8865\u5168\u4ee3\u7801\u7247\u6bb5\u3001\u6784\u5efa\u51fd\u6570\u8c03\u7528\u56fe\u548c\u63a7\u5236\u6d41\u56fe\u6765\u8bc6\u522b\u654f\u611f\u51fd\u6570\u4e2d\u7684\u5b89\u5168\u98ce\u9669\u3002", "motivation": "\u667a\u80fd\u5408\u7ea6\u4e2d\u7684\u8bbf\u95ee\u63a7\u5236\u6f0f\u6d1e\u5df2\u9020\u6210\u6570\u5341\u4ebf\u7f8e\u5143\u635f\u5931\uff0c\u73b0\u6709\u5de5\u5177\u9700\u8981\u53ef\u7f16\u8bd1\u5408\u7ea6\u624d\u80fd\u5206\u6790\uff0c\u65e0\u6cd5\u5904\u7406\u590d\u6742\u7684\u4e0d\u53ef\u7f16\u8bd1\u4ed3\u5e93\uff0c\u800c\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u7ecf\u5e38\u590d\u7528\u8fd9\u4e9b\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\uff0c\u5e26\u6765\u5b89\u5168\u98ce\u9669\u3002", "method": "\u4f7f\u7528LLM\u5b9a\u4f4d\u654f\u611f\u51fd\u6570\uff0c\u8865\u5168\u4ee3\u7801\u7247\u6bb5\u4e3a\u53ef\u7f16\u8bd1\u5408\u7ea6\uff0c\u4eceAST\u6784\u5efa\u51fd\u6570\u8c03\u7528\u56fe\uff0c\u4f7f\u7528CFG\u4f5c\u4e3a\u8282\u70b9\u4fe1\u606f\uff0c\u5206\u6790\u654f\u611f\u51fd\u6570\u8282\u70b9\u68c0\u6d4b\u8bbf\u95ee\u63a7\u5236\u6f0f\u6d1e\u3002", "result": "\u5728\u5f00\u6e90CVE\u6570\u636e\u96c6\u4e2d\u68c0\u6d4b\u51fa15\u4e2a\u4e2d\u768414\u4e2a\u6f0f\u6d1e\uff0c\u57285000\u4e2a\u6700\u65b0\u94fe\u4e0a\u5408\u7ea6\u4e2d\u8fbe\u523089.2%\u51c6\u786e\u7387\uff0c\u572883\u4e2a\u771f\u5b9e\u4ed3\u5e93\u4e2d\u8fbe\u523087.0%\u51c6\u786e\u7387\uff0c\u5747\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u6700\u4f73\u5de5\u5177\u3002", "conclusion": "TRACE\u80fd\u6709\u6548\u68c0\u6d4b\u4e0d\u53ef\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u4ed3\u5e93\u4e2d\u7684\u8bbf\u95ee\u63a7\u5236\u6f0f\u6d1e\uff0c\u5728\u591a\u4e2a\u6d4b\u8bd5\u573a\u666f\u4e0b\u6027\u80fd\u8fdc\u8d85\u73b0\u6709\u5de5\u5177\uff0c\u4e3a\u667a\u80fd\u5408\u7ea6\u5b89\u5168\u63d0\u4f9b\u4e86\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.19274", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19274", "abs": "https://arxiv.org/abs/2510.19274", "authors": ["Saurabh Chauhan", "Zeeshan Rasheed", "Malik Abdul Sami", "Kai-Kristian Kemell", "Muhammad Waseem", "Zheying Zhang", "Jussi Rasku", "Mika Saari", "Pekka Abrahamsson"], "title": "From Specification to Service: Accelerating API-First Development Using Multi-Agent Systems", "comment": "9 Figures, 6Tables", "summary": "This paper presents a system that uses Large Language Models (LLMs)-based\nagents to automate the API-first development of RESTful microservices. This\nsystem helps to create an OpenAPI specification, generate server code from it,\nand refine the code through a feedback loop that analyzes execution logs and\nerror messages. The integration of log analysis enables the LLM to detect and\naddress issues efficiently, reducing the number of iterations required to\nproduce functional and robust services. This study's main goal is to advance\nAPI-first development automation for RESTful web services and test the\ncapability of LLM-based multi-agent systems in supporting the API-first\ndevelopment approach. To test the proposed system's potential, we utilized the\nPRAB benchmark. The results indicate that if we keep the OpenAPI specification\nsmall and focused, LLMs are capable of generating complete functional code with\nbusiness logic that aligns to the specification. The code for the system is\npublicly available at https://github.com/sirbh/code-gen", "AI": {"tldr": "\u4f7f\u7528\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u81ea\u52a8\u5316RESTful\u5fae\u670d\u52a1\u7684API\u4f18\u5148\u5f00\u53d1\uff0c\u901a\u8fc7OpenAPI\u89c4\u8303\u751f\u6210\u3001\u4ee3\u7801\u751f\u6210\u548c\u57fa\u4e8e\u65e5\u5fd7\u5206\u6790\u7684\u53cd\u9988\u5faa\u73af\u6765\u51cf\u5c11\u8fed\u4ee3\u6b21\u6570\u3002", "motivation": "\u63a8\u8fdbRESTful Web\u670d\u52a1\u7684API\u4f18\u5148\u5f00\u53d1\u81ea\u52a8\u5316\uff0c\u5e76\u6d4b\u8bd5\u57fa\u4e8eLLM\u7684\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u5728\u652f\u6301API\u4f18\u5148\u5f00\u53d1\u65b9\u6cd5\u65b9\u9762\u7684\u80fd\u529b\u3002", "method": "\u6784\u5efa\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5229\u7528LLM\u667a\u80fd\u4f53\u521b\u5efaOpenAPI\u89c4\u8303\uff0c\u4ece\u4e2d\u751f\u6210\u670d\u52a1\u5668\u4ee3\u7801\uff0c\u5e76\u901a\u8fc7\u5206\u6790\u6267\u884c\u65e5\u5fd7\u548c\u9519\u8bef\u6d88\u606f\u7684\u53cd\u9988\u5faa\u73af\u6765\u4f18\u5316\u4ee3\u7801\u3002", "result": "\u4f7f\u7528PRAB\u57fa\u51c6\u6d4b\u8bd5\u8868\u660e\uff0c\u5f53OpenAPI\u89c4\u8303\u4fdd\u6301\u5c0f\u800c\u4e13\u6ce8\u65f6\uff0cLLM\u80fd\u591f\u751f\u6210\u7b26\u5408\u89c4\u8303\u7684\u5b8c\u6574\u529f\u80fd\u4ee3\u7801\u548c\u4e1a\u52a1\u903b\u8f91\u3002", "conclusion": "\u57fa\u4e8eLLM\u7684\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u53ef\u4ee5\u6709\u6548\u652f\u6301API\u4f18\u5148\u5f00\u53d1\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5728\u4fdd\u6301OpenAPI\u89c4\u8303\u7b80\u6d01\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u751f\u6210\u529f\u80fd\u5b8c\u6574\u7684\u4ee3\u7801\u3002"}}
{"id": "2510.19281", "categories": ["cs.SE", "cs.CR", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.19281", "abs": "https://arxiv.org/abs/2510.19281", "authors": ["Shubham Joshi"], "title": "An Empirical Study of Bitwise Operators Intuitiveness through Performance Metrics", "comment": "15 pages, 10 tables, 9 Figures", "summary": "Objectives: This study aims to investigate the readability and\nunderstandability of bitwise operators in programming, with the main hypothesis\nthat there will be a difference in the performance metrics (response time and\nerror rate) between participants exposed to various bitwise operators related\nquestions and those who are not.\n  Participants: Participants in this human research study include people\nwithout programming background, novice programmers, and university students\nwith varying programming experience (from freshmen to PhD level). There were 23\nparticipants for this study.\n  Study Methods: This study uses an Within-Subjects Experimental Design to\nassess how people with diverse programming backgrounds understand and use\nbitwise operators. Participants complete tasks in JavaScript program, and their\ntask completion time and accuracy of the tasks are recorded for analysis.\n  Findings: The results indicate that operators can be one of the factors\npredicting response time, with a small but significant effect, with R-squared\n0.032, (1, 494) = 16.5, p < .001. Additionally, some operators like OR, NOT,\nand Left Shift showed statistical significance in task completion times\ncompared to other operators.\n  Conclusions: While the complexity of bitwise operators did not generally\nresult in longer task completion times, certain operators were found to be less\nintuitive, suggesting the need for further investigation and potential redesign\nfor improved understandability.", "AI": {"tldr": "\u8be5\u7814\u7a76\u8c03\u67e5\u4e86\u4e0d\u540c\u7f16\u7a0b\u80cc\u666f\u4eba\u5458\u5bf9\u4f4d\u8fd0\u7b97\u7b26\u7684\u53ef\u8bfb\u6027\u548c\u7406\u89e3\u80fd\u529b\uff0c\u53d1\u73b0\u67d0\u4e9b\u8fd0\u7b97\u7b26\uff08\u5982OR\u3001NOT\u3001\u5de6\u79fb\uff09\u5728\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u4e0a\u5177\u6709\u7edf\u8ba1\u663e\u8457\u6027\u5dee\u5f02\u3002", "motivation": "\u7814\u7a76\u4f4d\u8fd0\u7b97\u7b26\u5728\u7f16\u7a0b\u4e2d\u7684\u53ef\u8bfb\u6027\u548c\u7406\u89e3\u6027\uff0c\u68c0\u9a8c\u4e0d\u540c\u7f16\u7a0b\u7ecf\u9a8c\u4eba\u5458\u5728\u4f7f\u7528\u4f4d\u8fd0\u7b97\u7b26\u65f6\u7684\u8868\u73b0\u5dee\u5f02\u3002", "method": "\u91c7\u7528\u88ab\u8bd5\u5185\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u8ba923\u540d\u4e0d\u540c\u7f16\u7a0b\u80cc\u666f\u7684\u53c2\u4e0e\u8005\uff08\u4ece\u65e0\u7f16\u7a0b\u7ecf\u9a8c\u5230\u535a\u58eb\u751f\uff09\u5728JavaScript\u7a0b\u5e8f\u4e2d\u5b8c\u6210\u4efb\u52a1\uff0c\u8bb0\u5f55\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u548c\u51c6\u786e\u7387\u3002", "result": "\u8fd0\u7b97\u7b26\u662f\u9884\u6d4b\u54cd\u5e94\u65f6\u95f4\u7684\u56e0\u7d20\u4e4b\u4e00\uff0c\u5177\u6709\u5c0f\u4f46\u663e\u8457\u7684\u5f71\u54cd\uff08R\u00b2=0.032\uff0cF(1,494)=16.5\uff0cp<.001\uff09\u3002OR\u3001NOT\u548c\u5de6\u79fb\u8fd0\u7b97\u7b26\u5728\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u4e0a\u663e\u793a\u51fa\u7edf\u8ba1\u663e\u8457\u6027\u3002", "conclusion": "\u867d\u7136\u4f4d\u8fd0\u7b97\u7b26\u7684\u590d\u6742\u6027\u901a\u5e38\u4e0d\u4f1a\u5bfc\u81f4\u66f4\u957f\u7684\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\uff0c\u4f46\u67d0\u4e9b\u8fd0\u7b97\u7b26\u88ab\u53d1\u73b0\u4e0d\u591f\u76f4\u89c2\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u548c\u53ef\u80fd\u7684\u91cd\u65b0\u8bbe\u8ba1\u4ee5\u63d0\u9ad8\u53ef\u7406\u89e3\u6027\u3002"}}
{"id": "2510.19393", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.19393", "abs": "https://arxiv.org/abs/2510.19393", "authors": ["Stefan Schott", "Serena Elisa Ponta", "Wolfram Fischer", "Jonas Klauke", "Eric Bodden"], "title": "Bytecode-centric Detection of Known-to-be-vulnerable Dependencies in Java Projects", "comment": "To be published in: ICSE 2026 Proceedings", "summary": "On average, 71% of the code in typical Java projects comes from open-source\nsoftware (OSS) dependencies, making OSS dependencies the dominant component of\nmodern software code bases. This high degree of OSS reliance comes with a\nconsiderable security risk of adding known security vulnerabilities to a code\nbase. To remedy this risk, researchers and companies have developed various\ndependency scanners, which try to identify inclusions of known-to-be-vulnerable\nOSS dependencies. However, there are still challenges that modern dependency\nscanners do not overcome, especially when it comes to dependency modifications,\nsuch as re-compilations, re-bundlings or re-packagings, which are common in the\nJava ecosystem. To overcome these challenges, we present Jaralyzer, a\nbytecode-centric dependency scanner for Java. Jaralyzer does not rely on the\nmetadata or the source code of the included OSS dependencies being available\nbut directly analyzes a dependency's bytecode. Our evaluation across 56 popular\nOSS components demonstrates that Jaralyzer outperforms other popular dependency\nscanners in detecting vulnerabilities within modified dependencies. It is the\nonly scanner capable of identifying vulnerabilities across all the above\nmentioned types of modifications. But even when applied to unmodified\ndependencies, Jaralyzer outperforms the current state-of-the-art code-centric\nscanner Eclipse Steady by detecting 28 more true vulnerabilities and yielding\n29 fewer false warnings.", "AI": {"tldr": "Jaralyzer\u662f\u4e00\u4e2a\u57fa\u4e8e\u5b57\u8282\u7801\u5206\u6790\u7684Java\u4f9d\u8d56\u626b\u63cf\u5668\uff0c\u80fd\u591f\u6709\u6548\u68c0\u6d4b\u4fee\u6539\u8fc7\u7684\u5f00\u6e90\u4f9d\u8d56\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u626b\u63cf\u5de5\u5177\u3002", "motivation": "\u73b0\u4ee3Java\u9879\u76ee\u4e2d71%\u7684\u4ee3\u7801\u6765\u81ea\u5f00\u6e90\u4f9d\u8d56\uff0c\u8fd9\u5e26\u6765\u4e86\u4e25\u91cd\u7684\u5b89\u5168\u98ce\u9669\u3002\u73b0\u6709\u4f9d\u8d56\u626b\u63cf\u5668\u5728\u5904\u7406\u91cd\u65b0\u7f16\u8bd1\u3001\u91cd\u65b0\u6253\u5305\u7b49\u5e38\u89c1\u4f9d\u8d56\u4fee\u6539\u65f6\u5b58\u5728\u5c40\u9650\u6027\u3002", "method": "\u5f00\u53d1\u4e86Jaralyzer\u5de5\u5177\uff0c\u76f4\u63a5\u5206\u6790\u4f9d\u8d56\u7684\u5b57\u8282\u7801\uff0c\u4e0d\u4f9d\u8d56\u5143\u6570\u636e\u6216\u6e90\u4ee3\u7801\u7684\u53ef\u7528\u6027\u3002", "result": "\u572856\u4e2a\u6d41\u884cOSS\u7ec4\u4ef6\u4e0a\u7684\u8bc4\u4f30\u663e\u793a\uff0cJaralyzer\u5728\u68c0\u6d4b\u4fee\u6539\u4f9d\u8d56\u4e2d\u7684\u6f0f\u6d1e\u65b9\u9762\u4f18\u4e8e\u5176\u4ed6\u626b\u63cf\u5668\uff0c\u662f\u552f\u4e00\u80fd\u8bc6\u522b\u6240\u6709\u7c7b\u578b\u4fee\u6539\u4e2d\u6f0f\u6d1e\u7684\u5de5\u5177\u3002\u5728\u672a\u4fee\u6539\u4f9d\u8d56\u4e0a\uff0c\u6bd4Eclipse Steady\u591a\u68c0\u6d4b28\u4e2a\u771f\u5b9e\u6f0f\u6d1e\uff0c\u51cf\u5c1129\u4e2a\u8bef\u62a5\u3002", "conclusion": "Jaralyzer\u901a\u8fc7\u5b57\u8282\u7801\u5206\u6790\u6709\u6548\u89e3\u51b3\u4e86\u4f9d\u8d56\u4fee\u6539\u5e26\u6765\u7684\u6f0f\u6d1e\u68c0\u6d4b\u6311\u6218\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4f9d\u8d56\u626b\u63cf\u7684\u51c6\u786e\u6027\u548c\u8986\u76d6\u8303\u56f4\u3002"}}
{"id": "2510.19438", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19438", "abs": "https://arxiv.org/abs/2510.19438", "authors": ["Linfeng Liang", "Chenkai Tan", "Yao Deng", "Yingfeng Cai", "T. Y Chen", "Xi Zheng"], "title": "AutoMT: A Multi-Agent LLM Framework for Automated Metamorphic Testing of Autonomous Driving Systems", "comment": null, "summary": "Autonomous Driving Systems (ADS) are safety-critical, where failures can be\nsevere. While Metamorphic Testing (MT) is effective for fault detection in ADS,\nexisting methods rely heavily on manual effort and lack automation. We present\nAutoMT, a multi-agent MT framework powered by Large Language Models (LLMs) that\nautomates the extraction of Metamorphic Relations (MRs) from local traffic\nrules and the generation of valid follow-up test cases. AutoMT leverages LLMs\nto extract MRs from traffic rules in Gherkin syntax using a predefined\nontology. A vision-language agent analyzes scenarios, and a search agent\nretrieves suitable MRs from a RAG-based database to generate follow-up cases\nvia computer vision. Experiments show that AutoMT achieves up to 5 x higher\ntest diversity in follow-up case generation compared to the best baseline\n(manual expert-defined MRs) in terms of validation rate, and detects up to\n20.55% more behavioral violations. While manual MT relies on a fixed set of\npredefined rules, AutoMT automatically extracts diverse metamorphic relations\nthat augment real-world datasets and help uncover corner cases often missed\nduring in-field testing and data collection. Its modular architecture\nseparating MR extraction, filtering, and test generation supports integration\ninto industrial pipelines and potentially enables simulation-based testing to\nsystematically cover underrepresented or safety-critical scenarios.", "AI": {"tldr": "AutoMT\u662f\u4e00\u4e2a\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u591a\u667a\u80fd\u4f53\u8715\u53d8\u6d4b\u8bd5\u6846\u67b6\uff0c\u7528\u4e8e\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u6d4b\u8bd5\uff0c\u80fd\u591f\u4ece\u4ea4\u901a\u89c4\u5219\u4e2d\u81ea\u52a8\u63d0\u53d6\u8715\u53d8\u5173\u7cfb\u5e76\u751f\u6210\u6709\u6548\u7684\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u3002", "motivation": "\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u662f\u5b89\u5168\u5173\u952e\u7cfb\u7edf\uff0c\u73b0\u6709\u8715\u53d8\u6d4b\u8bd5\u65b9\u6cd5\u4f9d\u8d56\u5927\u91cf\u4eba\u5de5\u5de5\u4f5c\u4e14\u7f3a\u4e4f\u81ea\u52a8\u5316\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u65b9\u6cd5\u3002", "method": "\u4f7f\u7528LLMs\u4eceGherkin\u8bed\u6cd5\u7684\u4ea4\u901a\u89c4\u5219\u4e2d\u63d0\u53d6\u8715\u53d8\u5173\u7cfb\uff0c\u901a\u8fc7\u89c6\u89c9\u8bed\u8a00\u667a\u80fd\u4f53\u5206\u6790\u573a\u666f\uff0c\u641c\u7d22\u667a\u80fd\u4f53\u4eceRAG\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u5408\u9002\u7684\u8715\u53d8\u5173\u7cfb\uff0c\u901a\u8fc7\u8ba1\u7b97\u673a\u89c6\u89c9\u751f\u6210\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u3002", "result": "AutoMT\u5728\u540e\u7eed\u7528\u4f8b\u751f\u6210\u4e2d\u5b9e\u73b0\u4e86\u6bd4\u6700\u4f73\u57fa\u7ebf\uff08\u624b\u52a8\u4e13\u5bb6\u5b9a\u4e49\u7684\u8715\u53d8\u5173\u7cfb\uff09\u9ad85\u500d\u7684\u6d4b\u8bd5\u591a\u6837\u6027\uff0c\u68c0\u6d4b\u523020.55%\u66f4\u591a\u7684\u884c\u4e3a\u8fdd\u89c4\u3002", "conclusion": "AutoMT\u80fd\u591f\u81ea\u52a8\u63d0\u53d6\u591a\u6837\u5316\u7684\u8715\u53d8\u5173\u7cfb\uff0c\u8865\u5145\u771f\u5b9e\u4e16\u754c\u6570\u636e\u96c6\uff0c\u53d1\u73b0\u73b0\u573a\u6d4b\u8bd5\u548c\u6570\u636e\u6536\u96c6\u4e2d\u7ecf\u5e38\u9057\u6f0f\u7684\u8fb9\u754c\u60c5\u51b5\uff0c\u5176\u6a21\u5757\u5316\u67b6\u6784\u652f\u6301\u5de5\u4e1a\u6d41\u6c34\u7ebf\u96c6\u6210\u3002"}}
{"id": "2510.19460", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19460", "abs": "https://arxiv.org/abs/2510.19460", "authors": ["Thomas I. Strasser", "Edmund Widl", "Carlos Ayon Mac Gregor", "Mirko Ginocchi", "Rene Kuchenbuch"], "title": "Mapping and Evolving Interoperability Testing in European Energy Systems: The int:net Perspective", "comment": "2025 IEEE PES Innovative Smart Grid Technologies Conference Europe\n  (ISGT Europe)", "summary": "The ongoing transformation of the European energy landscape, driven by the\nintegration of renewable energy sources, digital technologies, and\ndecentralized systems, requires a high degree of interoperability across\ndiverse components and systems. Ensuring that these elements can exchange\ninformation and operate together reliably is essential for achieving a secure,\nflexible, and efficient energy supply infrastructure. While several initiatives\nhave contributed to the development of smart grid testing infrastructures, they\ndo not provide a dedicated or comprehensive focus on interoperability testing.\nA structured and harmonized overview of interoperability testing capabilities\nacross Europe is therefore still missing. This work therefore presents a novel\ncontribution by analyzing the European interoperability testing facility\nlandscape through a structured survey of 30 facilities. It provides a\ncategorized inventory of testing infrastructures, applied methodologies, and\nreference test cases, and introduces a blueprint for the development of future\ntesting environments. The findings contribute to the establishment of a\ncoordinated European ecosystem for interoperability testing, supporting\ncollaboration, innovation, and alignment with the goals of the energy\ntransition.", "AI": {"tldr": "\u672c\u6587\u5206\u6790\u4e86\u6b27\u6d3230\u4e2a\u4e92\u64cd\u4f5c\u6027\u6d4b\u8bd5\u8bbe\u65bd\uff0c\u63d0\u4f9b\u4e86\u6d4b\u8bd5\u57fa\u7840\u8bbe\u65bd\u3001\u65b9\u6cd5\u548c\u53c2\u8003\u6d4b\u8bd5\u6848\u4f8b\u7684\u5206\u7c7b\u6e05\u5355\uff0c\u5e76\u4e3a\u672a\u6765\u6d4b\u8bd5\u73af\u5883\u7684\u5f00\u53d1\u5f15\u5165\u4e86\u84dd\u56fe\u3002", "motivation": "\u6b27\u6d32\u80fd\u6e90\u8f6c\u578b\u9700\u8981\u9ad8\u5ea6\u4e92\u64cd\u4f5c\u6027\uff0c\u4f46\u76ee\u524d\u7f3a\u4e4f\u5bf9\u4e92\u64cd\u4f5c\u6027\u6d4b\u8bd5\u7684\u4e13\u95e8\u5173\u6ce8\u548c\u7ed3\u6784\u5316\u6982\u8ff0\u3002", "method": "\u901a\u8fc7\u5bf930\u4e2a\u6b27\u6d32\u6d4b\u8bd5\u8bbe\u65bd\u8fdb\u884c\u7ed3\u6784\u5316\u8c03\u67e5\uff0c\u5206\u6790\u6d4b\u8bd5\u57fa\u7840\u8bbe\u65bd\u3001\u5e94\u7528\u65b9\u6cd5\u548c\u53c2\u8003\u6d4b\u8bd5\u6848\u4f8b\u3002", "result": "\u5efa\u7acb\u4e86\u6b27\u6d32\u4e92\u64cd\u4f5c\u6027\u6d4b\u8bd5\u8bbe\u65bd\u7684\u5206\u7c7b\u6e05\u5355\uff0c\u5e76\u63d0\u51fa\u4e86\u672a\u6765\u6d4b\u8bd5\u73af\u5883\u5f00\u53d1\u7684\u84dd\u56fe\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u6709\u52a9\u4e8e\u5efa\u7acb\u534f\u8c03\u7684\u6b27\u6d32\u4e92\u64cd\u4f5c\u6027\u6d4b\u8bd5\u751f\u6001\u7cfb\u7edf\uff0c\u652f\u6301\u5408\u4f5c\u3001\u521b\u65b0\u548c\u80fd\u6e90\u8f6c\u578b\u76ee\u6807\u7684\u5b9e\u73b0\u3002"}}
{"id": "2510.19593", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.19593", "abs": "https://arxiv.org/abs/2510.19593", "authors": ["Aoyang Fang", "Haowen Yang", "Haoze Dong", "Qisheng Lu", "Junjielong Xu", "Pinjia He"], "title": "A Goal-Driven Survey on Root Cause Analysis", "comment": null, "summary": "Root Cause Analysis (RCA) is a crucial aspect of incident management in\nlarge-scale cloud services. While the term root cause analysis or RCA has been\nwidely used, different studies formulate the task differently. This is because\nthe term \"RCA\" implicitly covers tasks with distinct underlying goals. For\ninstance, the goal of localizing a faulty service for rapid triage is\nfundamentally different from identifying a specific functional bug for a\ndefinitive fix. However, previous surveys have largely overlooked these\ngoal-based distinctions, conventionally categorizing papers by input data types\n(e.g., metric-based vs. trace-based methods). This leads to the grouping of\nworks with disparate objectives, thereby obscuring the true progress and gaps\nin the field. Meanwhile, the typical audience of an RCA survey is either laymen\nwho want to know the goals and big picture of the task or RCA researchers who\nwant to figure out past research under the same task formulation. Thus, an RCA\nsurvey that organizes the related papers according to their goals is in high\ndemand. To this end, this paper presents a goal-driven framework that\neffectively categorizes and integrates 135 papers on RCA in the context of\ncloud incident management based on their diverse goals, spanning the period\nfrom 2014 to 2025. In addition to the goal-driven categorization, it discusses\nthe ultimate goal of all RCA papers as an umbrella covering different RCA\nformulations. Moreover, the paper discusses open challenges and future\ndirections in RCA.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u76ee\u6807\u9a71\u52a8\u7684\u6846\u67b6\uff0c\u5bf92014-2025\u5e74\u95f4135\u7bc7\u4e91\u4e8b\u6545\u7ba1\u7406\u4e2d\u7684\u6839\u56e0\u5206\u6790\u8bba\u6587\u8fdb\u884c\u5206\u7c7b\uff0c\u5f3a\u8c03\u6309\u76ee\u6807\u800c\u975e\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u7ec4\u7ec7\u7684\u91cd\u8981\u6027\u3002", "motivation": "\u73b0\u6709RCA\u8c03\u67e5\u901a\u5e38\u6309\u6570\u636e\u7c7b\u578b\u5206\u7c7b\uff0c\u5ffd\u89c6\u4e86\u4e0d\u540c\u7814\u7a76\u76ee\u6807\u7684\u6839\u672c\u5dee\u5f02\uff0c\u5bfc\u81f4\u76ee\u6807\u4e0d\u540c\u7684\u7814\u7a76\u88ab\u6df7\u4e3a\u4e00\u8c08\uff0c\u63a9\u76d6\u4e86\u9886\u57df\u7684\u771f\u5b9e\u8fdb\u5c55\u548c\u5dee\u8ddd\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u76ee\u6807\u9a71\u52a8\u7684\u5206\u7c7b\u6846\u67b6\uff0c\u57fa\u4e8e\u7814\u7a76\u76ee\u6807\u5bf9RCA\u8bba\u6587\u8fdb\u884c\u7cfb\u7edf\u5206\u7c7b\u548c\u6574\u5408\uff0c\u6db5\u76d6\u4e0d\u540c\u7684\u4efb\u52a1\u5236\u5b9a\u65b9\u5f0f\u3002", "result": "\u6210\u529f\u5206\u7c7b\u4e86135\u7bc7RCA\u8bba\u6587\uff0c\u8bc6\u522b\u4e86\u4e0d\u540c\u7814\u7a76\u76ee\u6807\u4e0b\u7684\u5de5\u4f5c\uff0c\u5e76\u8ba8\u8bba\u4e86\u6240\u6709RCA\u8bba\u6587\u7684\u7ec8\u6781\u76ee\u6807\u4f5c\u4e3a\u7edf\u4e00\u6846\u67b6\u3002", "conclusion": "\u76ee\u6807\u9a71\u52a8\u7684\u5206\u7c7b\u65b9\u6cd5\u80fd\u66f4\u6e05\u6670\u5730\u5c55\u793aRCA\u9886\u57df\u8fdb\u5c55\uff0c\u6307\u51fa\u4e86\u5f00\u653e\u6311\u6218\u548c\u672a\u6765\u7814\u7a76\u65b9\u5411\uff0c\u4e3a\u7814\u7a76\u8005\u548c\u5b9e\u8df5\u8005\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6307\u5bfc\u3002"}}
{"id": "2510.19600", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.19600", "abs": "https://arxiv.org/abs/2510.19600", "authors": ["Qianli Ma", "Siyu Wang", "Yilin Chen", "Yinhao Tang", "Yixiang Yang", "Chang Guo", "Bingjie Gao", "Zhening Xing", "Yanan Sun", "Zhipeng Zhang"], "title": "Human-Agent Collaborative Paper-to-Page Crafting for Under $0.1", "comment": null, "summary": "In the quest for scientific progress, communicating research is as vital as\nthe discovery itself. Yet, researchers are often sidetracked by the manual,\nrepetitive chore of building project webpages to make their dense papers\naccessible. While automation has tackled static slides and posters, the\ndynamic, interactive nature of webpages has remained an unaddressed challenge.\nTo bridge this gap, we reframe the problem, arguing that the solution lies not\nin a single command, but in a collaborative, hierarchical process. We introduce\n$\\textbf{AutoPage}$, a novel multi-agent system that embodies this philosophy.\nAutoPage deconstructs paper-to-page creation into a coarse-to-fine pipeline\nfrom narrative planning to multimodal content generation and interactive\nrendering. To combat AI hallucination, dedicated \"Checker\" agents verify each\nstep against the source paper, while optional human checkpoints ensure the\nfinal product aligns perfectly with the author's vision, transforming the\nsystem from a mere tool into a powerful collaborative assistant. To rigorously\nvalidate our approach, we also construct $\\textbf{PageBench}$, the first\nbenchmark for this new task. Experiments show AutoPage not only generates\nhigh-quality, visually appealing pages but does so with remarkable efficiency\nin under 15 minutes for less than \\$0.1. Code and dataset will be released at\n$\\href{https://mqleet.github.io/AutoPage_ProjectPage/}{Webpage}$.", "AI": {"tldr": "AutoPage\u662f\u4e00\u4e2a\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\uff0c\u901a\u8fc7\u5206\u5c42\u534f\u4f5c\u6d41\u7a0b\u81ea\u52a8\u5c06\u5b66\u672f\u8bba\u6587\u8f6c\u6362\u4e3a\u4ea4\u4e92\u5f0f\u9879\u76ee\u7f51\u9875\uff0c\u89e3\u51b3\u4e86\u4f20\u7edf\u624b\u52a8\u521b\u5efa\u7f51\u9875\u7684\u7e41\u7410\u95ee\u9898\u3002", "motivation": "\u7814\u7a76\u4eba\u5458\u5728\u521b\u5efa\u9879\u76ee\u7f51\u9875\u4ee5\u5c55\u793a\u7814\u7a76\u6210\u679c\u65f6\u9762\u4e34\u624b\u52a8\u3001\u91cd\u590d\u6027\u5de5\u4f5c\u7684\u56f0\u6270\uff0c\u73b0\u6709\u81ea\u52a8\u5316\u5de5\u5177\u65e0\u6cd5\u5904\u7406\u7f51\u9875\u7684\u52a8\u6001\u4ea4\u4e92\u7279\u6027\u3002", "method": "\u91c7\u7528\u4ece\u7c97\u5230\u7ec6\u7684\u7ba1\u9053\u65b9\u6cd5\uff0c\u5305\u62ec\u53d9\u4e8b\u89c4\u5212\u3001\u591a\u6a21\u6001\u5185\u5bb9\u751f\u6210\u548c\u4ea4\u4e92\u5f0f\u6e32\u67d3\uff0c\u4f7f\u7528\u4e13\u95e8\u7684\"\u68c0\u67e5\u5668\"\u667a\u80fd\u4f53\u9a8c\u8bc1\u5185\u5bb9\u51c6\u786e\u6027\uff0c\u5e76\u8bbe\u7f6e\u53ef\u9009\u7684\u4eba\u5de5\u68c0\u67e5\u70b9\u3002", "result": "AutoPage\u80fd\u572815\u5206\u949f\u5185\u4ee5\u4f4e\u4e8e0.1\u7f8e\u5143\u7684\u6210\u672c\u751f\u6210\u9ad8\u8d28\u91cf\u3001\u89c6\u89c9\u5438\u5f15\u529b\u5f3a\u7684\u7f51\u9875\uff0c\u5e76\u6784\u5efa\u4e86\u9996\u4e2a\u76f8\u5173\u57fa\u51c6\u6d4b\u8bd5PageBench\u3002", "conclusion": "AutoPage\u5c06\u7cfb\u7edf\u4ece\u5355\u7eaf\u5de5\u5177\u8f6c\u53d8\u4e3a\u5f3a\u5927\u7684\u534f\u4f5c\u52a9\u624b\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u8bba\u6587\u5230\u7f51\u9875\u8f6c\u6362\u7684\u81ea\u52a8\u5316\u6311\u6218\u3002"}}
{"id": "2510.19615", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.19615", "abs": "https://arxiv.org/abs/2510.19615", "authors": ["Zhiping Zhou", "Xiaohong Li", "Ruitao Feng", "Yao Zhang", "Yuekang Li", "Wenbu Feng", "Yunqian Wang", "Yuqing Li"], "title": "FidelityGPT: Correcting Decompilation Distortions with Retrieval Augmented Generation", "comment": null, "summary": "Decompilation converts machine code into human-readable form, enabling\nanalysis and debugging without source code. However, fidelity issues often\ndegrade the readability and semantic accuracy of decompiled output. Existing\nmethods, such as variable renaming or structural simplification, provide\npartial improvements but lack robust detection and correction, particularly for\ncomplex closed-source binaries. We present FidelityGPT, a framework that\nenhances decompiled code accuracy and readability by systematically detecting\nand correcting semantic distortions. FidelityGPT introduces distortion-aware\nprompt templates tailored to closed-source settings and integrates\nRetrieval-Augmented Generation (RAG) with a dynamic semantic intensity\nalgorithm to locate distorted lines and retrieve semantically similar code from\na database. A variable dependency algorithm further mitigates long-context\nlimitations by analyzing redundant variables and integrating their dependencies\ninto the prompt context. Evaluated on 620 function pairs from a binary\nsimilarity benchmark, FidelityGPT achieved an average detection accuracy of 89%\nand a precision of 83%. Compared to the state-of-the-art DeGPT (Fix Rate 83%,\nCorrected Fix Rate 37%), FidelityGPT attained 94% FR and 64% CFR, demonstrating\nsignificant gains in accuracy and readability. These results highlight its\npotential to advance LLM-based decompilation and reverse engineering.", "AI": {"tldr": "FidelityGPT\u662f\u4e00\u4e2a\u901a\u8fc7\u7cfb\u7edf\u68c0\u6d4b\u548c\u6821\u6b63\u8bed\u4e49\u5931\u771f\u6765\u589e\u5f3a\u53cd\u7f16\u8bd1\u4ee3\u7801\u51c6\u786e\u6027\u548c\u53ef\u8bfb\u6027\u7684\u6846\u67b6\uff0c\u5728\u4e8c\u8fdb\u5236\u76f8\u4f3c\u6027\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5b9e\u73b0\u4e8694%\u7684\u4fee\u590d\u7387\u548c64%\u7684\u6b63\u786e\u4fee\u590d\u7387\u3002", "motivation": "\u73b0\u6709\u53cd\u7f16\u8bd1\u65b9\u6cd5\u5b58\u5728\u4fdd\u771f\u5ea6\u95ee\u9898\uff0c\u5bfc\u81f4\u53cd\u7f16\u8bd1\u8f93\u51fa\u7684\u53ef\u8bfb\u6027\u548c\u8bed\u4e49\u51c6\u786e\u6027\u4e0b\u964d\uff0c\u7279\u522b\u662f\u5728\u590d\u6742\u7684\u95ed\u6e90\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7f3a\u4e4f\u9c81\u68d2\u7684\u68c0\u6d4b\u548c\u6821\u6b63\u673a\u5236\u3002", "method": "FidelityGPT\u5f15\u5165\u4e86\u9488\u5bf9\u95ed\u6e90\u73af\u5883\u7684\u5931\u771f\u611f\u77e5\u63d0\u793a\u6a21\u677f\uff0c\u96c6\u6210\u4e86\u68c0\u7d22\u589e\u5f3a\u751f\u6210(RAG)\u4e0e\u52a8\u6001\u8bed\u4e49\u5f3a\u5ea6\u7b97\u6cd5\u6765\u5b9a\u4f4d\u5931\u771f\u884c\u5e76\u4ece\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u8bed\u4e49\u76f8\u4f3c\u7684\u4ee3\u7801\uff0c\u8fd8\u4f7f\u7528\u53d8\u91cf\u4f9d\u8d56\u7b97\u6cd5\u5206\u6790\u5197\u4f59\u53d8\u91cf\u5e76\u5c06\u5176\u4f9d\u8d56\u5173\u7cfb\u96c6\u6210\u5230\u63d0\u793a\u4e0a\u4e0b\u6587\u4e2d\u3002", "result": "\u5728620\u4e2a\u51fd\u6570\u5bf9\u7684\u8bc4\u4f30\u4e2d\uff0cFidelityGPT\u5b9e\u73b0\u4e86\u5e73\u574789%\u7684\u68c0\u6d4b\u51c6\u786e\u7387\u548c83%\u7684\u7cbe\u786e\u7387\uff0c\u76f8\u6bd4\u6700\u5148\u8fdb\u7684DeGPT(\u4fee\u590d\u738783%\uff0c\u6b63\u786e\u4fee\u590d\u738737%)\uff0c\u8fbe\u5230\u4e8694%\u7684\u4fee\u590d\u7387\u548c64%\u7684\u6b63\u786e\u4fee\u590d\u7387\u3002", "conclusion": "FidelityGPT\u5728\u51c6\u786e\u6027\u548c\u53ef\u8bfb\u6027\u65b9\u9762\u53d6\u5f97\u4e86\u663e\u8457\u63d0\u5347\uff0c\u5c55\u793a\u4e86\u5176\u5728\u57fa\u4e8eLLM\u7684\u53cd\u7f16\u8bd1\u548c\u9006\u5411\u5de5\u7a0b\u9886\u57df\u7684\u6f5c\u529b\u3002"}}
{"id": "2510.19692", "categories": ["cs.SE", "cs.AI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.19692", "abs": "https://arxiv.org/abs/2510.19692", "authors": ["Rashina Hoda"], "title": "Toward Agentic Software Engineering Beyond Code: Framing Vision, Values, and Vocabulary", "comment": "5 pages", "summary": "Agentic AI is poised to usher in a seismic paradigm shift in Software\nEngineering (SE). As technologists rush head-along to make agentic AI a\nreality, SE researchers are driven to establish agentic SE as a research area.\nWhile early visions of agentic SE are primarily focused on code-related\nactivities, early empirical evidence calls for a consideration of a range of\nsocio-technical concerns to make it work in practice. This paper contributes to\nthe emerging community vision by: (a) recommending an expansion of its scope\nbeyond code, toward a 'whole of process' vision, grounding it in SE foundations\nand evolution and emerging agentic SE frameworks, (b) proposing a preliminary\nset of values and principles to guide efforts, and (c) sharing guidance on\ndesigning/using well-defined vocabulary for agentic SE. It is hoped that these\nideas will encourage community collaborations and steer the SE community\ntowards laying strong foundations of agentic SE so its not only inevitable but\nalso deliberate and desirable in the long run.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5c06\u667a\u80fd\u4f53\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8303\u56f4\u4ece\u4ee3\u7801\u6269\u5c55\u5230\u5168\u6d41\u7a0b\uff0c\u57fa\u4e8eSE\u57fa\u7840\u548c\u65b0\u5174\u6846\u67b6\uff0c\u63d0\u51fa\u6307\u5bfc\u539f\u5219\u548c\u8bcd\u6c47\u8868\u8bbe\u8ba1\u5efa\u8bae\uff0c\u4e3a\u667a\u80fd\u4f53SE\u5efa\u7acb\u575a\u5b9e\u57fa\u7840\u3002", "motivation": "\u667a\u80fd\u4f53AI\u6b63\u5728\u5f15\u53d1\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8303\u5f0f\u8f6c\u53d8\uff0c\u4f46\u5f53\u524d\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u4ee3\u7801\u76f8\u5173\u6d3b\u52a8\uff0c\u9700\u8981\u4ece\u793e\u4f1a\u6280\u672f\u89d2\u5ea6\u8003\u8651\u5b9e\u9645\u5e94\u7528\u95ee\u9898\u3002", "method": "\u901a\u8fc7\u6269\u5c55\u667a\u80fd\u4f53SE\u7684\u8303\u56f4\u81f3\u5168\u6d41\u7a0b\uff0c\u57fa\u4e8eSE\u57fa\u7840\u548c\u6f14\u5316\u4ee5\u53ca\u65b0\u5174\u6846\u67b6\uff0c\u63d0\u51fa\u521d\u6b65\u4ef7\u503c\u89c2\u548c\u539f\u5219\uff0c\u5e76\u5206\u4eab\u8bcd\u6c47\u8868\u8bbe\u8ba1\u6307\u5bfc\u3002", "result": "\u63d0\u51fa\u4e86\u667a\u80fd\u4f53SE\u7684\u6269\u5c55\u613f\u666f\u3001\u6307\u5bfc\u539f\u5219\u548c\u8bcd\u6c47\u8868\u8bbe\u8ba1\u5efa\u8bae\uff0c\u4e3a\u793e\u533a\u534f\u4f5c\u548c\u672a\u6765\u53d1\u5c55\u5960\u5b9a\u57fa\u7840\u3002", "conclusion": "\u8fd9\u4e9b\u60f3\u6cd5\u65e8\u5728\u4fc3\u8fdb\u793e\u533a\u5408\u4f5c\uff0c\u5f15\u5bfcSE\u793e\u533a\u4e3a\u667a\u80fd\u4f53SE\u5efa\u7acb\u575a\u5b9e\u57fa\u7840\uff0c\u4f7f\u5176\u4e0d\u4ec5\u662f\u5fc5\u7136\u8d8b\u52bf\uff0c\u800c\u4e14\u662f\u957f\u671f\u53ef\u671f\u548c\u7406\u60f3\u7684\u53d1\u5c55\u65b9\u5411\u3002"}}
{"id": "2510.19747", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19747", "abs": "https://arxiv.org/abs/2510.19747", "authors": ["Priyaranjan Pattnayak", "Hussain Bohra"], "title": "Review of Tools for Zero-Code LLM Based Application Development", "comment": "Accepted in 6th World Conference on Artificial Intelligence: Advances\n  and Applications (WCAIAA 2025)", "summary": "Large Language Models (LLMs) are transforming software creation by enabling\nzero code development platforms. Our survey reviews recent platforms that let\nusers build applications without writing code, by leveraging LLMs as the brains\nof the development process. We adopt a broad survey methodology, categorizing\nplatforms based on key dimensions such as interface style, backend integration,\noutput type, and extensibility. We analyze both dedicated LLM based app\nbuilders (OpenAI's custom GPTs, Bolt.new, Dust.tt, Flowise, Cognosys) and\ngeneral no code platforms (e.g., Bubble, Glide) that integrate LLM\ncapabilities. We present a taxonomy categorizing these platforms by their\ninterface (conversational, visual, etc.), supported LLM backends, output type\n(chatbot, full application, workflow), and degree of extensibility. Core\nfeatures such as autonomous agents, memory management, workflow orchestration,\nand API integrations are in scope of the survey. We provide a detailed\ncomparison, highlighting each platform's strengths and limitations. Trade offs\n(customizability, scalability, vendor lock-in) are discussed in comparison with\ntraditional and low code development approaches. Finally, we outline future\ndirections, including multimodal interfaces, on device LLMs, and improved\norchestration for democratizing app creation with AI. Our findings indicate\nthat while zero code LLM platforms greatly reduce the barrier to creating AI\npowered applications, they still face challenges in flexibility and\nreliability. Overall, the landscape is rapidly evolving, offering exciting\nopportunities to empower non programmers to create sophisticated software.", "AI": {"tldr": "\u672c\u6587\u8c03\u67e5\u4e86\u57fa\u4e8e\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u96f6\u4ee3\u7801\u5f00\u53d1\u5e73\u53f0\uff0c\u5206\u6790\u4e86\u5404\u7c7b\u5e73\u53f0\u7684\u7279\u70b9\u3001\u5206\u7c7b\u548c\u6838\u5fc3\u529f\u80fd\uff0c\u6bd4\u8f83\u4e86\u5b83\u4eec\u7684\u4f18\u7f3a\u70b9\uff0c\u5e76\u8ba8\u8bba\u4e86\u672a\u6765\u53d1\u5c55\u65b9\u5411\u3002", "motivation": "\u968f\u7740LLMs\u7684\u53d1\u5c55\uff0c\u96f6\u4ee3\u7801\u5f00\u53d1\u5e73\u53f0\u6b63\u5728\u6539\u53d8\u8f6f\u4ef6\u521b\u5efa\u65b9\u5f0f\u3002\u672c\u6587\u65e8\u5728\u7cfb\u7edf\u6027\u5730\u8c03\u67e5\u548c\u5206\u6790\u8fd9\u4e9b\u5e73\u53f0\uff0c\u5e2e\u52a9\u7406\u89e3\u5f53\u524d\u6280\u672f\u73b0\u72b6\u548c\u672a\u6765\u8d8b\u52bf\u3002", "method": "\u91c7\u7528\u5e7f\u6cdb\u7684\u8c03\u67e5\u65b9\u6cd5\uff0c\u6839\u636e\u754c\u9762\u98ce\u683c\u3001\u540e\u7aef\u96c6\u6210\u3001\u8f93\u51fa\u7c7b\u578b\u548c\u53ef\u6269\u5c55\u6027\u7b49\u5173\u952e\u7ef4\u5ea6\u5bf9\u5e73\u53f0\u8fdb\u884c\u5206\u7c7b\u3002\u5206\u6790\u4e86\u4e13\u95e8\u7684LLM\u5e94\u7528\u6784\u5efa\u5668\u548c\u96c6\u6210LLM\u529f\u80fd\u7684\u901a\u7528\u65e0\u4ee3\u7801\u5e73\u53f0\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u5206\u7c7b\u6cd5\uff0c\u6309\u754c\u9762\u7c7b\u578b\u3001\u652f\u6301\u7684LLM\u540e\u7aef\u3001\u8f93\u51fa\u7c7b\u578b\u548c\u53ef\u6269\u5c55\u7a0b\u5ea6\u5bf9\u5e73\u53f0\u8fdb\u884c\u5f52\u7c7b\u3002\u8be6\u7ec6\u6bd4\u8f83\u4e86\u5404\u5e73\u53f0\u7684\u4f18\u7f3a\u70b9\uff0c\u8ba8\u8bba\u4e86\u4e0e\u4f20\u7edf\u548c\u4f4e\u4ee3\u7801\u5f00\u53d1\u65b9\u6cd5\u7684\u6743\u8861\u3002", "conclusion": "\u57fa\u4e8eLLM\u7684\u96f6\u4ee3\u7801\u5e73\u53f0\u5927\u5927\u964d\u4f4e\u4e86\u521b\u5efaAI\u5e94\u7528\u7684\u969c\u788d\uff0c\u4f46\u5728\u7075\u6d3b\u6027\u548c\u53ef\u9760\u6027\u65b9\u9762\u4ecd\u9762\u4e34\u6311\u6218\u3002\u8be5\u9886\u57df\u6b63\u5728\u5feb\u901f\u53d1\u5c55\uff0c\u4e3a\u975e\u7a0b\u5e8f\u5458\u521b\u5efa\u590d\u6742\u8f6f\u4ef6\u63d0\u4f9b\u4e86\u4ee4\u4eba\u5174\u594b\u7684\u673a\u4f1a\u3002"}}
{"id": "2510.19777", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.19777", "abs": "https://arxiv.org/abs/2510.19777", "authors": ["S M Sadrul Islam Asif", "James Chen", "Earl T. Barr", "Mark Marron"], "title": "BOSQTGEN: Breaking the Sound Barrier in Test Generation", "comment": null, "summary": "Modern software is increasingly built by composing APIs, elevating the API\ncontract to a critical role. Inadequate contracts, however, lead to mismatched\nexpectations and failures, creating a pressing need for robust conformance\ntesting. Current test generation techniques are hindered by key challenges:\npolyglot systems, source code inaccessibility, a cost-reliability trade-off,\nand, most critically, the difficulty of generating structured inputs.\n  We introduce BOSQTGEN, a novel black-box methodology and tool for API test\ngeneration. BOSQTGEN utilizes a novel approach for decomposing API\nspecifications into primitives, using LLMs to suggest coherent strata for them,\nand employing combinatorial testing to efficiently sample over these values.\nThis approach ensures coverage of critical interactions while avoiding the\nredundancy of random sampling.\n  The resulting BOSQTGEN system achieves an average of 82% code coverage on\nRESTful benchmarks, often a 20% or more increase over prior state-of-the-art\nsystems and nearing parity with hand-written test suites. Providing a fully\nAPI-driven approach to test generation, enables developers to automatically\ncreate high-quality test cases for validation or test-driven development.", "AI": {"tldr": "BOSQTGEN\u662f\u4e00\u79cd\u65b0\u9896\u7684\u9ed1\u76d2API\u6d4b\u8bd5\u751f\u6210\u65b9\u6cd5\uff0c\u901a\u8fc7\u5206\u89e3API\u89c4\u8303\u4e3a\u539f\u8bed\u3001\u4f7f\u7528LLM\u5efa\u8bae\u8fde\u8d2f\u5c42\u6b21\u7ed3\u6784\uff0c\u5e76\u5e94\u7528\u7ec4\u5408\u6d4b\u8bd5\u6765\u9ad8\u6548\u91c7\u6837\uff0c\u89e3\u51b3\u4e86\u591a\u8bed\u8a00\u7cfb\u7edf\u3001\u6e90\u4ee3\u7801\u4e0d\u53ef\u8bbf\u95ee\u7b49\u6311\u6218\u3002", "motivation": "\u73b0\u4ee3\u8f6f\u4ef6\u8d8a\u6765\u8d8a\u591a\u5730\u901a\u8fc7\u7ec4\u5408API\u6784\u5efa\uff0c\u4f46API\u5951\u7ea6\u4e0d\u8db3\u4f1a\u5bfc\u81f4\u671f\u671b\u4e0d\u5339\u914d\u548c\u6545\u969c\u3002\u73b0\u6709\u6d4b\u8bd5\u751f\u6210\u6280\u672f\u9762\u4e34\u591a\u8bed\u8a00\u7cfb\u7edf\u3001\u6e90\u4ee3\u7801\u4e0d\u53ef\u8bbf\u95ee\u3001\u6210\u672c\u53ef\u9760\u6027\u6743\u8861\u4ee5\u53ca\u751f\u6210\u7ed3\u6784\u5316\u8f93\u5165\u56f0\u96be\u7b49\u6311\u6218\u3002", "method": "\u5c06API\u89c4\u8303\u5206\u89e3\u4e3a\u539f\u8bed\uff0c\u4f7f\u7528LLM\u5efa\u8bae\u8fde\u8d2f\u5c42\u6b21\u7ed3\u6784\uff0c\u5e94\u7528\u7ec4\u5408\u6d4b\u8bd5\u6765\u9ad8\u6548\u91c7\u6837\u8fd9\u4e9b\u503c\uff0c\u8986\u76d6\u5173\u952e\u4ea4\u4e92\u540c\u65f6\u907f\u514d\u968f\u673a\u91c7\u6837\u7684\u5197\u4f59\u3002", "result": "\u5728RESTful\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5e73\u5747\u8fbe\u523082%\u7684\u4ee3\u7801\u8986\u76d6\u7387\uff0c\u901a\u5e38\u6bd4\u5148\u524d\u6700\u5148\u8fdb\u7cfb\u7edf\u63d0\u9ad820%\u6216\u66f4\u591a\uff0c\u63a5\u8fd1\u624b\u5de5\u7f16\u5199\u6d4b\u8bd5\u5957\u4ef6\u7684\u6c34\u5e73\u3002", "conclusion": "BOSQTGEN\u63d0\u4f9b\u5b8c\u5168API\u9a71\u52a8\u7684\u6d4b\u8bd5\u751f\u6210\u65b9\u6cd5\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u81ea\u52a8\u521b\u5efa\u9ad8\u8d28\u91cf\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u9a8c\u8bc1\u6216\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u3002"}}
