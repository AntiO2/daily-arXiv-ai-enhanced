{"id": "2510.07435", "categories": ["cs.SE", "cs.HC"], "pdf": "https://arxiv.org/pdf/2510.07435", "abs": "https://arxiv.org/abs/2510.07435", "authors": ["Zixuan Feng", "Sadia Afroz", "Anita Sarma"], "title": "Modeling Developer Burnout with GenAI Adoption", "comment": "10 pages, LLM", "summary": "Generative AI (GenAI) is rapidly reshaping software development workflows.\nWhile prior studies emphasize productivity gains, the adoption of GenAI also\nintroduces new pressures that may harm developers' well-being. In this paper,\nwe investigate the relationship between the adoption of GenAI and developers'\nburnout. We utilized the Job Demands--Resources (JD--R) model as the analytic\nlens in our empirical study. We employed a concurrent embedded mixed-methods\nresearch design, integrating quantitative and qualitative evidence. We first\nsurveyed 442 developers across diverse organizations, roles, and levels of\nexperience. We then employed Partial Least Squares--Structural Equation\nModeling (PLS-SEM) and regression to model the relationships among job demands,\njob resources, and burnout, complemented by a qualitative analysis of\nopen-ended responses to contextualize the quantitative findings. Our results\nshow that GenAI adoption heightens burnout by increasing job demands, while job\nresources and positive perceptions of GenAI mitigate these effects, reframing\nadoption as an opportunity.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u751f\u6210\u5f0fAI\u91c7\u7528\u4e0e\u5f00\u53d1\u8005\u5026\u6020\u7684\u5173\u7cfb\uff0c\u53d1\u73b0GenAI\u901a\u8fc7\u589e\u52a0\u5de5\u4f5c\u9700\u6c42\u52a0\u5267\u5026\u6020\uff0c\u4f46\u5de5\u4f5c\u8d44\u6e90\u548c\u79ef\u6781\u8ba4\u77e5\u53ef\u7f13\u89e3\u6b64\u6548\u5e94\u3002", "motivation": "\u867d\u7136\u5148\u524d\u7814\u7a76\u5f3a\u8c03GenAI\u63d0\u9ad8\u751f\u4ea7\u529b\uff0c\u4f46\u5176\u91c7\u7528\u53ef\u80fd\u5e26\u6765\u65b0\u538b\u529b\u5f71\u54cd\u5f00\u53d1\u8005\u798f\u7949\uff0c\u9700\u8981\u5b9e\u8bc1\u7814\u7a76\u9a8c\u8bc1\u3002", "method": "\u91c7\u7528\u5d4c\u5165\u5f0f\u6df7\u5408\u65b9\u6cd5\u7814\u7a76\u8bbe\u8ba1\uff0c\u8c03\u67e5442\u540d\u5f00\u53d1\u8005\uff0c\u4f7f\u7528PLS-SEM\u548c\u56de\u5f52\u5206\u6790\u5efa\u6a21\u5de5\u4f5c\u9700\u6c42\u3001\u8d44\u6e90\u4e0e\u5026\u6020\u5173\u7cfb\uff0c\u8f85\u4ee5\u5b9a\u6027\u5206\u6790\u3002", "result": "GenAI\u91c7\u7528\u901a\u8fc7\u589e\u52a0\u5de5\u4f5c\u9700\u6c42\u52a0\u5267\u5026\u6020\uff0c\u4f46\u5de5\u4f5c\u8d44\u6e90\u548c\u79ef\u6781\u8ba4\u77e5\u80fd\u51cf\u8f7b\u8fd9\u4e9b\u8d1f\u9762\u5f71\u54cd\u3002", "conclusion": "GenAI\u91c7\u7528\u65e2\u662f\u6311\u6218\u4e5f\u662f\u673a\u9047\uff0c\u9002\u5f53\u7684\u5de5\u4f5c\u8d44\u6e90\u548c\u79ef\u6781\u8ba4\u77e5\u53ef\u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u597d\u5e94\u5bf9\u6280\u672f\u53d8\u9769\u3002"}}
{"id": "2510.07529", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07529", "abs": "https://arxiv.org/abs/2510.07529", "authors": ["Carol Hanna", "Federica Sarro", "Mark Harman", "Justyna Petke"], "title": "HotBugs.jar: A Benchmark of Hot Fixes for Time-Critical Bugs", "comment": null, "summary": "Hot fixes are urgent, unplanned changes deployed to production systems to\naddress time-critical issues. Despite their importance, no existing evaluation\nbenchmark focuses specifically on hot fixes. We present HotBugs.jar, the first\ndataset dedicated to real-world hot fixes. From an initial mining of 10 active\nApache projects totaling over 190K commits and 150K issue reports, we\nidentified 746 software patches that met our hot-fix criteria. After manual\nevaluation, 679 were confirmed as genuine hot fixes, of which 110 are\nreproducible using a test suite. Building upon the Bugs.jar framework,\nHotBugs.jar integrates these 110 reproducible cases and makes available all 679\nmanually validated hot fixes, each enriched with comprehensive metadata to\nsupport future research. Each hot fix was systematically identified using Jira\nissue data, validated by independent reviewers, and packaged in a reproducible\nformat with buggy and fixed versions, test suites, and metadata. HotBugs.jar\nhas already been adopted as the official challenge dataset for the Search-Based\nSoftware Engineering (SBSE) Conference Challenge Track, demonstrating its\nimmediate impact. This benchmark enables the study and evaluation of tools for\nrapid debugging, automated repair, and production-grade resilience in modern\nsoftware systems to drive research in this essential area forward.", "AI": {"tldr": "HotBugs.jar\u662f\u9996\u4e2a\u4e13\u95e8\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u70ed\u4fee\u590d\u7684\u6570\u636e\u96c6\uff0c\u5305\u542b679\u4e2a\u7ecf\u8fc7\u624b\u52a8\u9a8c\u8bc1\u7684\u70ed\u4fee\u590d\u6848\u4f8b\uff0c\u5176\u4e2d110\u4e2a\u53ef\u590d\u73b0\uff0c\u4e3a\u5feb\u901f\u8c03\u8bd5\u3001\u81ea\u52a8\u4fee\u590d\u7b49\u7814\u7a76\u63d0\u4f9b\u57fa\u51c6\u3002", "motivation": "\u70ed\u4fee\u590d\u662f\u89e3\u51b3\u751f\u4ea7\u7cfb\u7edf\u4e2d\u7d27\u6025\u95ee\u9898\u7684\u5173\u952e\u53d8\u66f4\uff0c\u4f46\u73b0\u6709\u8bc4\u4f30\u57fa\u51c6\u7f3a\u4e4f\u4e13\u95e8\u9488\u5bf9\u70ed\u4fee\u590d\u7684\u6570\u636e\u96c6\u3002", "method": "\u4ece10\u4e2aApache\u9879\u76ee\u768419\u4e07\u6b21\u63d0\u4ea4\u548c15\u4e07\u4efd\u95ee\u9898\u62a5\u544a\u4e2d\u8bc6\u522b746\u4e2a\u5019\u9009\u70ed\u4fee\u590d\uff0c\u7ecf\u8fc7\u624b\u52a8\u8bc4\u4f30\u786e\u8ba4679\u4e2a\u771f\u5b9e\u70ed\u4fee\u590d\uff0c\u5176\u4e2d110\u4e2a\u53ef\u590d\u73b0\u3002", "result": "\u6784\u5efa\u4e86HotBugs.jar\u6570\u636e\u96c6\uff0c\u5305\u542b679\u4e2a\u624b\u52a8\u9a8c\u8bc1\u7684\u70ed\u4fee\u590d\u548c110\u4e2a\u53ef\u590d\u73b0\u6848\u4f8b\uff0c\u6bcf\u4e2a\u6848\u4f8b\u90fd\u5305\u542b\u9519\u8bef\u7248\u672c\u3001\u4fee\u590d\u7248\u672c\u3001\u6d4b\u8bd5\u5957\u4ef6\u548c\u5143\u6570\u636e\u3002", "conclusion": "HotBugs.jar\u5df2\u6210\u4e3aSBSE\u4f1a\u8bae\u6311\u6218\u8d5b\u7684\u5b98\u65b9\u6570\u636e\u96c6\uff0c\u4e3a\u5feb\u901f\u8c03\u8bd5\u3001\u81ea\u52a8\u4fee\u590d\u7b49\u7814\u7a76\u63d0\u4f9b\u4e86\u91cd\u8981\u57fa\u51c6\u3002"}}
{"id": "2510.07604", "categories": ["cs.SE", "D.2.4"], "pdf": "https://arxiv.org/pdf/2510.07604", "abs": "https://arxiv.org/abs/2510.07604", "authors": ["Yubo Bai", "Tapti Palit"], "title": "RustAssure: Differential Symbolic Testing for LLM-Transpiled C-to-Rust Code", "comment": "13 pages to appear in Proceedings of ASE 2025", "summary": "Rust is a memory-safe programming language that significantly improves\nsoftware security. Existing codebases written in unsafe memory languages, such\nas C, must first be transpiled to Rust to take advantage of Rust's improved\nsafety guarantees. RustAssure presents a system that uses Large Language Models\n(LLMs) to automatically transpile existing C codebases to Rust. RustAssure uses\nprompt engineering techniques to maximize the chances of the LLM generating\nidiomatic and safe Rust code. Moreover, because LLMs often generate code with\nsubtle bugs that can be missed under traditional unit or fuzz testing,\nRustAssure performs differential symbolic testing to establish the semantic\nsimilarity between the original C and LLM-transpiled Rust code. We evaluated\nRustAssure with five real-world applications and libraries, and showed that our\nsystem is able to generate compilable Rust functions for 89.8% of all C\nfunctions, of which 69.9% produced equivalent symbolic return values for both\nthe C and Rust functions.", "AI": {"tldr": "RustAssure\u662f\u4e00\u4e2a\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u81ea\u52a8\u5c06C\u4ee3\u7801\u8f6c\u6362\u4e3aRust\u7684\u7cfb\u7edf\uff0c\u901a\u8fc7\u63d0\u793a\u5de5\u7a0b\u751f\u6210\u60ef\u7528\u5b89\u5168\u7684Rust\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528\u5dee\u5206\u7b26\u53f7\u6d4b\u8bd5\u9a8c\u8bc1\u8bed\u4e49\u7b49\u4ef7\u6027\u3002", "motivation": "\u4e3a\u4e86\u5229\u7528Rust\u7684\u5185\u5b58\u5b89\u5168\u7279\u6027\u63d0\u5347\u8f6f\u4ef6\u5b89\u5168\u6027\uff0c\u9700\u8981\u5c06\u73b0\u6709\u7528\u4e0d\u5b89\u5168\u5185\u5b58\u8bed\u8a00\uff08\u5982C\uff09\u7f16\u5199\u7684\u4ee3\u7801\u5e93\u8f6c\u6362\u4e3aRust\u3002", "method": "\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u81ea\u52a8\u4ee3\u7801\u8f6c\u6362\uff0c\u901a\u8fc7\u63d0\u793a\u5de5\u7a0b\u6280\u672f\u4f18\u5316\u751f\u6210\u7684Rust\u4ee3\u7801\u8d28\u91cf\uff0c\u5e76\u91c7\u7528\u5dee\u5206\u7b26\u53f7\u6d4b\u8bd5\u6765\u9a8c\u8bc1\u539f\u59cbC\u4ee3\u7801\u4e0e\u8f6c\u6362\u540eRust\u4ee3\u7801\u7684\u8bed\u4e49\u76f8\u4f3c\u6027\u3002", "result": "\u5728\u4e94\u4e2a\u771f\u5b9e\u5e94\u7528\u548c\u5e93\u7684\u8bc4\u4f30\u4e2d\uff0c\u7cfb\u7edf\u80fd\u4e3a89.8%\u7684C\u51fd\u6570\u751f\u6210\u53ef\u7f16\u8bd1\u7684Rust\u51fd\u6570\uff0c\u5176\u4e2d69.9%\u7684\u51fd\u6570\u5728\u7b26\u53f7\u8fd4\u56de\u503c\u4e0a\u8868\u73b0\u51fa\u7b49\u4ef7\u6027\u3002", "conclusion": "RustAssure\u80fd\u591f\u6709\u6548\u81ea\u52a8\u5316C\u5230Rust\u7684\u4ee3\u7801\u8f6c\u6362\u8fc7\u7a0b\uff0c\u751f\u6210\u5927\u91cf\u53ef\u7f16\u8bd1\u4e14\u8bed\u4e49\u7b49\u4ef7\u7684Rust\u4ee3\u7801\uff0c\u4e3a\u5229\u7528Rust\u5b89\u5168\u7279\u6027\u63d0\u4f9b\u4e86\u53ef\u884c\u8def\u5f84\u3002"}}
{"id": "2510.07740", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.07740", "abs": "https://arxiv.org/abs/2510.07740", "authors": ["Dezhi Ran", "Yuan Cao", "Mengzhou Wu", "Simin Chen", "Yuzhe Guo", "Jun Ren", "Zihe Song", "Hao Yu", "Jialei Wei", "Linyi Li", "Wei Yang", "Baishakhi Ray", "Tao Xie"], "title": "AppForge: From Assistant to Independent Developer - Are GPTs Ready for Software Development?", "comment": "Under Review. Benchmark and leadboards at\n  https://appforge-bench.github.io/", "summary": "Large language models (LLMs) have demonstrated remarkable capability in\nfunction-level code generation tasks. Unlike isolated functions, real-world\napplications demand reasoning over the entire software system: developers must\norchestrate how different components interact, maintain consistency across\nstates over time, and ensure the application behaves correctly within the\nlifecycle and framework constraints. Yet, no existing benchmark adequately\nevaluates whether LLMs can bridge this gap and construct entire software\nsystems from scratch. To address this gap, we propose APPFORGE, a benchmark\nconsisting of 101 software development problems drawn from real-world Android\napps. Given a natural language specification detailing the app functionality, a\nlanguage model is tasked with implementing the functionality into an Android\napp from scratch. Developing an Android app from scratch requires understanding\nand coordinating app states, lifecycle management, and asynchronous operations,\ncalling for LLMs to generate context-aware, robust, and maintainable code. To\nconstruct APPFORGE, we design a multi-agent system to automatically summarize\nthe main functionalities from app documents and navigate the app to synthesize\ntest cases validating the functional correctness of app implementation.\nFollowing rigorous manual verification by Android development experts, APPFORGE\nincorporates the test cases within an automated evaluation framework that\nenables reproducible assessment without human intervention, making it easily\nadoptable for future research. Our evaluation on 12 flagship LLMs show that all\nevaluated models achieve low effectiveness, with the best-performing model\n(GPT-5) developing only 18.8% functionally correct applications, highlighting\nfundamental limitations in current models' ability to handle complex,\nmulti-component software engineering challenges.", "AI": {"tldr": "\u63d0\u51fa\u4e86APPFORGE\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5305\u542b101\u4e2a\u771f\u5b9eAndroid\u5e94\u7528\u5f00\u53d1\u95ee\u9898\uff0c\u8bc4\u4f30LLM\u4ece\u96f6\u6784\u5efa\u5b8c\u6574\u8f6f\u4ef6\u7cfb\u7edf\u7684\u80fd\u529b\u3002\u6d4b\u8bd5\u7ed3\u679c\u663e\u793a\u5f53\u524d\u6a21\u578b\u8868\u73b0\u4e0d\u4f73\uff0c\u6700\u4f73\u6a21\u578bGPT-5\u4ec5\u80fd\u5f00\u53d118.8%\u529f\u80fd\u6b63\u786e\u7684\u5e94\u7528\u3002", "motivation": "\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\u4e3b\u8981\u8bc4\u4f30\u51fd\u6570\u7ea7\u4ee3\u7801\u751f\u6210\uff0c\u4f46\u65e0\u6cd5\u8bc4\u4f30LLM\u6784\u5efa\u5b8c\u6574\u8f6f\u4ef6\u7cfb\u7edf\u7684\u80fd\u529b\u3002\u771f\u5b9e\u5e94\u7528\u5f00\u53d1\u9700\u8981\u534f\u8c03\u7ec4\u4ef6\u4ea4\u4e92\u3001\u7ef4\u62a4\u72b6\u6001\u4e00\u81f4\u6027\u3001\u5904\u7406\u751f\u547d\u5468\u671f\u548c\u6846\u67b6\u7ea6\u675f\u3002", "method": "\u8bbe\u8ba1\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u81ea\u52a8\u603b\u7ed3\u5e94\u7528\u6587\u6863\u529f\u80fd\uff0c\u901a\u8fc7\u5bfc\u822a\u5e94\u7528\u5408\u6210\u6d4b\u8bd5\u7528\u4f8b\u9a8c\u8bc1\u529f\u80fd\u6b63\u786e\u6027\u3002\u7ecf\u8fc7Android\u4e13\u5bb6\u624b\u52a8\u9a8c\u8bc1\u540e\uff0c\u6784\u5efa\u5305\u542b\u81ea\u52a8\u5316\u8bc4\u4f30\u6846\u67b6\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002", "result": "\u8bc4\u4f3012\u4e2a\u4e3b\u6d41LLM\uff0c\u6240\u6709\u6a21\u578b\u6548\u679c\u90fd\u5f88\u4f4e\uff0c\u6700\u4f73\u6a21\u578bGPT-5\u4ec5\u80fd\u5f00\u53d118.8%\u529f\u80fd\u6b63\u786e\u7684\u5e94\u7528\u3002", "conclusion": "\u5f53\u524dLLM\u5728\u5904\u7406\u590d\u6742\u3001\u591a\u7ec4\u4ef6\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6311\u6218\u65b9\u9762\u5b58\u5728\u6839\u672c\u6027\u5c40\u9650\uff0c\u65e0\u6cd5\u6709\u6548\u6784\u5efa\u5b8c\u6574\u8f6f\u4ef6\u7cfb\u7edf\u3002"}}
{"id": "2510.07833", "categories": ["cs.DB"], "pdf": "https://arxiv.org/pdf/2510.07833", "abs": "https://arxiv.org/abs/2510.07833", "authors": ["Santatra Hagamalala Bernardin", "Riad Mokadem", "Franck Morvan", "Hasinarivo Ramanana", "Hasimandimby Rakotoarivelo"], "title": "TCDRM: A Tenant Budget-Aware Data Replication Framework for Multi-Cloud Computing", "comment": null, "summary": "Multi-cloud computing systems face significant challenges in ensuring\nacceptable performance while adhering to tenant budget requirements. This paper\nproposes a tenant budget-aware (tenant-centric) data replication framework for\nMulti-Cloud Computing (TCDRM). The proposed strategy dynamically creates data\nreplicas based on predefined thresholds for response time, economic budget of\nthe tenant and data popularity. TCDRM employs a heuristic replica placement\nalgorithm that leverages the diverse pricing structures of multiple cloud\nproviders. The TCDRM strategy aims to maintain the required performance without\nexceeding the tenant's budget by taking advantage of the capabilities offered\nby multicloud environments. The middleware considered acts as an intermediary\nbetween tenants and multiple cloud providers, facilitating intelligent replica\nplacement decisions. To achieve this, the proposed TCDRM strategy defines\nstrict thresholds for tenant budget and response time. A performance evaluation\nis conducted to validate the effectiveness of the strategy. The results show\nthat our approach effectively meets tenant performance objectives while\nrespecting their economic constraints. Bandwidth consumption is reduced by up\nto 78% compared to non-replicated approaches, and average response time for\ncomplex queries is decreased by 51%, all while adhering to tenant budget\nlimitations.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u9762\u5411\u591a\u4e91\u8ba1\u7b97\u7684\u79df\u6237\u9884\u7b97\u611f\u77e5\u6570\u636e\u590d\u5236\u6846\u67b6TCDRM\uff0c\u8be5\u6846\u67b6\u6839\u636e\u54cd\u5e94\u65f6\u95f4\u9608\u503c\u3001\u79df\u6237\u7ecf\u6d4e\u9884\u7b97\u548c\u6570\u636e\u6d41\u884c\u5ea6\u52a8\u6001\u521b\u5efa\u6570\u636e\u526f\u672c\uff0c\u5728\u6ee1\u8db3\u6027\u80fd\u8981\u6c42\u7684\u540c\u65f6\u4e0d\u8d85\u51fa\u9884\u7b97\u9650\u5236\u3002", "motivation": "\u591a\u4e91\u8ba1\u7b97\u7cfb\u7edf\u5728\u786e\u4fdd\u53ef\u63a5\u53d7\u6027\u80fd\u7684\u540c\u65f6\u9075\u5b88\u79df\u6237\u9884\u7b97\u8981\u6c42\u9762\u4e34\u91cd\u5927\u6311\u6218\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u5e73\u8861\u6027\u80fd\u548c\u6210\u672c\u7684\u667a\u80fd\u6570\u636e\u590d\u5236\u7b56\u7565\u3002", "method": "\u91c7\u7528\u542f\u53d1\u5f0f\u526f\u672c\u653e\u7f6e\u7b97\u6cd5\uff0c\u5229\u7528\u591a\u4e91\u63d0\u4f9b\u5546\u7684\u4e0d\u540c\u5b9a\u4ef7\u7ed3\u6784\uff0c\u901a\u8fc7\u4e2d\u95f4\u4ef6\u5728\u79df\u6237\u548c\u4e91\u63d0\u4f9b\u5546\u4e4b\u95f4\u8fdb\u884c\u667a\u80fd\u526f\u672c\u653e\u7f6e\u51b3\u7b56\uff0c\u5e76\u5b9a\u4e49\u4e25\u683c\u7684\u79df\u6237\u9884\u7b97\u548c\u54cd\u5e94\u65f6\u95f4\u9608\u503c\u3002", "result": "\u4e0e\u65e0\u590d\u5236\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5e26\u5bbd\u6d88\u8017\u51cf\u5c11\u9ad8\u8fbe78%\uff0c\u590d\u6742\u67e5\u8be2\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u964d\u4f4e51%\uff0c\u540c\u65f6\u9075\u5b88\u79df\u6237\u9884\u7b97\u9650\u5236\u3002", "conclusion": "TCDRM\u7b56\u7565\u6709\u6548\u6ee1\u8db3\u4e86\u79df\u6237\u7684\u6027\u80fd\u76ee\u6807\uff0c\u540c\u65f6\u5c0a\u91cd\u5176\u7ecf\u6d4e\u7ea6\u675f\uff0c\u8bc1\u660e\u4e86\u5728\u591a\u4e91\u73af\u5883\u4e2d\u5e73\u8861\u6027\u80fd\u548c\u6210\u672c\u7684\u53ef\u884c\u6027\u3002"}}
{"id": "2510.07811", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.07811", "abs": "https://arxiv.org/abs/2510.07811", "authors": ["Aryan Poduri"], "title": "Adaptive Execution Scheduler for DataDios SmartDiff", "comment": "4 pages, 1 figure", "summary": "We present an adaptive scheduler for a single differencing engine (SmartDiff)\nwith two execution modes: (i) in-memory threads and (ii) Dask based\nparallelism. The scheduler continuously tunes batch size and worker/thread\ncount within fixed CPU and memory budgets to minimize p95 latency. A\nlightweight preflight profiler estimates bytes/row and I/O rate; an online\ncost/memory model prunes unsafe actions; and a guarded hill-climb policy favors\nlower latency with backpressure and straggler mitigation. Backend selection is\ngated by a conservative working-set estimate so that in-memory execution is\nchosen when safe, otherwise Dask is used. Across synthetic and public tabular\nbenchmarks, the scheduler reduces p95 latency by 23 to 28 percent versus a\ntuned warm-up heuristic (and by 35 to 40 percent versus fixed grid baselines),\nwhile lowering peak memory by 16 to 22 percent (25 to 32 percent vs. fixed)\nwith zero OOMs and comparable throughput.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u81ea\u9002\u5e94\u8c03\u5ea6\u5668SmartDiff\uff0c\u901a\u8fc7\u52a8\u6001\u8c03\u6574\u6279\u5904\u7406\u5927\u5c0f\u548c\u7ebf\u7a0b/\u5de5\u4f5c\u5668\u6570\u91cf\uff0c\u5728\u56fa\u5b9aCPU\u548c\u5185\u5b58\u9884\u7b97\u4e0b\u6700\u5c0f\u5316p95\u5ef6\u8fdf\u3002", "motivation": "\u9700\u8981\u4f18\u5316\u5355\u5dee\u5206\u5f15\u64ce\u7684\u6027\u80fd\uff0c\u5728\u8d44\u6e90\u53d7\u9650\u73af\u5883\u4e0b\u964d\u4f4e\u5ef6\u8fdf\u5e76\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u3002", "method": "\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9884\u5206\u6790\u5668\u4f30\u8ba1\u5b57\u8282/\u884c\u548cI/O\u901f\u7387\uff1b\u5728\u7ebf\u6210\u672c/\u5185\u5b58\u6a21\u578b\u4fee\u526a\u4e0d\u5b89\u5168\u64cd\u4f5c\uff1b\u91c7\u7528\u5e26\u4fdd\u62a4\u7684\u722c\u5c71\u7b56\u7565\u4f18\u5316\u5ef6\u8fdf\uff0c\u5305\u542b\u80cc\u538b\u548c\u6162\u4efb\u52a1\u7f13\u89e3\u673a\u5236\uff1b\u6839\u636e\u5de5\u4f5c\u96c6\u4f30\u8ba1\u9009\u62e9\u6267\u884c\u540e\u7aef\u3002", "result": "\u5728\u5408\u6210\u548c\u516c\u5171\u8868\u683c\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u76f8\u6bd4\u8c03\u4f18\u7684\u9884\u70ed\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0cp95\u5ef6\u8fdf\u964d\u4f4e23-28%\uff1b\u76f8\u6bd4\u56fa\u5b9a\u7f51\u683c\u57fa\u7ebf\u964d\u4f4e35-40%\uff1b\u5cf0\u503c\u5185\u5b58\u964d\u4f4e16-22%\uff08\u76f8\u6bd4\u56fa\u5b9a\u57fa\u7ebf\u964d\u4f4e25-32%\uff09\uff0c\u96f6\u5185\u5b58\u6ea2\u51fa\u4e14\u541e\u5410\u91cf\u76f8\u5f53\u3002", "conclusion": "\u8be5\u81ea\u9002\u5e94\u8c03\u5ea6\u5668\u80fd\u6709\u6548\u4f18\u5316\u5dee\u5206\u5f15\u64ce\u6027\u80fd\uff0c\u5728\u8d44\u6e90\u53d7\u9650\u73af\u5883\u4e0b\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u548c\u5185\u5b58\u4f7f\u7528\uff0c\u540c\u65f6\u4fdd\u6301\u7cfb\u7edf\u7a33\u5b9a\u6027\u3002"}}
{"id": "2510.07815", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07815", "abs": "https://arxiv.org/abs/2510.07815", "authors": ["Zeyu Sun", "Jingjing Liang", "Weiyi Wang", "Chenyao Suo", "Junjie Chen", "Fanjiang Xu"], "title": "Interleaved Learning and Exploration: A Self-Adaptive Fuzz Testing Framework for MLIR", "comment": null, "summary": "MLIR (Multi-Level Intermediate Representation) has rapidly become a\nfoundational technology for modern compiler frameworks, enabling extensibility\nacross diverse domains. However, ensuring the correctness and robustness of\nMLIR itself remains challenging. Existing fuzzing approaches-based on manually\ncrafted templates or rule-based mutations-struggle to generate sufficiently\ndiverse and semantically valid test cases, making it difficult to expose subtle\nor deep-seated bugs within MLIR's complex and evolving code space. In this\npaper, we present FLEX, a novel self-adaptive fuzzing framework for MLIR. FLEX\nleverages neural networks for program generation, a perturbed sampling strategy\nto encourage diversity, and a feedback-driven augmentation loop that\niteratively improves its model using both crashing and non-crashing test cases.\nStarting from a limited seed corpus, FLEX progressively learns valid syntax and\nsemantics and autonomously produces high-quality test inputs. We evaluate FLEX\non the upstream MLIR compiler against four state-of-the-art fuzzers. In a\n30-day campaign, FLEX discovers 80 previously unknown bugs-including multiple\nnew root causes and parser bugs-while in 24-hour fixed-revision comparisons, it\ndetects 53 bugs (over 3.5x as many as the best baseline) and achieves 28.2%\ncode coverage, outperforming the next-best tool by 42%. Ablation studies\nfurther confirm the critical role of both perturbed generation and diversity\naugmentation in FLEX's effectiveness.", "AI": {"tldr": "FLEX\u662f\u4e00\u4e2a\u7528\u4e8eMLIR\u7684\u81ea\u9002\u5e94\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u7a0b\u5e8f\uff0c\u901a\u8fc7\u6270\u52a8\u91c7\u6837\u7b56\u7565\u589e\u5f3a\u591a\u6837\u6027\uff0c\u5e76\u91c7\u7528\u53cd\u9988\u9a71\u52a8\u7684\u589e\u5f3a\u5faa\u73af\u6765\u6539\u8fdb\u6a21\u578b\u3002", "motivation": "\u786e\u4fddMLIR\u7684\u6b63\u786e\u6027\u548c\u9c81\u68d2\u6027\u5177\u6709\u6311\u6218\u6027\uff0c\u73b0\u6709\u7684\u57fa\u4e8e\u624b\u52a8\u6a21\u677f\u6216\u57fa\u4e8e\u89c4\u5219\u7a81\u53d8\u7684\u6a21\u7cca\u6d4b\u8bd5\u65b9\u6cd5\u96be\u4ee5\u751f\u6210\u8db3\u591f\u591a\u6837\u4e14\u8bed\u4e49\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u96be\u4ee5\u66b4\u9732MLIR\u590d\u6742\u4e14\u4e0d\u65ad\u6f14\u8fdb\u7684\u4ee3\u7801\u7a7a\u95f4\u4e2d\u7684\u7ec6\u5fae\u6216\u6df1\u5c42\u9519\u8bef\u3002", "method": "FLEX\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7a0b\u5e8f\u751f\u6210\uff0c\u91c7\u7528\u6270\u52a8\u91c7\u6837\u7b56\u7565\u9f13\u52b1\u591a\u6837\u6027\uff0c\u5e76\u901a\u8fc7\u53cd\u9988\u9a71\u52a8\u7684\u589e\u5f3a\u5faa\u73af\u8fed\u4ee3\u6539\u8fdb\u6a21\u578b\uff0c\u4f7f\u7528\u5d29\u6e83\u548c\u975e\u5d29\u6e83\u6d4b\u8bd5\u6848\u4f8b\u3002", "result": "\u572830\u5929\u7684\u6d4b\u8bd5\u4e2d\uff0cFLEX\u53d1\u73b0\u4e8680\u4e2a\u5148\u524d\u672a\u77e5\u7684\u9519\u8bef\uff0c\u5305\u62ec\u591a\u4e2a\u65b0\u7684\u6839\u672c\u539f\u56e0\u548c\u89e3\u6790\u5668\u9519\u8bef\uff1b\u572824\u5c0f\u65f6\u56fa\u5b9a\u7248\u672c\u6bd4\u8f83\u4e2d\uff0c\u68c0\u6d4b\u523053\u4e2a\u9519\u8bef\uff08\u6bd4\u6700\u4f73\u57fa\u7ebf\u591a3.5\u500d\u4ee5\u4e0a\uff09\uff0c\u5e76\u5b9e\u73b0\u4e8628.2%\u7684\u4ee3\u7801\u8986\u76d6\u7387\uff0c\u6bd4\u6b21\u4f18\u5de5\u5177\u9ad8\u51fa42%\u3002", "conclusion": "\u6d88\u878d\u7814\u7a76\u8fdb\u4e00\u6b65\u8bc1\u5b9e\u4e86\u6270\u52a8\u751f\u6210\u548c\u591a\u6837\u6027\u589e\u5f3a\u5728FLEX\u6709\u6548\u6027\u4e2d\u7684\u5173\u952e\u4f5c\u7528\u3002"}}
{"id": "2510.07963", "categories": ["cs.DB"], "pdf": "https://arxiv.org/pdf/2510.07963", "abs": "https://arxiv.org/abs/2510.07963", "authors": ["Nhu Ngoc Hoang", "Ngoc Hoa Pham", "Viet Phuong Hoang", "Esteban Zim\u00e1nyi"], "title": "MobilityDuck: Mobility Data Management with DuckDB", "comment": null, "summary": "The analytics of spatiotemporal data is increasingly important for mobility\nanalytics. Despite extensive research on moving object databases (MODs), few\nsystems are ready on production or lightweight enough for analytics. MobilityDB\nis a notable system that extends PostgreSQL with spatiotemporal data, but it\ninherits complexity of the architecture as well. In this paper, we present\nMobilityDuck, a DuckDB extension that integrates the MEOS library to provide\nsupport spatiotemporal and other temporal data types in DuckDB. MobilityDuck\nleverages DuckDB's lightweight, columnar, in-memory executable properties to\ndeliver efficient analytics. To the best of our knowledge, no existing\nin-memory or embedded analytical system offers native spatiotemporal types and\ncontinuous trajectory operators as MobilityDuck does. We evaluate MobilityDuck\nusing the BerlinMOD-Hanoi benchmark dataset and compare its performance to\nMobilityDB. Our results show that MobilityDuck preserves the expressiveness of\nspatiotemporal queries while benefiting from DuckDB's in-memory, columnar\narchitecture.", "AI": {"tldr": "MobilityDuck\u662f\u4e00\u4e2a\u57fa\u4e8eDuckDB\u7684\u8f7b\u91cf\u7ea7\u65f6\u7a7a\u6570\u636e\u5206\u6790\u6269\u5c55\uff0c\u901a\u8fc7\u96c6\u6210MEOS\u5e93\u63d0\u4f9b\u539f\u751f\u65f6\u7a7a\u6570\u636e\u7c7b\u578b\u548c\u8fde\u7eed\u8f68\u8ff9\u64cd\u4f5c\u7b26\uff0c\u76f8\u6bd4MobilityDB\u5177\u6709\u66f4\u9ad8\u7684\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u7684\u79fb\u52a8\u5bf9\u8c61\u6570\u636e\u5e93\u7cfb\u7edf\u8981\u4e48\u8fc7\u4e8e\u590d\u6742\uff0c\u8981\u4e48\u4e0d\u591f\u8f7b\u91cf\u7ea7\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u65f6\u7a7a\u6570\u636e\u5206\u6790\u9700\u6c42\u3002", "method": "\u901a\u8fc7\u6269\u5c55DuckDB\u5e76\u96c6\u6210MEOS\u5e93\uff0c\u5728DuckDB\u7684\u8f7b\u91cf\u7ea7\u3001\u5217\u5f0f\u3001\u5185\u5b58\u6267\u884c\u67b6\u6784\u57fa\u7840\u4e0a\u63d0\u4f9b\u65f6\u7a7a\u6570\u636e\u652f\u6301\u3002", "result": "\u5728BerlinMOD-Hanoi\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\u7684\u8bc4\u4f30\u8868\u660e\uff0cMobilityDuck\u5728\u4fdd\u6301\u65f6\u7a7a\u67e5\u8be2\u8868\u8fbe\u80fd\u529b\u7684\u540c\u65f6\uff0c\u53d7\u76ca\u4e8eDuckDB\u7684\u5185\u5b58\u5217\u5f0f\u67b6\u6784\uff0c\u6027\u80fd\u4f18\u4e8eMobilityDB\u3002", "conclusion": "MobilityDuck\u6210\u529f\u5730\u5c06\u65f6\u7a7a\u6570\u636e\u5206\u6790\u80fd\u529b\u96c6\u6210\u5230\u8f7b\u91cf\u7ea7\u7684\u5d4c\u5165\u5f0f\u5206\u6790\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u79fb\u52a8\u6027\u5206\u6790\u63d0\u4f9b\u4e86\u9ad8\u6548\u5b9e\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.08164", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08164", "abs": "https://arxiv.org/abs/2510.08164", "authors": ["Marco Picone", "Samuele Burattini", "Marco Melloni", "Prasad Talasila", "Davide Ziglioli", "Matteo Martinelli", "Nicola Bicocchi", "Alessandro Ricci", "Peter Gorm Larsen"], "title": "A Multi-Simulation Bridge for IoT Digital Twins", "comment": null, "summary": "The increasing capabilities of Digital Twins (DTs) in the context of the\nInternet of Things (IoT) and Industrial IoT (IIoT) call for seamless\nintegration with simulation platforms to support system design, validation, and\nreal-time operation. This paper introduces the concept, design, and\nexperimental evaluation of the DT Simulation Bridge - a software framework that\nenables diverse interaction patterns between active DTs and simulation\nenvironments. The framework supports both the DT development lifecycle and the\nincorporation of simulations during active operation. Through bidirectional\ndata exchange, simulations can update DT models dynamically, while DTs provide\nreal-time feedback to adapt simulation parameters. We describe the\narchitectural design and core software components that ensure flexible\ninteroperability and scalable deployment. Experimental results show that the DT\nSimulation Bridge enhances design agility, facilitates virtual commissioning,\nand supports live behavioral analysis under realistic conditions, demonstrating\nits effectiveness across a range of industrial scenarios.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86DT Simulation Bridge\u6846\u67b6\uff0c\u652f\u6301\u6570\u5b57\u5b6a\u751f\u4e0e\u4eff\u771f\u5e73\u53f0\u4e4b\u95f4\u7684\u53cc\u5411\u4ea4\u4e92\uff0c\u589e\u5f3a\u5de5\u4e1a\u7269\u8054\u7f51\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u65f6\u64cd\u4f5c\u80fd\u529b\u3002", "motivation": "\u968f\u7740\u6570\u5b57\u5b6a\u751f\u5728\u7269\u8054\u7f51\u548c\u5de5\u4e1a\u7269\u8054\u7f51\u4e2d\u80fd\u529b\u7684\u589e\u5f3a\uff0c\u9700\u8981\u4e0e\u4eff\u771f\u5e73\u53f0\u65e0\u7f1d\u96c6\u6210\u4ee5\u652f\u6301\u7cfb\u7edf\u8bbe\u8ba1\u3001\u9a8c\u8bc1\u548c\u5b9e\u65f6\u64cd\u4f5c\u3002", "method": "\u8bbe\u8ba1\u4e86DT Simulation Bridge\u8f6f\u4ef6\u6846\u67b6\uff0c\u901a\u8fc7\u53cc\u5411\u6570\u636e\u4ea4\u6362\u5b9e\u73b0\u6570\u5b57\u5b6a\u751f\u4e0e\u4eff\u771f\u73af\u5883\u4e4b\u95f4\u7684\u52a8\u6001\u4ea4\u4e92\uff0c\u652f\u6301\u7075\u6d3b\u7684\u4e92\u64cd\u4f5c\u6027\u548c\u53ef\u6269\u5c55\u90e8\u7f72\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u6846\u67b6\u63d0\u9ad8\u4e86\u8bbe\u8ba1\u654f\u6377\u6027\uff0c\u4fc3\u8fdb\u4e86\u865a\u62df\u8c03\u8bd5\uff0c\u5e76\u5728\u771f\u5b9e\u6761\u4ef6\u4e0b\u652f\u6301\u5b9e\u65f6\u884c\u4e3a\u5206\u6790\uff0c\u5728\u591a\u79cd\u5de5\u4e1a\u573a\u666f\u4e2d\u8868\u73b0\u51fa\u6709\u6548\u6027\u3002", "conclusion": "DT Simulation Bridge\u6846\u67b6\u6210\u529f\u5b9e\u73b0\u4e86\u6570\u5b57\u5b6a\u751f\u4e0e\u4eff\u771f\u5e73\u53f0\u7684\u6709\u6548\u96c6\u6210\uff0c\u4e3a\u5de5\u4e1a\u7269\u8054\u7f51\u7cfb\u7edf\u7684\u5168\u751f\u547d\u5468\u671f\u7ba1\u7406\u63d0\u4f9b\u4e86\u6709\u529b\u652f\u6301\u3002"}}
{"id": "2510.07834", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07834", "abs": "https://arxiv.org/abs/2510.07834", "authors": ["Lingjun Liu", "Feiran Qin", "Owolabi Legunsen", "Marcelo d'Amorim"], "title": "Bug Histories as Sources of Compiler Fuzzing Mutators", "comment": null, "summary": "Bugs in compilers, which are critical infrastructure today, can have outsized\nnegative impacts. Mutational fuzzers aid compiler bug detection by\nsystematically mutating compiler inputs, i.e., programs. Their effectiveness\ndepends on the quality of the mutators used. Yet, no prior work used compiler\nbug histories as a source of mutators. We propose IssueMut, the first approach\nfor extracting compiler fuzzing mutators from bug histories. Our insight is\nthat bug reports contain hints about program elements that induced compiler\nbugs; they can guide fuzzers towards similar bugs. IssueMut uses an automated\nmethod to mine mutators from bug reports and retrofit such mutators into\nexisting mutational compiler fuzzers. Using IssueMut, we mine 587 mutators from\n1760 GCC and LLVM bug reports. Then, we run IssueMut on these compilers, with\nall their test inputs as seed corpora. We find that \"bug history\" mutators are\neffective: they find new bugs that a state-of-the-art mutational compiler\nfuzzer misses-28 in GCC and 37 in LLVM. Of these, 60 were confirmed or fixed,\nvalidating our idea that bug histories have rich information that compiler\nfuzzers should leverage.", "AI": {"tldr": "IssueMut\uff1a\u9996\u4e2a\u4ece\u7f16\u8bd1\u5668bug\u5386\u53f2\u4e2d\u63d0\u53d6\u53d8\u5f02\u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5206\u6790bug\u62a5\u544a\u4e2d\u7684\u7a0b\u5e8f\u5143\u7d20\u6765\u6307\u5bfc\u6a21\u7cca\u6d4b\u8bd5\u53d1\u73b0\u7c7b\u4f3cbug\uff0c\u5728GCC\u548cLLVM\u4e2d\u53d1\u73b0\u4e8665\u4e2a\u65b0bug", "motivation": "\u7f16\u8bd1\u5668bug\u5f71\u54cd\u5de8\u5927\uff0c\u73b0\u6709\u53d8\u5f02\u6a21\u7cca\u6d4b\u8bd5\u5668\u7684\u6548\u679c\u53d6\u51b3\u4e8e\u53d8\u5f02\u7b97\u5b50\u8d28\u91cf\uff0c\u4f46\u4e4b\u524d\u6ca1\u6709\u5de5\u4f5c\u5229\u7528\u7f16\u8bd1\u5668bug\u5386\u53f2\u4f5c\u4e3a\u53d8\u5f02\u7b97\u5b50\u6765\u6e90", "method": "\u81ea\u52a8\u5316\u4ecebug\u62a5\u544a\u4e2d\u6316\u6398\u53d8\u5f02\u7b97\u5b50\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7b97\u5b50\u96c6\u6210\u5230\u73b0\u6709\u53d8\u5f02\u7f16\u8bd1\u5668\u6a21\u7cca\u6d4b\u8bd5\u5668\u4e2d", "result": "\u4ece1760\u4e2aGCC\u548cLLVM bug\u62a5\u544a\u4e2d\u6316\u6398587\u4e2a\u53d8\u5f02\u7b97\u5b50\uff0c\u53d1\u73b0\u4e8628\u4e2aGCC\u65b0bug\u548c37\u4e2aLLVM\u65b0bug\uff0c\u5176\u4e2d60\u4e2a\u88ab\u786e\u8ba4\u6216\u4fee\u590d", "conclusion": "bug\u5386\u53f2\u5305\u542b\u4e30\u5bcc\u4fe1\u606f\uff0c\u7f16\u8bd1\u5668\u6a21\u7cca\u6d4b\u8bd5\u5668\u5e94\u8be5\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u53d1\u73b0\u66f4\u591abug"}}
{"id": "2510.07983", "categories": ["cs.DB", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.07983", "abs": "https://arxiv.org/abs/2510.07983", "authors": ["Xianghong Xu", "Rong Kang", "Xiao He", "Lei Zhang", "Jianjun Chen", "Tieying Zhang"], "title": "ZeroCard: Cardinality Estimation with Zero Dependence on Target Databases -- No Data, No Query, No Retraining", "comment": null, "summary": "Cardinality estimation is a fundamental task in database systems and plays a\ncritical role in query optimization. Despite significant advances in\nlearning-based cardinality estimation methods, most existing approaches remain\ndifficult to generalize to new datasets due to their strong dependence on raw\ndata or queries, thus limiting their practicality in real scenarios. To\novercome these challenges, we argue that semantics in the schema may benefit\ncardinality estimation, and leveraging such semantics may alleviate these\ndependencies. To this end, we introduce ZeroCard, the first semantics-driven\ncardinality estimation method that can be applied without any dependence on raw\ndata access, query logs, or retraining on the target database. Specifically, we\npropose to predict data distributions using schema semantics, thereby avoiding\nraw data dependence. Then, we introduce a query template-agnostic\nrepresentation method to alleviate query dependence. Finally, we construct a\nlarge-scale query dataset derived from real-world tables and pretrain ZeroCard\non it, enabling it to learn cardinality from schema semantics and predicate\nrepresentations. After pretraining, ZeroCard's parameters can be frozen and\napplied in an off-the-shelf manner. We conduct extensive experiments to\ndemonstrate the distinct advantages of ZeroCard and show its practical\napplications in query optimization. Its zero-dependence property significantly\nfacilitates deployment in real-world scenarios.", "AI": {"tldr": "ZeroCard\u662f\u9996\u4e2a\u57fa\u4e8e\u8bed\u4e49\u7684\u57fa\u6570\u4f30\u8ba1\u65b9\u6cd5\uff0c\u65e0\u9700\u8bbf\u95ee\u539f\u59cb\u6570\u636e\u3001\u67e5\u8be2\u65e5\u5fd7\u6216\u5728\u76ee\u6807\u6570\u636e\u5e93\u4e0a\u91cd\u65b0\u8bad\u7ec3\uff0c\u901a\u8fc7\u6a21\u5f0f\u8bed\u4e49\u9884\u6d4b\u6570\u636e\u5206\u5e03\uff0c\u5b9e\u73b0\u96f6\u4f9d\u8d56\u90e8\u7f72\u3002", "motivation": "\u73b0\u6709\u5b66\u4e60\u65b9\u6cd5\u4e25\u91cd\u4f9d\u8d56\u539f\u59cb\u6570\u636e\u6216\u67e5\u8be2\uff0c\u96be\u4ee5\u6cdb\u5316\u5230\u65b0\u6570\u636e\u96c6\uff0c\u9650\u5236\u4e86\u5b9e\u9645\u5e94\u7528\u3002\u5229\u7528\u6a21\u5f0f\u8bed\u4e49\u53ef\u80fd\u7f13\u89e3\u8fd9\u4e9b\u4f9d\u8d56\u95ee\u9898\u3002", "method": "\u4f7f\u7528\u6a21\u5f0f\u8bed\u4e49\u9884\u6d4b\u6570\u636e\u5206\u5e03\u4ee5\u907f\u514d\u539f\u59cb\u6570\u636e\u4f9d\u8d56\uff1b\u5f15\u5165\u67e5\u8be2\u6a21\u677f\u65e0\u5173\u7684\u8868\u793a\u65b9\u6cd5\u51cf\u8f7b\u67e5\u8be2\u4f9d\u8d56\uff1b\u5728\u5927\u89c4\u6a21\u771f\u5b9e\u8868\u67e5\u8be2\u6570\u636e\u96c6\u4e0a\u9884\u8bad\u7ec3\uff0c\u4ece\u6a21\u5f0f\u8bed\u4e49\u548c\u8c13\u8bcd\u8868\u793a\u5b66\u4e60\u57fa\u6570\u3002", "result": "\u5b9e\u9a8c\u8bc1\u660eZeroCard\u5177\u6709\u663e\u8457\u4f18\u52bf\uff0c\u5176\u96f6\u4f9d\u8d56\u7279\u6027\u6781\u5927\u4fc3\u8fdb\u4e86\u5b9e\u9645\u90e8\u7f72\u3002", "conclusion": "ZeroCard\u901a\u8fc7\u8bed\u4e49\u9a71\u52a8\u65b9\u6cd5\u6210\u529f\u89e3\u51b3\u4e86\u57fa\u6570\u4f30\u8ba1\u4e2d\u7684\u6570\u636e\u4f9d\u8d56\u95ee\u9898\uff0c\u4e3a\u67e5\u8be2\u4f18\u5316\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.08180", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08180", "abs": "https://arxiv.org/abs/2510.08180", "authors": ["Natalie Carl", "Tobias Pfandzelter", "David Bermbach"], "title": "Towards Energy-Efficient Serverless Computing with Hardware Isolation", "comment": null, "summary": "Serverless computing provides just-in-time infrastructure provisioning with\nrapid elasticity and a finely-grained pricing model. As full control of\nresource allocation is in the hands of the cloud provider and applications only\nconsume resources when they actually perform work, we believe that serverless\ncomputing is uniquely positioned to maximize energy efficiency.\n  However, the focus of current serverless platforms is to run hundreds or\nthousands of serverless functions from different tenants on traditional server\nhardware, requiring expensive software isolation mechanisms and a high degree\nof overprovisioning, i.e., idle servers, to anticipate load spikes. With shared\ncaches, high clock frequencies, and many-core architectures, servers today are\noptimized for large, singular workloads but not to run thousands of isolated\nfunctions.\n  We propose rethinking the serverless hardware architecture to align it with\nthe requirements of serverless software. Specifically, we propose using\nhardware isolation with individual processors per function instead of software\nisolation resulting in a serverless hardware stack that consumes energy only\nwhen an application actually performs work. In preliminary evaluation with real\nhardware and a typical serverless workload we find that this could reduce\nenergy consumption overheads by 90.63% or an average 70.8MW.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u91cd\u65b0\u8bbe\u8ba1\u65e0\u670d\u52a1\u5668\u8ba1\u7b97\u7684\u786c\u4ef6\u67b6\u6784\uff0c\u4f7f\u7528\u786c\u4ef6\u9694\u79bb\u800c\u975e\u8f6f\u4ef6\u9694\u79bb\u6765\u8fd0\u884c\u65e0\u670d\u52a1\u5668\u51fd\u6570\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u80fd\u8017\u3002", "motivation": "\u5f53\u524d\u65e0\u670d\u52a1\u5668\u5e73\u53f0\u5728\u4f20\u7edf\u670d\u52a1\u5668\u786c\u4ef6\u4e0a\u8fd0\u884c\u5927\u91cf\u51fd\u6570\uff0c\u9700\u8981\u6602\u8d35\u7684\u8f6f\u4ef6\u9694\u79bb\u673a\u5236\u548c\u9ad8\u5ea6\u7684\u8fc7\u5ea6\u914d\u7f6e\uff0c\u5bfc\u81f4\u80fd\u6e90\u6548\u7387\u4f4e\u4e0b\u3002", "method": "\u91c7\u7528\u786c\u4ef6\u9694\u79bb\u65b9\u6cd5\uff0c\u4e3a\u6bcf\u4e2a\u51fd\u6570\u5206\u914d\u72ec\u7acb\u5904\u7406\u5668\uff0c\u6784\u5efa\u53ea\u5728\u5e94\u7528\u5b9e\u9645\u5de5\u4f5c\u65f6\u6d88\u8017\u80fd\u6e90\u7684\u65e0\u670d\u52a1\u5668\u786c\u4ef6\u5806\u6808\u3002", "result": "\u521d\u6b65\u8bc4\u4f30\u663e\u793a\uff0c\u8be5\u65b9\u6cd5\u53ef\u5c06\u80fd\u8017\u5f00\u9500\u51cf\u5c1190.63%\uff0c\u5e73\u5747\u8282\u770170.8MW\u3002", "conclusion": "\u91cd\u65b0\u8bbe\u8ba1\u65e0\u670d\u52a1\u5668\u786c\u4ef6\u67b6\u6784\u4ee5\u5339\u914d\u8f6f\u4ef6\u9700\u6c42\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u80fd\u6e90\u6548\u7387\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u6309\u9700\u80fd\u8017\u3002"}}
{"id": "2510.07941", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07941", "abs": "https://arxiv.org/abs/2510.07941", "authors": ["Srijita Basu", "Haraldsson Bengt", "Miroslaw Staron", "Christian Berger", "Jennifer Horkoff", "Magnus Almgren"], "title": "An AUTOSAR-Aligned Architectural Study of Vulnerabilities in Automotive SoC Software", "comment": "16 pages, 7 figures, 18th International Conference on the Quality of\n  Information and Communications Technology", "summary": "Cooperative, Connected and Automated Mobility (CCAM) are complex\ncyber-physical systems (CPS) that integrate computation, communication, and\ncontrol in safety-critical environments. At their core, System-on-Chip (SoC)\nplatforms consolidate processing units, communication interfaces, AI\naccelerators, and security modules into a single chip. AUTOSAR (AUTomotive Open\nSystem ARchitecture) standard was developed in the automotive domain to better\nmanage this complexity, defining layered software structures and interfaces to\nfacilitate reuse of HW/SW components. However, in practice, this integrated SoC\nsoftware architecture still poses security challenges, particularly in\nreal-time, safety-critical environments. Recent reports highlight a surge in\nSoC-related vulnerabilities, yet systematic analysis of their root causes and\nimpact within AUTOSAR-aligned architectures is lacking. This study fills that\ngap by analyzing 180 publicly reported automotive SoC vulnerabilities, mapped\nto a representative SoC software architecture model that is aligned with\nAUTOSAR principles for layered abstraction and service orientation. We identify\n16 root causes and 56 affected software modules, and examine mitigation delays\nacross Common Weakness Enumeration (CWE) categories and architectural layers.\nWe uncover dominant vulnerability patterns and critical modules with prolonged\npatch delays, and provide actionable insights for securing automotive CPS\nplatforms, including guides for improved detection, prioritization, and\nlocalization strategies for SoC software architectures in SoC-based vehicle\nplatforms.", "AI": {"tldr": "\u8be5\u7814\u7a76\u5206\u6790\u4e86180\u4e2a\u516c\u5f00\u62a5\u544a\u7684\u6c7d\u8f66SoC\u6f0f\u6d1e\uff0c\u8bc6\u522b\u4e8616\u4e2a\u6839\u672c\u539f\u56e0\u548c56\u4e2a\u53d7\u5f71\u54cd\u8f6f\u4ef6\u6a21\u5757\uff0c\u63ed\u793a\u4e86\u4e3b\u8981\u6f0f\u6d1e\u6a21\u5f0f\u548c\u5173\u952e\u6a21\u5757\u7684\u8865\u4e01\u5ef6\u8fdf\u95ee\u9898\uff0c\u4e3a\u6c7d\u8f66CPS\u5e73\u53f0\u5b89\u5168\u63d0\u4f9b\u4e86\u6539\u8fdb\u68c0\u6d4b\u3001\u4f18\u5148\u7ea7\u6392\u5e8f\u548c\u5b9a\u4f4d\u7b56\u7565\u7684\u6307\u5bfc\u3002", "motivation": "\u6c7d\u8f66SoC\u8f6f\u4ef6\u67b6\u6784\u5728\u5b9e\u65f6\u5b89\u5168\u5173\u952e\u73af\u5883\u4e2d\u5b58\u5728\u5b89\u5168\u6311\u6218\uff0c\u4e14\u7f3a\u4e4f\u5bf9AUTOSAR\u5bf9\u9f50\u67b6\u6784\u4e2dSoC\u6f0f\u6d1e\u6839\u672c\u539f\u56e0\u548c\u5f71\u54cd\u7684\u7cfb\u7edf\u6027\u5206\u6790\u3002", "method": "\u5206\u6790180\u4e2a\u516c\u5f00\u62a5\u544a\u7684\u6c7d\u8f66SoC\u6f0f\u6d1e\uff0c\u6620\u5c04\u5230\u7b26\u5408AUTOSAR\u539f\u5219\u7684\u4ee3\u8868\u6027SoC\u8f6f\u4ef6\u67b6\u6784\u6a21\u578b\uff0c\u8bc6\u522b\u6839\u672c\u539f\u56e0\u548c\u53d7\u5f71\u54cd\u6a21\u5757\uff0c\u68c0\u67e5CWE\u7c7b\u522b\u548c\u67b6\u6784\u5c42\u7684\u7f13\u89e3\u5ef6\u8fdf\u3002", "result": "\u8bc6\u522b\u4e8616\u4e2a\u6839\u672c\u539f\u56e0\u548c56\u4e2a\u53d7\u5f71\u54cd\u8f6f\u4ef6\u6a21\u5757\uff0c\u63ed\u793a\u4e86\u4e3b\u5bfc\u6f0f\u6d1e\u6a21\u5f0f\u548c\u8865\u4e01\u5ef6\u8fdf\u8f83\u957f\u7684\u5173\u952e\u6a21\u5757\u3002", "conclusion": "\u4e3a\u57fa\u4e8eSoC\u7684\u8f66\u8f86\u5e73\u53f0SoC\u8f6f\u4ef6\u67b6\u6784\u63d0\u4f9b\u4e86\u6539\u8fdb\u68c0\u6d4b\u3001\u4f18\u5148\u7ea7\u6392\u5e8f\u548c\u5b9a\u4f4d\u7b56\u7565\u7684\u53ef\u64cd\u4f5c\u89c1\u89e3\uff0c\u6709\u52a9\u4e8e\u63d0\u5347\u6c7d\u8f66CPS\u5e73\u53f0\u7684\u5b89\u5168\u6027\u3002"}}
{"id": "2510.08489", "categories": ["cs.DB", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.08489", "abs": "https://arxiv.org/abs/2510.08489", "authors": ["Immanuel Trummer"], "title": "Implementing Semantic Join Operators Efficiently", "comment": null, "summary": "Semantic query processing engines often support semantic joins, enabling\nusers to match rows that satisfy conditions specified in natural language. Such\njoin conditions can be evaluated using large language models (LLMs) that solve\nnovel tasks without task-specific training.\n  Currently, many semantic query processing engines implement semantic joins\nvia nested loops, invoking the LLM to evaluate the join condition on row pairs.\nInstead, this paper proposes a novel algorithm, inspired by the block nested\nloops join operator implementation in traditional database systems. The\nproposed algorithm integrates batches of rows from both input tables into a\nsingle prompt. The goal of the LLM invocation is to identify all matching row\npairs in the current input. The paper introduces formulas that can be used to\noptimize the size of the row batches, taking into account constraints on the\nsize of the LLM context window (limiting both input and output size). An\nadaptive variant of the proposed algorithm refers to cases in which the size of\nthe output is difficult to estimate. A formal analysis of asymptotic processing\ncosts, as well as empirical results, demonstrates that the proposed approach\nreduces costs significantly and performs well compared to join implementations\nused by recent semantic query processing engines.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5757\u5d4c\u5957\u5faa\u73af\u8fde\u63a5\u7684\u8bed\u4e49\u8fde\u63a5\u7b97\u6cd5\uff0c\u901a\u8fc7\u5c06\u6279\u91cf\u884c\u6570\u636e\u6574\u5408\u5230\u5355\u4e2a\u63d0\u793a\u4e2d\u6765\u4f18\u5316LLM\u8c03\u7528\uff0c\u663e\u8457\u964d\u4f4e\u4e86\u5904\u7406\u6210\u672c\u3002", "motivation": "\u5f53\u524d\u8bed\u4e49\u67e5\u8be2\u5904\u7406\u5f15\u64ce\u901a\u8fc7\u5d4c\u5957\u5faa\u73af\u5b9e\u73b0\u8bed\u4e49\u8fde\u63a5\uff0c\u9700\u8981\u4e3a\u6bcf\u5bf9\u884c\u8c03\u7528LLM\uff0c\u6548\u7387\u4f4e\u4e0b\u3002\u672c\u6587\u65e8\u5728\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u51cf\u5c11LLM\u8c03\u7528\u6b21\u6570\u3002", "method": "\u53d7\u4f20\u7edf\u6570\u636e\u5e93\u5757\u5d4c\u5957\u5faa\u73af\u8fde\u63a5\u542f\u53d1\uff0c\u63d0\u51fa\u65b0\u7b97\u6cd5\u5c06\u4e24\u4e2a\u8f93\u5165\u8868\u7684\u6279\u91cf\u884c\u6574\u5408\u5230\u5355\u4e2a\u63d0\u793a\u4e2d\uff0c\u8ba9LLM\u4e00\u6b21\u6027\u8bc6\u522b\u6240\u6709\u5339\u914d\u884c\u5bf9\uff0c\u5e76\u5f15\u5165\u516c\u5f0f\u4f18\u5316\u6279\u6b21\u5927\u5c0f\u3002", "result": "\u6e10\u8fdb\u5904\u7406\u6210\u672c\u5206\u6790\u548c\u5b9e\u8bc1\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u663e\u8457\u964d\u4f4e\u4e86\u6210\u672c\uff0c\u6027\u80fd\u4f18\u4e8e\u8fd1\u671f\u8bed\u4e49\u67e5\u8be2\u5904\u7406\u5f15\u64ce\u4f7f\u7528\u7684\u8fde\u63a5\u5b9e\u73b0\u3002", "conclusion": "\u63d0\u51fa\u7684\u5757\u5f0f\u8bed\u4e49\u8fde\u63a5\u7b97\u6cd5\u901a\u8fc7\u6279\u91cf\u5904\u7406\u6709\u6548\u51cf\u5c11\u4e86LLM\u8c03\u7528\u6b21\u6570\uff0c\u5728\u8bed\u4e49\u67e5\u8be2\u5904\u7406\u4e2d\u5b9e\u73b0\u4e86\u663e\u8457\u7684\u6210\u672c\u4f18\u5316\u3002"}}
{"id": "2510.08228", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08228", "abs": "https://arxiv.org/abs/2510.08228", "authors": ["Quentin Renau", "Amjad Ullah", "Emma Hart"], "title": "Distributed Resource Selection for Self-Organising Cloud-Edge Systems", "comment": "This paper is accepted for publication in the 23rd IEEE International\n  Symposium on Network Computing and Applications", "summary": "This paper presents a distributed resource selection mechanism for diverse\ncloud-edge environments, enabling dynamic and context-aware allocation of\nresources to meet the demands of complex distributed applications. By\ndistributing the decision-making process, our approach ensures efficiency,\nscalability, and resilience in highly dynamic cloud-edge environments where\ncentralised coordination becomes a bottleneck. The proposed mechanism aims to\nfunction as a core component of a broader, distributed, and self-organising\norchestration system that facilitates the intelligent placement and adaptation\nof applications in real-time. This work leverages a consensus-based mechanism\nutilising local knowledge and inter-agent collaboration to achieve efficient\nresults without relying on a central controller, thus paving the way for\ndistributed orchestration. Our results indicate that computation time is the\nkey factor influencing allocation decisions. Our approach consistently delivers\nrapid allocations without compromising optimality or incurring additional cost,\nachieving timely results at scale where exhaustive search is infeasible and\ncentralised heuristics run up to 30 times slower.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5e03\u5f0f\u8d44\u6e90\u9009\u62e9\u673a\u5236\uff0c\u7528\u4e8e\u4e91\u8fb9\u73af\u5883\u4e2d\u7684\u52a8\u6001\u8d44\u6e90\u5206\u914d\uff0c\u901a\u8fc7\u5206\u5e03\u5f0f\u51b3\u7b56\u907f\u514d\u96c6\u4e2d\u5f0f\u534f\u8c03\u74f6\u9888\uff0c\u5b9e\u73b0\u9ad8\u6548\u3001\u53ef\u6269\u5c55\u548c\u5f39\u6027\u7684\u8d44\u6e90\u7ba1\u7406\u3002", "motivation": "\u5728\u9ad8\u5ea6\u52a8\u6001\u7684\u4e91\u8fb9\u73af\u5883\u4e2d\uff0c\u96c6\u4e2d\u5f0f\u534f\u8c03\u6210\u4e3a\u74f6\u9888\uff0c\u9700\u8981\u5206\u5e03\u5f0f\u51b3\u7b56\u673a\u5236\u6765\u6ee1\u8db3\u590d\u6742\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9700\u6c42\u3002", "method": "\u91c7\u7528\u57fa\u4e8e\u5171\u8bc6\u7684\u673a\u5236\uff0c\u5229\u7528\u672c\u5730\u77e5\u8bc6\u548c\u4ee3\u7406\u95f4\u534f\u4f5c\uff0c\u4e0d\u4f9d\u8d56\u4e2d\u592e\u63a7\u5236\u5668\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u7f16\u6392\u3002", "result": "\u8ba1\u7b97\u65f6\u95f4\u662f\u5f71\u54cd\u5206\u914d\u51b3\u7b56\u7684\u5173\u952e\u56e0\u7d20\uff0c\u8be5\u65b9\u6cd5\u5728\u4fdd\u6301\u6700\u4f18\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u5feb\u901f\u5206\u914d\uff0c\u6bd4\u96c6\u4e2d\u5f0f\u542f\u53d1\u5f0f\u65b9\u6cd5\u5feb\u8fbe30\u500d\u3002", "conclusion": "\u8be5\u673a\u5236\u4e3a\u5206\u5e03\u5f0f\u7f16\u6392\u94fa\u5e73\u4e86\u9053\u8def\uff0c\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u80fd\u591f\u53ca\u65f6\u63d0\u4f9b\u7ed3\u679c\uff0c\u800c\u7a77\u4e3e\u641c\u7d22\u4e0d\u53ef\u884c\u3002"}}
{"id": "2510.08005", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.08005", "abs": "https://arxiv.org/abs/2510.08005", "authors": ["Utku Boran Torun", "Mehmet Taha Demircan", "Mahmut Furkan G\u00f6n", "Eray T\u00fcz\u00fcn"], "title": "Past, Present, and Future of Bug Tracking in the Generative AI Era", "comment": "Submitted to ACM TOSEM Special Issue: 2030 Software Engineering\n  Roadmap", "summary": "Traditional bug tracking systems rely heavily on manual reporting,\nreproduction, triaging, and resolution, each carried out by different\nstakeholders such as end users, customer support, developers, and testers. This\ndivision of responsibilities requires significant coordination and widens the\ncommunication gap between non-technical users and technical teams, slowing the\nprocess from bug discovery to resolution. Moreover, current systems are highly\nasynchronous; users often wait hours or days for a first response, delaying\nfixes and contributing to frustration. This paper examines the evolution of bug\ntracking, from early paper-based reporting to today's web-based and SaaS\nplatforms. Building on this trajectory, we propose an AI-powered bug tracking\nframework that augments existing tools with intelligent, large language model\n(LLM)-driven automation. Our framework addresses two main challenges: reducing\ntime-to-fix and minimizing human overhead. Users report issues in natural\nlanguage, while AI agents refine reports, attempt reproduction, and request\nmissing details. Reports are then classified, invalid ones resolved through\nno-code fixes, and valid ones localized and assigned to developers. LLMs also\ngenerate candidate patches, with human oversight ensuring correctness. By\nintegrating automation into each phase, our framework accelerates response\ntimes, improves collaboration, and strengthens software maintenance practices\nfor a more efficient, user-centric future.", "AI": {"tldr": "\u63d0\u51fa\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684AI\u9a71\u52a8bug\u8ffd\u8e2a\u6846\u67b6\uff0c\u901a\u8fc7\u667a\u80fd\u81ea\u52a8\u5316\u51cf\u5c11\u4fee\u590d\u65f6\u95f4\u548c\u4eba\u5de5\u5f00\u9500\uff0c\u6539\u5584\u4f20\u7edfbug\u8ffd\u8e2a\u7cfb\u7edf\u7684\u6548\u7387\u95ee\u9898\u3002", "motivation": "\u4f20\u7edfbug\u8ffd\u8e2a\u7cfb\u7edf\u4f9d\u8d56\u4eba\u5de5\u62a5\u544a\u3001\u590d\u73b0\u3001\u5206\u7c7b\u548c\u89e3\u51b3\uff0c\u6d89\u53ca\u591a\u65b9\u534f\u4f5c\uff0c\u6c9f\u901a\u6210\u672c\u9ad8\u4e14\u54cd\u5e94\u5ef6\u8fdf\uff0c\u5bfc\u81f4\u4fee\u590d\u5468\u671f\u957f\u3002", "method": "\u7528\u6237\u7528\u81ea\u7136\u8bed\u8a00\u62a5\u544a\u95ee\u9898\uff0cAI\u4ee3\u7406\u5b8c\u5584\u62a5\u544a\u3001\u5c1d\u8bd5\u590d\u73b0\u3001\u8bf7\u6c42\u8865\u5145\u4fe1\u606f\uff0c\u81ea\u52a8\u5206\u7c7b\u62a5\u544a\uff0c\u65e0\u6548\u62a5\u544a\u901a\u8fc7\u65e0\u4ee3\u7801\u4fee\u590d\u89e3\u51b3\uff0c\u6709\u6548\u62a5\u544a\u5b9a\u4f4d\u5e76\u5206\u914d\u7ed9\u5f00\u53d1\u8005\uff0cLLM\u751f\u6210\u5019\u9009\u8865\u4e01\uff0c\u4eba\u5de5\u76d1\u7763\u786e\u4fdd\u6b63\u786e\u6027\u3002", "result": "\u6846\u67b6\u5728\u6bcf\u4e2a\u9636\u6bb5\u96c6\u6210\u81ea\u52a8\u5316\uff0c\u52a0\u901f\u54cd\u5e94\u65f6\u95f4\uff0c\u6539\u5584\u534f\u4f5c\uff0c\u589e\u5f3a\u8f6f\u4ef6\u7ef4\u62a4\u5b9e\u8df5\u3002", "conclusion": "AI\u9a71\u52a8\u7684bug\u8ffd\u8e2a\u6846\u67b6\u901a\u8fc7\u667a\u80fd\u81ea\u52a8\u5316\u5b9e\u73b0\u66f4\u9ad8\u6548\u3001\u4ee5\u7528\u6237\u4e3a\u4e2d\u5fc3\u7684\u672a\u6765\u8f6f\u4ef6\u7ef4\u62a4\u3002"}}
{"id": "2510.08244", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.08244", "abs": "https://arxiv.org/abs/2510.08244", "authors": ["Dominick Banasik", "Varsha Dani", "Fabien Dufoulon", "Aayush Gupta", "Thomas P. Hayes", "Gopal Pandurangan"], "title": "Energy-Efficient Maximal Independent Sets in Radio Networks", "comment": null, "summary": "The maximal independent set (MIS) is one of the most fundamental problems in\ndistributed computing, and it has been studied intensively for over four\ndecades. This paper focuses on the MIS problem in the Radio Network model, a\nstandard model widely used to model wireless networks, particularly ad hoc\nwireless and sensor networks. Energy is a premium resource in these networks,\nwhich are typically battery-powered. Hence, designing distributed algorithms\nthat use as little energy as possible is crucial. We use the well-established\nenergy model where a node can be sleeping or awake in a round, and only the\nawake rounds (when it can send or listen) determine the energy complexity of\nthe algorithm, which we want to minimize.\n  We present new, more energy-efficient MIS algorithms in radio networks with\narbitrary and unknown graph topology. We present algorithms for two popular\nvariants of the radio model -- with collision detection (CD) and without\ncollision detection (no-CD). Specifically, we obtain the following results:\n  1. CD model: We present a randomized distributed MIS algorithm with energy\ncomplexity $O(\\log n)$, round complexity $O(\\log^2 n)$, and failure probability\n$1 / poly(n)$, where $n$ is the network size. We show that our energy\ncomplexity is optimal by showing a matching $\\Omega(\\log n)$ lower bound.\n  2. no-CD model: In the more challenging no-CD model, we present a randomized\ndistributed MIS algorithm with energy complexity $O(\\log^2n \\log \\log n)$,\nround complexity $O(\\log^3 n \\log \\Delta)$, and failure probability $1 /\npoly(n)$. The energy complexity of our algorithm is significantly lower than\nthe round (and energy) complexity of $O(\\log^3 n)$ of the best known\ndistributed MIS algorithm of Davies [PODC 2023] for arbitrary graph topology.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u5728\u65e0\u7ebf\u7f51\u7edc\u6a21\u578b\u4e2d\u66f4\u8282\u80fd\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff08MIS\uff09\u5206\u5e03\u5f0f\u7b97\u6cd5\uff0c\u9488\u5bf9\u6709\u78b0\u649e\u68c0\u6d4b\u548c\u65e0\u78b0\u649e\u68c0\u6d4b\u4e24\u79cd\u6a21\u578b\uff0c\u5206\u522b\u5b9e\u73b0\u4e86O(log n)\u548cO(log\u00b2n log log n)\u7684\u80fd\u91cf\u590d\u6742\u5ea6\u3002", "motivation": "\u65e0\u7ebf\u7f51\u7edc\u901a\u5e38\u7531\u7535\u6c60\u4f9b\u7535\uff0c\u80fd\u91cf\u662f\u5b9d\u8d35\u8d44\u6e90\u3002\u8bbe\u8ba1\u80fd\u91cf\u6d88\u8017\u5c3d\u53ef\u80fd\u5c11\u7684\u5206\u5e03\u5f0f\u7b97\u6cd5\u5bf9\u5ef6\u957f\u7f51\u7edc\u5bff\u547d\u81f3\u5173\u91cd\u8981\u3002", "method": "\u4f7f\u7528\u968f\u673a\u5316\u5206\u5e03\u5f0f\u7b97\u6cd5\uff0c\u5728\u65e0\u7ebf\u7f51\u7edc\u6a21\u578b\u4e2d\u8003\u8651\u8282\u70b9\u7761\u7720\u548c\u5524\u9192\u72b6\u6001\uff0c\u4ec5\u8ba1\u7b97\u5524\u9192\u8f6e\u6b21\u4f5c\u4e3a\u80fd\u91cf\u590d\u6742\u5ea6\u3002\u9488\u5bf9\u6709\u78b0\u649e\u68c0\u6d4b\u548c\u65e0\u78b0\u649e\u68c0\u6d4b\u4e24\u79cd\u6a21\u578b\u5206\u522b\u8bbe\u8ba1\u7b97\u6cd5\u3002", "result": "1. \u6709\u78b0\u649e\u68c0\u6d4b\u6a21\u578b\uff1a\u80fd\u91cf\u590d\u6742\u5ea6O(log n)\uff0c\u8f6e\u590d\u6742\u5ea6O(log\u00b2 n)\uff0c\u5931\u8d25\u6982\u73871/poly(n)\uff0c\u80fd\u91cf\u590d\u6742\u5ea6\u88ab\u8bc1\u660e\u662f\u6700\u4f18\u7684\u30022. \u65e0\u78b0\u649e\u68c0\u6d4b\u6a21\u578b\uff1a\u80fd\u91cf\u590d\u6742\u5ea6O(log\u00b2n log log n)\uff0c\u8f6e\u590d\u6742\u5ea6O(log\u00b3 n log \u0394)\uff0c\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u6700\u4f73\u7b97\u6cd5\u7684O(log\u00b3 n)\u590d\u6742\u5ea6\u3002", "conclusion": "\u63d0\u51fa\u7684\u7b97\u6cd5\u5728\u65e0\u7ebf\u7f51\u7edc\u6a21\u578b\u4e2d\u5b9e\u73b0\u4e86\u663e\u8457\u7684\u80fd\u91cf\u6548\u7387\u6539\u8fdb\uff0c\u7279\u522b\u662f\u5728\u6709\u78b0\u649e\u68c0\u6d4b\u6a21\u578b\u4e2d\u8fbe\u5230\u4e86\u6700\u4f18\u80fd\u91cf\u590d\u6742\u5ea6\uff0c\u4e3a\u80fd\u91cf\u53d7\u9650\u7684\u65e0\u7ebf\u7f51\u7edc\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684MIS\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.08200", "categories": ["cs.SE", "68N15", "D.2.13"], "pdf": "https://arxiv.org/pdf/2510.08200", "abs": "https://arxiv.org/abs/2510.08200", "authors": ["Alexander Hellwig", "Nico Jansen", "Bernhard Rumpe"], "title": "Building Whitespace-Sensitive Languages Using Whitespace-Insensitive Components", "comment": "11 pages, 4 figures, 6 listings", "summary": "In Software Language Engineering, there is a trend towards reusability by\ncomposing modular language components. However, this reusability is severely\ninhibited by a gap in integrating whitespace-sensitive and\nwhitespace-insensitive languages. There is currently no consistent procedure\nfor seamlessly reusing such language components in both cases, such that\nlibraries often cannot be reused, and whitespacesensitive languages are\ndeveloped from scratch. This paper presents a technique for using modular,\nwhitespaceinsensitive language modules to construct whitespace sensitive\nlanguages by pre-processing language artifacts before parsing. The approach is\nevaluated by reconstructing a simplified version of the programming language\nPython. Our solution aims to increase the reusability of existing language\ncomponents to reduce development time and increase the overall quality of\nsoftware languages.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u901a\u8fc7\u9884\u5904\u7406\u8bed\u8a00\u6784\u4ef6\u6765\u6784\u5efa\u7a7a\u683c\u654f\u611f\u8bed\u8a00\u7684\u6280\u672f\uff0c\u89e3\u51b3\u4e86\u7a7a\u683c\u654f\u611f\u548c\u4e0d\u654f\u611f\u8bed\u8a00\u7ec4\u4ef6\u4e4b\u95f4\u7684\u96c6\u6210\u5dee\u8ddd\u95ee\u9898\u3002", "motivation": "\u8f6f\u4ef6\u8bed\u8a00\u5de5\u7a0b\u4e2d\u6a21\u5757\u5316\u8bed\u8a00\u7ec4\u4ef6\u7684\u53ef\u91cd\u7528\u6027\u53d7\u5230\u7a7a\u683c\u654f\u611f\u4e0e\u4e0d\u654f\u611f\u8bed\u8a00\u96c6\u6210\u5dee\u8ddd\u7684\u9650\u5236\uff0c\u5bfc\u81f4\u5e93\u65e0\u6cd5\u91cd\u7528\u4e14\u7a7a\u683c\u654f\u611f\u8bed\u8a00\u9700\u8981\u4ece\u5934\u5f00\u53d1\u3002", "method": "\u901a\u8fc7\u9884\u5904\u7406\u8bed\u8a00\u6784\u4ef6\uff0c\u4f7f\u7528\u6a21\u5757\u5316\u7684\u7a7a\u683c\u4e0d\u654f\u611f\u8bed\u8a00\u6a21\u5757\u6765\u6784\u5efa\u7a7a\u683c\u654f\u611f\u8bed\u8a00\u3002", "result": "\u901a\u8fc7\u91cd\u6784\u7b80\u5316\u7248Python\u8bed\u8a00\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u8be5\u89e3\u51b3\u65b9\u6848\u63d0\u9ad8\u4e86\u73b0\u6709\u8bed\u8a00\u7ec4\u4ef6\u7684\u53ef\u91cd\u7528\u6027\uff0c\u51cf\u5c11\u4e86\u5f00\u53d1\u65f6\u95f4\u5e76\u63d0\u5347\u4e86\u8f6f\u4ef6\u8bed\u8a00\u7684\u6574\u4f53\u8d28\u91cf\u3002"}}
{"id": "2510.08536", "categories": ["cs.DC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.08536", "abs": "https://arxiv.org/abs/2510.08536", "authors": ["Gregor Olenik", "Marcel Koch", "Hartwig Anzt"], "title": "Investigating Matrix Repartitioning to Address the Over- and Undersubscription Challenge for a GPU-based CFD Solver", "comment": "2025 Workshop: HPC on Heterogeneous Hardware (H3)", "summary": "Modern high-performance computing (HPC) increasingly relies on GPUs, but\nintegrating GPU acceleration into complex scientific frameworks like OpenFOAM\nremains a challenge. Existing approaches either fully refactor the codebase or\nuse plugin-based GPU solvers, each facing trade-offs between performance and\ndevelopment effort. In this work, we address the limitations of plugin-based\nGPU acceleration in OpenFOAM by proposing a repartitioning strategy that better\nbalances CPU matrix assembly and GPU-based linear solves. We present a detailed\ncomputational model, describe a novel matrix repartitioning and update\nprocedure, and evaluate its performance on large-scale CFD simulations. Our\nresults show that the proposed method significantly mitigates oversubscription\nissues, improving solver performance and resource utilization in heterogeneous\nCPU-GPU environments.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u91cd\u65b0\u5206\u533a\u7b56\u7565\u6765\u6539\u8fdbOpenFOAM\u4e2d\u57fa\u4e8e\u63d2\u4ef6\u7684GPU\u52a0\u901f\u65b9\u6cd5\uff0c\u901a\u8fc7\u5e73\u8861CPU\u77e9\u9635\u7ec4\u88c5\u548cGPU\u7ebf\u6027\u6c42\u89e3\u6765\u7f13\u89e3\u8d44\u6e90\u8fc7\u5ea6\u8ba2\u9605\u95ee\u9898", "motivation": "\u73b0\u4ee3\u9ad8\u6027\u80fd\u8ba1\u7b97\u8d8a\u6765\u8d8a\u4f9d\u8d56GPU\uff0c\u4f46\u5c06GPU\u52a0\u901f\u96c6\u6210\u5230\u590d\u6742\u79d1\u5b66\u6846\u67b6\u5982OpenFOAM\u4e2d\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\u3002\u73b0\u6709\u65b9\u6cd5\u8981\u4e48\u5b8c\u5168\u91cd\u6784\u4ee3\u7801\u5e93\uff0c\u8981\u4e48\u4f7f\u7528\u57fa\u4e8e\u63d2\u4ef6\u7684GPU\u6c42\u89e3\u5668\uff0c\u5728\u6027\u80fd\u548c\u5f00\u53d1\u5de5\u4f5c\u91cf\u4e4b\u95f4\u5b58\u5728\u6743\u8861", "method": "\u63d0\u51fa\u4e86\u91cd\u65b0\u5206\u533a\u7b56\u7565\uff0c\u5305\u62ec\u8be6\u7ec6\u7684\u8ba1\u7b97\u6a21\u578b\u3001\u65b0\u9896\u7684\u77e9\u9635\u91cd\u65b0\u5206\u533a\u548c\u66f4\u65b0\u8fc7\u7a0b\uff0c\u4ee5\u66f4\u597d\u5730\u5e73\u8861CPU\u77e9\u9635\u7ec4\u88c5\u548c\u57fa\u4e8eGPU\u7684\u7ebf\u6027\u6c42\u89e3", "result": "\u5728\u5927\u89c4\u6a21CFD\u6a21\u62df\u4e2d\u8bc4\u4f30\u6027\u80fd\uff0c\u7ed3\u679c\u663e\u793a\u8be5\u65b9\u6cd5\u663e\u8457\u7f13\u89e3\u4e86\u8fc7\u5ea6\u8ba2\u9605\u95ee\u9898\uff0c\u63d0\u9ad8\u4e86\u5f02\u6784CPU-GPU\u73af\u5883\u4e2d\u7684\u6c42\u89e3\u5668\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387", "conclusion": "\u6240\u63d0\u51fa\u7684\u91cd\u65b0\u5206\u533a\u65b9\u6cd5\u6709\u6548\u6539\u8fdb\u4e86OpenFOAM\u4e2d\u57fa\u4e8e\u63d2\u4ef6\u7684GPU\u52a0\u901f\uff0c\u4e3a\u5f02\u6784\u8ba1\u7b97\u73af\u5883\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\u5e73\u8861"}}
